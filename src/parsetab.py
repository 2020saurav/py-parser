
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "v@\x96\xe9l\x88n\x00\x1c\xd2\xb7 \x13'\xf2\x96"
    
_lr_action_items = {'DEDENT':([26,31,35,37,41,42,75,97,99,100,109,114,122,124,125,133,134,135,136,145,146,148,],[-23,-22,-55,-57,-54,-56,-24,-25,-65,-63,-60,-5,-58,134,-68,-62,-66,-67,-64,-60,-59,-61,]),'STAREQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,74,77,86,87,88,89,90,91,92,95,108,],[-82,-79,-78,-89,-83,-90,65,-87,-81,-77,-80,-76,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-85,]),'ELIF':([75,97,99,109,134,145,],[-24,-25,-65,121,-66,121,]),'ENDMARKER':([0,2,20,26,31,33,35,37,41,42,75,97,99,100,109,114,122,133,134,136,145,146,148,],[-4,3,-2,-23,-22,-3,-55,-57,-54,-56,-24,-25,-65,-63,-60,-5,-58,-62,-66,-64,-60,-59,-61,]),'STARSTAREQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,74,77,86,87,88,89,90,91,92,95,108,],[-82,-79,-78,-89,-83,-90,68,-87,-81,-77,-80,-76,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-85,]),'LESS':([6,19,22,28,30,39,50,53,54,77,86,87,88,89,90,91,92,108,],[-82,-79,-78,-83,60,-81,60,-80,60,-84,60,60,60,60,60,60,60,-85,]),'GLOBAL':([0,2,20,26,31,33,35,37,41,42,75,76,78,84,97,99,100,101,109,112,114,122,123,124,125,126,133,134,135,136,140,141,145,146,148,],[-4,27,-2,-23,-22,-3,-55,-57,-54,-56,-24,27,27,27,-25,-65,-63,27,-60,27,-5,-58,27,27,-68,27,-62,-66,-67,-64,27,27,-60,-59,-61,]),'NUMBER':([0,2,4,7,8,11,12,14,20,21,25,26,27,31,33,35,37,41,42,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,78,84,85,94,97,99,100,101,107,109,112,114,115,121,122,123,124,125,126,133,134,135,136,140,141,143,145,146,148,],[-4,6,6,6,6,6,6,6,-2,6,6,-23,6,-22,-3,-55,-57,-54,-56,6,6,6,6,6,6,6,6,-41,-42,-40,-44,6,-39,-43,-45,6,-24,6,6,6,6,6,-25,-65,-63,6,6,-60,6,-5,6,6,-58,6,6,-68,6,-62,-66,-67,-64,6,6,6,-60,-59,-61,]),'ASSERT':([0,2,20,26,31,33,35,37,41,42,75,76,78,84,97,99,100,101,109,112,114,122,123,124,125,126,133,134,135,136,140,141,145,146,148,],[-4,7,-2,-23,-22,-3,-55,-57,-54,-56,-24,7,7,7,-25,-65,-63,7,-60,7,-5,-58,7,7,-68,7,-62,-66,-67,-64,7,7,-60,-59,-61,]),'WHILE':([0,2,20,26,31,33,35,37,41,42,75,97,99,100,109,112,114,122,124,125,133,134,135,136,145,146,148,],[-4,8,-2,-23,-22,-3,-55,-57,-54,-56,-24,-25,-65,-63,-60,8,-5,-58,8,-68,-62,-66,-67,-64,-60,-59,-61,]),'GREATER':([6,19,22,28,30,39,50,53,54,77,86,87,88,89,90,91,92,108,],[-82,-79,-78,-83,59,-81,59,-80,59,-84,59,59,59,59,59,59,59,-85,]),'PRINT':([0,2,20,26,31,33,35,37,41,42,75,76,78,84,97,99,100,101,109,112,114,122,123,124,125,126,133,134,135,136,140,141,145,146,148,],[-4,11,-2,-23,-22,-3,-55,-57,-54,-56,-24,11,11,11,-25,-65,-63,11,-60,11,-5,-58,11,11,-68,11,-62,-66,-67,-64,11,11,-60,-59,-61,]),'RETURN':([0,2,20,26,31,33,35,37,41,42,75,76,78,84,97,99,100,101,109,112,114,122,123,124,125,126,133,134,135,136,140,141,145,146,148,],[-4,12,-2,-23,-22,-3,-55,-57,-54,-56,-24,12,12,12,-25,-65,-63,12,-60,12,-5,-58,12,12,-68,12,-62,-66,-67,-64,12,12,-60,-59,-61,]),'PASS':([0,2,20,26,31,33,35,37,41,42,75,76,78,84,97,99,100,101,109,112,114,122,123,124,125,126,133,134,135,136,140,141,145,146,148,],[-4,13,-2,-23,-22,-3,-55,-57,-54,-56,-24,13,13,13,-25,-65,-63,13,-60,13,-5,-58,13,13,-68,13,-62,-66,-67,-64,13,13,-60,-59,-61,]),'MINUS':([0,2,4,6,7,8,11,12,14,19,20,21,22,25,26,27,28,30,31,33,35,37,39,41,42,50,52,53,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,94,97,99,100,101,107,108,109,112,114,115,121,122,123,124,125,126,133,134,135,136,140,141,143,145,146,148,],[-4,14,14,-82,14,14,14,14,14,-79,-2,14,-78,14,-23,14,-83,64,-22,-3,-55,-57,-81,-54,-56,64,14,-80,64,14,14,14,14,14,14,14,-41,-42,-40,-44,14,-39,-43,-45,14,-24,14,-84,14,14,14,64,64,64,64,64,64,64,14,-25,-65,-63,14,14,-85,-60,14,-5,14,14,-58,14,14,-68,14,-62,-66,-67,-64,14,14,14,-60,-59,-61,]),'DEF':([0,2,20,26,31,33,35,37,41,42,75,97,99,100,109,112,114,122,124,125,133,134,135,136,145,146,148,],[-4,15,-2,-23,-22,-3,-55,-57,-54,-56,-24,-25,-65,-63,-60,15,-5,-58,15,-68,-62,-66,-67,-64,-60,-59,-61,]),'RPAREN':([6,19,22,24,28,30,36,39,44,50,53,54,74,77,80,81,82,83,86,87,88,89,90,91,92,95,103,104,105,108,116,118,119,120,127,128,129,130,137,138,139,142,144,147,],[-82,-79,-78,-89,-83,-90,-87,-81,77,-77,-80,-76,-86,-84,102,-92,-93,108,-71,-75,-73,-74,-69,-72,-70,-88,-16,-13,117,-85,-12,-20,130,-91,-13,-11,-19,-17,-10,-14,-18,-9,-21,-15,]),'SEMI':([5,6,9,11,13,16,17,18,19,22,23,24,28,30,32,34,36,38,39,40,43,45,47,48,49,50,53,54,56,72,74,77,86,87,88,89,90,91,92,93,95,96,108,111,],[-27,-82,-50,-46,-52,-28,-32,-31,-79,-78,-30,-89,-83,-90,-37,-34,-87,-29,-81,-33,76,-49,-53,-47,-51,-77,-80,-76,-48,-36,-86,-84,-71,-75,-73,-74,-69,-72,-70,-35,-88,-26,-85,-38,]),'NEWLINE':([0,2,5,6,9,11,13,16,17,18,19,20,22,23,24,26,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,47,48,49,50,53,54,56,72,74,75,76,77,78,84,86,87,88,89,90,91,92,93,95,96,97,99,100,101,108,109,111,114,122,123,126,133,134,136,140,141,145,146,148,],[-4,20,-27,-82,-50,-46,-52,-28,-32,-31,-79,-2,-78,-30,-89,-23,-83,-90,-22,-37,-3,-34,-55,-87,-57,-29,-81,-33,-54,-56,75,-49,-53,-47,-51,-77,-80,-76,-48,-36,-86,-24,97,-84,98,98,-71,-75,-73,-74,-69,-72,-70,-35,-88,-26,-25,-65,-63,98,-85,-60,-38,-5,-58,98,98,-62,-66,-64,98,98,-60,-59,-61,]),'COLON':([6,19,22,28,30,39,46,50,53,54,55,77,79,86,87,88,89,90,91,92,102,108,110,113,117,131,132,],[-82,-79,-78,-83,-90,-81,78,-77,-80,-76,84,-84,101,-71,-75,-73,-74,-69,-72,-70,-6,-85,123,126,-7,140,141,]),'PERCENTEQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,74,77,86,87,88,89,90,91,92,95,108,],[-82,-79,-78,-89,-83,-90,71,-87,-81,-77,-80,-76,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-85,]),'PLUS':([0,2,4,6,7,8,11,12,14,19,20,21,22,25,26,27,28,30,31,33,35,37,39,41,42,50,52,53,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,84,85,86,87,88,89,90,91,92,94,97,99,100,101,107,108,109,112,114,115,121,122,123,124,125,126,133,134,135,136,140,141,143,145,146,148,],[-4,21,21,-82,21,21,21,21,21,-79,-2,21,-78,21,-23,21,-83,62,-22,-3,-55,-57,-81,-54,-56,62,21,-80,62,21,21,21,21,21,21,21,-41,-42,-40,-44,21,-39,-43,-45,21,-24,21,-84,21,21,21,62,62,62,62,62,62,62,21,-25,-65,-63,21,21,-85,-60,21,-5,21,21,-58,21,21,-68,21,-62,-66,-67,-64,21,21,21,-60,-59,-61,]),'IN':([57,],[85,]),'EQEQUAL':([6,19,22,28,30,39,50,53,54,77,86,87,88,89,90,91,92,108,],[-82,-79,-78,-83,61,-81,61,-80,61,-84,61,61,61,61,61,61,61,-85,]),'$end':([1,3,],[0,-1,]),'SLASHEQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,74,77,86,87,88,89,90,91,92,95,108,],[-82,-79,-78,-89,-83,-90,66,-87,-81,-77,-80,-76,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-85,]),'STRING':([0,2,4,7,8,11,12,14,20,21,25,26,27,31,33,35,37,41,42,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,78,84,85,94,97,99,100,101,107,109,112,114,115,121,122,123,124,125,126,133,134,135,136,140,141,143,145,146,148,],[-4,28,28,28,28,28,28,28,-2,28,28,-23,28,-22,-3,-55,-57,-54,-56,28,28,28,28,28,28,28,28,-41,-42,-40,-44,28,-39,-43,-45,28,-24,28,28,28,28,28,-25,-65,-63,28,28,-60,28,-5,28,28,-58,28,28,-68,28,-62,-66,-67,-64,28,28,28,-60,-59,-61,]),'FOR':([0,2,20,26,31,33,35,37,41,42,75,97,99,100,109,112,114,122,124,125,133,134,135,136,145,146,148,],[-4,29,-2,-23,-22,-3,-55,-57,-54,-56,-24,-25,-65,-63,-60,29,-5,-58,29,-68,-62,-66,-67,-64,-60,-59,-61,]),'EQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,72,74,77,86,87,88,89,90,91,92,95,103,104,108,111,130,138,],[-82,-79,-78,-89,-83,-90,-37,-87,-81,-77,-80,-76,94,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-16,115,-85,-38,-17,143,]),'PLUSEQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,74,77,86,87,88,89,90,91,92,95,108,],[-82,-79,-78,-89,-83,-90,70,-87,-81,-77,-80,-76,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-85,]),'STAR':([6,19,22,28,30,39,50,53,54,77,86,87,88,89,90,91,92,108,],[-82,-79,-78,-83,58,-81,58,-80,58,-84,58,58,58,58,58,58,58,-85,]),'LPAREN':([0,2,4,6,7,8,11,12,14,19,20,21,25,26,27,28,31,33,35,37,39,41,42,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,80,84,85,94,97,99,100,101,106,107,109,112,114,115,121,122,123,124,125,126,128,133,134,135,136,139,140,141,142,143,145,146,148,],[-4,4,4,-82,4,4,4,4,4,52,-2,4,4,-23,4,-83,-22,-3,-55,-57,-81,-54,-56,80,4,4,4,4,4,4,4,4,-41,-42,-40,-44,4,-39,-43,-45,4,-24,4,-84,4,106,4,4,4,-25,-65,-63,4,106,4,-60,4,-5,4,4,-58,4,4,-68,4,106,-62,-66,-67,-64,106,4,4,106,4,-60,-59,-61,]),'IMPORT':([0,2,20,26,31,33,35,37,41,42,75,76,78,84,97,99,100,101,109,112,114,122,123,124,125,126,133,134,135,136,140,141,145,146,148,],[-4,10,-2,-23,-22,-3,-55,-57,-54,-56,-24,10,10,10,-25,-65,-63,10,-60,10,-5,-58,10,10,-68,10,-62,-66,-67,-64,10,10,-60,-59,-61,]),'MINEQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,74,77,86,87,88,89,90,91,92,95,108,],[-82,-79,-78,-89,-83,-90,67,-87,-81,-77,-80,-76,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-85,]),'ELSE':([75,97,99,100,109,122,134,145,148,],[-24,-25,-65,113,-60,132,-66,-60,-61,]),'IF':([0,2,20,26,31,33,35,37,41,42,75,97,99,100,109,112,114,122,124,125,133,134,135,136,145,146,148,],[-4,25,-2,-23,-22,-3,-55,-57,-54,-56,-24,-25,-65,-63,-60,25,-5,-58,25,-68,-62,-66,-67,-64,-60,-59,-61,]),'INDENT':([98,],[112,]),'NAME':([0,2,4,7,8,10,11,12,14,15,20,21,25,26,27,29,31,33,35,37,41,42,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,78,80,84,85,94,97,99,100,101,106,107,109,112,114,115,121,122,123,124,125,126,128,133,134,135,136,139,140,141,142,143,145,146,148,],[-4,39,39,39,39,47,39,39,39,51,-2,39,39,-23,39,57,-22,-3,-55,-57,-54,-56,39,39,39,39,39,39,39,39,-41,-42,-40,-44,39,-39,-43,-45,39,-24,39,39,103,39,39,39,-25,-65,-63,39,103,39,-60,39,-5,39,39,-58,39,39,-68,39,103,-62,-66,-67,-64,103,39,39,103,39,-60,-59,-61,]),'SLASH':([6,19,22,28,30,39,50,53,54,77,86,87,88,89,90,91,92,108,],[-82,-79,-78,-83,63,-81,63,-80,63,-84,63,63,63,63,63,63,63,-85,]),'SLASHSLASHEQUAL':([6,19,22,24,28,30,32,36,39,50,53,54,74,77,86,87,88,89,90,91,92,95,108,],[-82,-79,-78,-89,-83,-90,73,-87,-81,-77,-80,-76,-86,-84,-71,-75,-73,-74,-69,-72,-70,-88,-85,]),'COMMA':([6,19,22,24,28,30,36,39,50,53,54,77,81,82,83,86,87,88,89,90,91,92,95,103,104,108,116,118,120,127,129,130,137,138,144,147,],[-82,-79,-78,-89,-83,-90,74,-81,-77,-80,-76,-84,-92,-93,107,-71,-75,-73,-74,-69,-72,-70,-88,-16,-13,-85,128,-20,-91,-13,139,-17,142,-14,-21,-15,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'small_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[5,96,5,5,5,5,5,5,5,5,5,]),'augassign':([32,],[69,]),'argument':([52,107,],[81,120,]),'fplist':([106,],[119,]),'return_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[9,9,9,9,9,9,9,9,9,9,9,]),'suite':([78,84,101,123,126,140,141,],[100,109,114,133,136,145,146,]),'arglist':([52,],[83,]),'flow_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[16,16,16,16,16,16,16,16,16,16,16,]),'expr_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[38,38,38,38,38,38,38,38,38,38,38,]),'elif_expr':([109,145,],[122,148,]),'parameters':([51,],[79,]),'stmts':([112,],[124,]),'fpdef':([80,106,128,139,142,],[104,118,138,144,138,]),'print_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[23,23,23,23,23,23,23,23,23,23,23,]),'test':([2,4,7,8,11,12,25,27,52,69,74,76,78,84,85,94,101,107,112,115,121,123,124,126,140,141,143,],[24,24,24,46,24,24,55,24,82,24,95,24,24,24,110,24,24,82,24,127,131,24,24,24,24,24,147,]),'global_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[40,40,40,40,40,40,40,40,40,40,40,]),'fpdeflist':([104,127,],[116,137,]),'compound_stmt':([2,112,124,],[26,26,26,]),'power':([2,4,7,8,11,12,14,21,25,27,52,58,59,60,61,62,63,64,69,74,76,78,84,85,94,101,107,112,115,121,123,124,126,140,141,143,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'simple_stmt':([2,78,84,101,112,123,124,126,140,141,],[31,99,99,99,31,99,31,99,99,99,]),'testlist':([2,4,7,11,12,27,69,76,78,84,94,101,112,123,124,126,140,141,],[32,44,45,48,49,56,93,32,32,32,111,32,32,32,32,32,32,32,]),'stmt':([2,112,124,],[33,125,135,]),'assert_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[34,34,34,34,34,34,34,34,34,34,34,]),'for_stmt':([2,112,124,],[35,35,35,]),'testlist_multi':([2,4,7,11,12,27,69,76,78,84,94,101,112,123,124,126,140,141,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'atom':([2,4,7,8,11,12,14,21,25,27,52,58,59,60,61,62,63,64,69,74,76,78,84,85,94,101,107,112,115,121,123,124,126,140,141,143,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'funcdef':([2,112,124,],[37,37,37,]),'import_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[17,17,17,17,17,17,17,17,17,17,17,]),'if_stmt':([2,112,124,],[41,41,41,]),'comparison':([2,4,7,8,11,12,14,21,25,27,52,58,59,60,61,62,63,64,69,74,76,78,84,85,94,101,107,112,115,121,123,124,126,140,141,143,],[30,30,30,30,30,30,50,54,30,30,30,86,87,88,89,90,91,92,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'pass_stmt':([2,76,78,84,101,112,123,124,126,140,141,],[18,18,18,18,18,18,18,18,18,18,18,]),'file_input':([0,],[1,]),'while_stmt':([2,112,124,],[42,42,42,]),'varargslist':([80,],[105,]),'fplist1':([118,],[129,]),'trailer':([19,],[53,]),'single_stmt':([0,],[2,]),'eqtestlist':([32,],[72,]),'small_stmts':([2,78,84,101,112,123,124,126,140,141,],[43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file_input","S'",1,None,None,None),
  ('file_input -> single_stmt ENDMARKER','file_input',2,'p_file_input','/home/saurav/sem6/335/asgn2/src/parser.py',10),
  ('single_stmt -> single_stmt NEWLINE','single_stmt',2,'p_single_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',14),
  ('single_stmt -> single_stmt stmt','single_stmt',2,'p_single_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',15),
  ('single_stmt -> <empty>','single_stmt',0,'p_single_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',16),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','/home/saurav/sem6/335/asgn2/src/parser.py',20),
  ('parameters -> LPAREN RPAREN','parameters',2,'p_parameters','/home/saurav/sem6/335/asgn2/src/parser.py',25),
  ('parameters -> LPAREN varargslist RPAREN','parameters',3,'p_parameters','/home/saurav/sem6/335/asgn2/src/parser.py',26),
  ('varargslist -> <empty>','varargslist',0,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',31),
  ('varargslist -> fpdef EQUAL test fpdeflist COMMA','varargslist',5,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',32),
  ('varargslist -> fpdef EQUAL test fpdeflist','varargslist',4,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',33),
  ('varargslist -> fpdef fpdeflist COMMA','varargslist',3,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',34),
  ('varargslist -> fpdef fpdeflist','varargslist',2,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',35),
  ('fpdeflist -> <empty>','fpdeflist',0,'p_fpdeflist','/home/saurav/sem6/335/asgn2/src/parser.py',39),
  ('fpdeflist -> fpdeflist COMMA fpdef','fpdeflist',3,'p_fpdeflist','/home/saurav/sem6/335/asgn2/src/parser.py',40),
  ('fpdeflist -> fpdeflist COMMA fpdef EQUAL test','fpdeflist',5,'p_fpdeflist','/home/saurav/sem6/335/asgn2/src/parser.py',41),
  ('fpdef -> NAME','fpdef',1,'p_fpdef','/home/saurav/sem6/335/asgn2/src/parser.py',46),
  ('fpdef -> LPAREN fplist RPAREN','fpdef',3,'p_fpdef','/home/saurav/sem6/335/asgn2/src/parser.py',47),
  ('fplist -> fpdef fplist1 COMMA','fplist',3,'p_fplist','/home/saurav/sem6/335/asgn2/src/parser.py',52),
  ('fplist -> fpdef fplist1','fplist',2,'p_fplist','/home/saurav/sem6/335/asgn2/src/parser.py',53),
  ('fplist1 -> <empty>','fplist1',0,'p_fplist1','/home/saurav/sem6/335/asgn2/src/parser.py',57),
  ('fplist1 -> fplist1 COMMA fpdef','fplist1',3,'p_fplist1','/home/saurav/sem6/335/asgn2/src/parser.py',58),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',63),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',64),
  ('simple_stmt -> small_stmts NEWLINE','simple_stmt',2,'p_simple_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',69),
  ('simple_stmt -> small_stmts SEMI NEWLINE','simple_stmt',3,'p_simple_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',70),
  ('small_stmts -> small_stmts SEMI small_stmt','small_stmts',3,'p_small_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',75),
  ('small_stmts -> small_stmt','small_stmts',1,'p_small_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',76),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',84),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',85),
  ('small_stmt -> print_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',86),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',87),
  ('small_stmt -> import_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',88),
  ('small_stmt -> global_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',89),
  ('small_stmt -> assert_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',90),
  ('expr_stmt -> testlist augassign testlist','expr_stmt',3,'p_expr_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',95),
  ('expr_stmt -> testlist eqtestlist','expr_stmt',2,'p_expr_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',96),
  ('eqtestlist -> <empty>','eqtestlist',0,'p_eqtestlist','/home/saurav/sem6/335/asgn2/src/parser.py',100),
  ('eqtestlist -> eqtestlist EQUAL testlist','eqtestlist',3,'p_eqtestlist','/home/saurav/sem6/335/asgn2/src/parser.py',101),
  ('augassign -> PLUSEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',106),
  ('augassign -> MINEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',107),
  ('augassign -> STAREQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',108),
  ('augassign -> SLASHEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',109),
  ('augassign -> PERCENTEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',110),
  ('augassign -> STARSTAREQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',111),
  ('augassign -> SLASHSLASHEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',112),
  ('print_stmt -> PRINT','print_stmt',1,'p_print_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',118),
  ('print_stmt -> PRINT testlist','print_stmt',2,'p_print_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',119),
  ('global_stmt -> GLOBAL testlist','global_stmt',2,'p_global_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',124),
  ('assert_stmt -> ASSERT testlist','assert_stmt',2,'p_assert_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',127),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',131),
  ('return_stmt -> RETURN testlist','return_stmt',2,'p_return_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',134),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',137),
  ('import_stmt -> IMPORT NAME','import_stmt',2,'p_import_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',140),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',143),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',144),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',145),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',146),
  ('if_stmt -> IF test COLON suite elif_expr','if_stmt',5,'p_if_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',148),
  ('if_stmt -> IF test COLON suite elif_expr ELSE COLON suite','if_stmt',8,'p_if_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',149),
  ('elif_expr -> <empty>','elif_expr',0,'p_elif_expr','/home/saurav/sem6/335/asgn2/src/parser.py',152),
  ('elif_expr -> ELIF test COLON suite elif_expr','elif_expr',5,'p_elif_expr','/home/saurav/sem6/335/asgn2/src/parser.py',153),
  ('for_stmt -> FOR NAME IN test COLON suite','for_stmt',6,'p_for_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',156),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',160),
  ('while_stmt -> WHILE test COLON suite ELSE COLON suite','while_stmt',7,'p_while_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',161),
  ('suite -> simple_stmt','suite',1,'p_suite','/home/saurav/sem6/335/asgn2/src/parser.py',164),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','/home/saurav/sem6/335/asgn2/src/parser.py',165),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',168),
  ('stmts -> stmt','stmts',1,'p_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',169),
  ('comparison -> comparison PLUS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',177),
  ('comparison -> comparison MINUS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',178),
  ('comparison -> comparison STAR comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',179),
  ('comparison -> comparison SLASH comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',180),
  ('comparison -> comparison LESS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',181),
  ('comparison -> comparison EQEQUAL comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',182),
  ('comparison -> comparison GREATER comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',183),
  ('comparison -> PLUS comparison','comparison',2,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',184),
  ('comparison -> MINUS comparison','comparison',2,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',185),
  ('comparison -> power','comparison',1,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',186),
  ('power -> atom','power',1,'p_power','/home/saurav/sem6/335/asgn2/src/parser.py',192),
  ('power -> atom trailer','power',2,'p_power','/home/saurav/sem6/335/asgn2/src/parser.py',193),
  ('atom -> NAME','atom',1,'p_atom_name','/home/saurav/sem6/335/asgn2/src/parser.py',196),
  ('atom -> NUMBER','atom',1,'p_atom_number','/home/saurav/sem6/335/asgn2/src/parser.py',199),
  ('atom -> STRING','atom',1,'p_atom_number','/home/saurav/sem6/335/asgn2/src/parser.py',200),
  ('atom -> LPAREN testlist RPAREN','atom',3,'p_atom_tuple','/home/saurav/sem6/335/asgn2/src/parser.py',203),
  ('trailer -> LPAREN arglist RPAREN','trailer',3,'p_trailer','/home/saurav/sem6/335/asgn2/src/parser.py',207),
  ('testlist -> testlist_multi COMMA','testlist',2,'p_testlist','/home/saurav/sem6/335/asgn2/src/parser.py',212),
  ('testlist -> testlist_multi','testlist',1,'p_testlist','/home/saurav/sem6/335/asgn2/src/parser.py',213),
  ('testlist_multi -> testlist_multi COMMA test','testlist_multi',3,'p_testlist_multi','/home/saurav/sem6/335/asgn2/src/parser.py',216),
  ('testlist_multi -> test','testlist_multi',1,'p_testlist_multi','/home/saurav/sem6/335/asgn2/src/parser.py',217),
  ('test -> comparison','test',1,'p_test','/home/saurav/sem6/335/asgn2/src/parser.py',222),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','/home/saurav/sem6/335/asgn2/src/parser.py',227),
  ('arglist -> argument','arglist',1,'p_arglist','/home/saurav/sem6/335/asgn2/src/parser.py',228),
  ('argument -> test','argument',1,'p_argument','/home/saurav/sem6/335/asgn2/src/parser.py',232),
]
