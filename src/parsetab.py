
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '>\xe4\xfeJ\xa3B>\xa9P\xff\\L\x04\x03\xa9#'
    
_lr_action_items = {'DEDENT':([21,24,27,29,33,35,63,84,86,87,94,98,103,105,106,111,112,113,114,117,118,119,],[-7,-6,-25,-27,-24,-26,-8,-9,-33,-35,-30,-39,-28,112,-38,-32,-36,-37,-34,-30,-29,-31,]),'ELIF':([63,84,87,94,112,117,],[-8,-9,-35,102,-36,102,]),'STAR':([13,16,22,31,32,38,44,47,48,65,76,77,78,79,80,81,82,93,],[-54,-53,-58,-56,53,-57,53,-55,53,-59,53,53,53,53,53,53,53,-60,]),'LPAREN':([0,1,4,7,8,9,13,14,15,20,21,22,24,26,27,29,31,33,34,35,38,45,46,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,72,73,84,86,87,88,92,94,96,98,102,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[1,1,1,1,1,1,46,-4,1,1,-7,-58,-6,-5,-25,-27,-56,-24,1,-26,-57,68,1,1,1,1,1,1,1,1,1,1,-2,-3,-8,1,-59,1,1,1,-9,-33,-35,1,1,-30,1,-39,1,-28,1,1,-38,1,-32,-36,-37,-34,1,1,-30,-29,-31,]),'LESS':([13,16,22,31,32,38,44,47,48,65,76,77,78,79,80,81,82,93,],[-54,-53,-58,-56,55,-57,55,-55,55,-59,55,55,55,55,55,55,55,-60,]),'IN':([50,],[73,]),'NUMBER':([0,1,4,7,8,9,14,15,20,21,24,26,27,29,33,34,35,46,51,52,53,54,55,56,57,58,59,61,62,63,64,66,72,73,84,86,87,88,92,94,96,98,102,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[38,38,38,38,38,38,-4,38,38,-7,-6,-5,-25,-27,-24,38,-26,38,38,38,38,38,38,38,38,38,38,-2,-3,-8,38,38,38,38,-9,-33,-35,38,38,-30,38,-39,38,-28,38,38,-38,38,-32,-36,-37,-34,38,38,-30,-29,-31,]),'WHILE':([0,14,21,24,26,27,29,33,34,35,61,62,63,84,86,87,94,96,98,103,105,106,111,112,113,114,117,118,119,],[4,-4,-7,-6,-5,-25,-27,-24,4,-26,-2,-3,-8,-9,-33,-35,-30,4,-39,-28,4,-38,-32,-36,-37,-34,-30,-29,-31,]),'IMPORT':([0,14,21,24,26,27,29,33,34,35,61,62,63,64,66,72,84,86,87,88,94,96,98,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[6,-4,-7,-6,-5,-25,-27,-24,6,-26,-2,-3,-8,6,6,6,-9,-33,-35,6,-30,6,-39,-28,6,6,-38,6,-32,-36,-37,-34,6,6,-30,-29,-31,]),'PRINT':([0,14,21,24,26,27,29,33,34,35,61,62,63,64,66,72,84,86,87,88,94,96,98,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[7,-4,-7,-6,-5,-25,-27,-24,7,-26,-2,-3,-8,7,7,7,-9,-33,-35,7,-30,7,-39,-28,7,7,-38,7,-32,-36,-37,-34,7,7,-30,-29,-31,]),'RETURN':([0,14,21,24,26,27,29,33,34,35,61,62,63,64,66,72,84,86,87,88,94,96,98,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[8,-4,-7,-6,-5,-25,-27,-24,8,-26,-2,-3,-8,8,8,8,-9,-33,-35,8,-30,8,-39,-28,8,8,-38,8,-32,-36,-37,-34,8,8,-30,-29,-31,]),'MINUS':([0,1,4,7,8,9,13,14,15,16,20,21,22,24,26,27,29,31,32,33,34,35,38,44,46,47,48,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,72,73,76,77,78,79,80,81,82,84,86,87,88,92,93,94,96,98,102,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[9,9,9,9,9,9,-54,-4,9,-53,9,-7,-58,-6,-5,-25,-27,-56,59,-24,9,-26,-57,59,9,-55,59,9,9,9,9,9,9,9,9,9,-2,-3,-8,9,-59,9,9,9,59,59,59,59,59,59,59,-9,-33,-35,9,9,-60,-30,9,-39,9,-28,9,9,-38,9,-32,-36,-37,-34,9,9,-30,-29,-31,]),'DEF':([0,14,21,24,26,27,29,33,34,35,61,62,63,84,86,87,94,96,98,103,105,106,111,112,113,114,117,118,119,],[10,-4,-7,-6,-5,-25,-27,-24,10,-26,-2,-3,-8,-9,-33,-35,-30,10,-39,-28,10,-38,-32,-36,-37,-34,-30,-29,-31,]),'RPAREN':([13,16,19,22,28,31,32,38,39,44,47,48,52,65,68,69,70,71,75,76,77,78,79,80,81,82,89,91,93,101,108,],[-54,-53,-64,-58,-62,-56,-65,-57,65,-52,-55,-51,-61,-59,90,-67,-68,93,-63,-46,-50,-48,-49,-44,-47,-45,100,-43,-60,-66,-42,]),'SEMI':([2,3,5,11,12,13,16,17,19,22,25,28,30,31,32,36,37,38,41,42,43,44,47,48,52,65,74,75,76,77,78,79,80,81,82,83,93,],[-11,-22,-19,-12,-15,-54,-53,-14,-64,-58,-18,-62,-13,-56,-65,-16,64,-57,-23,-20,-21,-52,-55,-51,-61,-59,-17,-63,-46,-50,-48,-49,-44,-47,-45,-10,-60,]),'NEWLINE':([0,2,3,5,11,12,13,14,16,17,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,47,48,52,61,62,63,64,65,66,72,74,75,76,77,78,79,80,81,82,83,84,86,87,88,93,94,98,103,104,107,111,112,114,115,116,117,118,119,],[14,-11,-22,-19,-12,-15,-54,-4,-53,-14,-64,-7,-58,-6,-18,-5,-25,-62,-27,-13,-56,-65,-24,61,-26,-16,63,-57,-23,-20,-21,-52,-55,-51,-61,-2,-3,-8,84,-59,85,85,-17,-63,-46,-50,-48,-49,-44,-47,-45,-10,-9,-33,-35,85,-60,-30,-39,-28,85,85,-32,-36,-34,85,85,-30,-29,-31,]),'COLON':([13,16,22,31,32,38,40,44,47,48,49,65,67,76,77,78,79,80,81,82,90,93,95,97,100,109,110,],[-54,-53,-58,-56,-65,-57,66,-52,-55,-51,72,-59,88,-46,-50,-48,-49,-44,-47,-45,-40,-60,104,107,-41,115,116,]),'PLUS':([0,1,4,7,8,9,13,14,15,16,20,21,22,24,26,27,29,31,32,33,34,35,38,44,46,47,48,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,72,73,76,77,78,79,80,81,82,84,86,87,88,92,93,94,96,98,102,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[15,15,15,15,15,15,-54,-4,15,-53,15,-7,-58,-6,-5,-25,-27,-56,57,-24,15,-26,-57,57,15,-55,57,15,15,15,15,15,15,15,15,15,-2,-3,-8,15,-59,15,15,15,57,57,57,57,57,57,57,-9,-33,-35,15,15,-60,-30,15,-39,15,-28,15,15,-38,15,-32,-36,-37,-34,15,15,-30,-29,-31,]),'IF':([0,14,21,24,26,27,29,33,34,35,61,62,63,84,86,87,94,96,98,103,105,106,111,112,113,114,117,118,119,],[20,-4,-7,-6,-5,-25,-27,-24,20,-26,-2,-3,-8,-9,-33,-35,-30,20,-39,-28,20,-38,-32,-36,-37,-34,-30,-29,-31,]),'EQEQUAL':([13,16,22,31,32,38,44,47,48,65,76,77,78,79,80,81,82,93,],[-54,-53,-58,-56,56,-57,56,-55,56,-59,56,56,56,56,56,56,56,-60,]),'$end':([18,60,],[0,-1,]),'STRING':([0,1,4,7,8,9,14,15,20,21,24,26,27,29,33,34,35,46,51,52,53,54,55,56,57,58,59,61,62,63,64,66,72,73,84,86,87,88,92,94,96,98,102,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[22,22,22,22,22,22,-4,22,22,-7,-6,-5,-25,-27,-24,22,-26,22,22,22,22,22,22,22,22,22,22,-2,-3,-8,22,22,22,22,-9,-33,-35,22,22,-30,22,-39,22,-28,22,22,-38,22,-32,-36,-37,-34,22,22,-30,-29,-31,]),'FOR':([0,14,21,24,26,27,29,33,34,35,61,62,63,84,86,87,94,96,98,103,105,106,111,112,113,114,117,118,119,],[23,-4,-7,-6,-5,-25,-27,-24,23,-26,-2,-3,-8,-9,-33,-35,-30,23,-39,-28,23,-38,-32,-36,-37,-34,-30,-29,-31,]),'EQUAL':([13,16,19,22,25,28,31,32,38,44,47,48,52,65,75,76,77,78,79,80,81,82,93,],[-54,-53,-64,-58,51,-62,-56,-65,-57,-52,-55,-51,-61,-59,-63,-46,-50,-48,-49,-44,-47,-45,-60,]),'SLASH':([13,16,22,31,32,38,44,47,48,65,76,77,78,79,80,81,82,93,],[-54,-53,-58,-56,58,-57,58,-55,58,-59,58,58,58,58,58,58,58,-60,]),'PASS':([0,14,21,24,26,27,29,33,34,35,61,62,63,64,66,72,84,86,87,88,94,96,98,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[3,-4,-7,-6,-5,-25,-27,-24,3,-26,-2,-3,-8,3,3,3,-9,-33,-35,3,-30,3,-39,-28,3,3,-38,3,-32,-36,-37,-34,3,3,-30,-29,-31,]),'ELSE':([63,84,86,87,94,103,112,117,119,],[-8,-9,97,-35,-30,110,-36,-30,-31,]),'NAME':([0,1,4,6,7,8,9,10,14,15,20,21,23,24,26,27,29,33,34,35,46,51,52,53,54,55,56,57,58,59,61,62,63,64,66,68,72,73,84,86,87,88,92,94,96,98,99,102,103,104,105,106,107,111,112,113,114,115,116,117,118,119,],[31,31,31,41,31,31,31,45,-4,31,31,-7,50,-6,-5,-25,-27,-24,31,-26,31,31,31,31,31,31,31,31,31,31,-2,-3,-8,31,31,91,31,31,-9,-33,-35,31,31,-30,31,-39,108,31,-28,31,31,-38,31,-32,-36,-37,-34,31,31,-30,-29,-31,]),'INDENT':([85,],[96,]),'GREATER':([13,16,22,31,32,38,44,47,48,65,76,77,78,79,80,81,82,93,],[-54,-53,-58,-56,54,-57,54,-55,54,-59,54,54,54,54,54,54,54,-60,]),'COMMA':([13,16,19,22,28,31,32,38,44,47,48,65,69,70,71,75,76,77,78,79,80,81,82,89,91,93,101,108,],[-54,-53,-64,-58,52,-56,-65,-57,-52,-55,-51,-59,-67,-68,92,-63,-46,-50,-48,-49,-44,-47,-45,99,-43,-60,-66,-42,]),'ENDMARKER':([14,21,24,26,27,29,33,34,35,61,62,63,84,86,87,94,98,103,111,112,114,117,118,119,],[-4,-7,-6,-5,-25,-27,-24,60,-26,-2,-3,-8,-9,-33,-35,-30,-39,-28,-32,-36,-34,-30,-29,-31,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'small_stmt':([0,34,64,66,72,88,96,104,105,107,115,116,],[2,2,83,2,2,2,2,2,2,2,2,2,]),'argument':([46,92,],[69,101,]),'return_stmt':([0,34,64,66,72,88,96,104,105,107,115,116,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'arglist':([46,],[71,]),'flow_stmt':([0,34,64,66,72,88,96,104,105,107,115,116,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'expr_stmt':([0,34,64,66,72,88,96,104,105,107,115,116,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'elif_expr':([94,117,],[103,119,]),'parameters':([45,],[67,]),'stmts':([96,],[105,]),'print_stmt':([0,34,64,66,72,88,96,104,105,107,115,116,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'program':([0,],[18,]),'test':([0,1,4,7,8,20,34,46,51,52,64,66,72,73,88,92,96,102,104,105,107,115,116,],[19,19,40,42,19,49,19,70,19,75,19,19,19,95,19,70,19,109,19,19,19,19,19,]),'suite':([66,72,88,104,107,115,116,],[86,94,98,111,114,117,118,]),'compound_stmt':([0,34,96,105,],[21,21,21,21,]),'power':([0,1,4,7,8,9,15,20,34,46,51,52,53,54,55,56,57,58,59,64,66,72,73,88,92,96,102,104,105,107,115,116,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'simple_stmt':([0,34,66,72,88,96,104,105,107,115,116,],[24,24,87,87,87,24,87,24,87,87,87,]),'testlist':([0,1,8,34,51,64,66,72,88,96,104,105,107,115,116,],[25,39,43,25,74,25,25,25,25,25,25,25,25,25,25,]),'stmt':([0,34,96,105,],[26,62,106,113,]),'for_stmt':([0,34,96,105,],[27,27,27,27,]),'testlist_multi':([0,1,8,34,51,64,66,72,88,96,104,105,107,115,116,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'atom':([0,1,4,7,8,9,15,20,34,46,51,52,53,54,55,56,57,58,59,64,66,72,73,88,92,96,102,104,105,107,115,116,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'funcdef':([0,34,96,105,],[29,29,29,29,]),'import_stmt':([0,34,64,66,72,88,96,104,105,107,115,116,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'pass_stmt':([0,34,64,66,72,88,96,104,105,107,115,116,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'comparison':([0,1,4,7,8,9,15,20,34,46,51,52,53,54,55,56,57,58,59,64,66,72,73,88,92,96,102,104,105,107,115,116,],[32,32,32,32,32,44,48,32,32,32,32,32,76,77,78,79,80,81,82,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'if_stmt':([0,34,96,105,],[33,33,33,33,]),'file_input':([0,],[34,]),'while_stmt':([0,34,96,105,],[35,35,35,35,]),'varargslist':([68,],[89,]),'trailer':([13,],[47,]),'small_stmts':([0,34,66,72,88,96,104,105,107,115,116,],[37,37,37,37,37,37,37,37,37,37,37,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> file_input ENDMARKER','program',2,'p_program','/home/saurav/sem6/335/asgn2/src/parser.py',11),
  ('file_input -> file_input NEWLINE','file_input',2,'p_file_input','/home/saurav/sem6/335/asgn2/src/parser.py',14),
  ('file_input -> file_input stmt','file_input',2,'p_file_input','/home/saurav/sem6/335/asgn2/src/parser.py',15),
  ('file_input -> NEWLINE','file_input',1,'p_file_input','/home/saurav/sem6/335/asgn2/src/parser.py',16),
  ('file_input -> stmt','file_input',1,'p_file_input','/home/saurav/sem6/335/asgn2/src/parser.py',17),
  ('stmt -> simple_stmt','stmt',1,'p_stmt_simple','/home/saurav/sem6/335/asgn2/src/parser.py',21),
  ('stmt -> compound_stmt','stmt',1,'p_stmt_compound','/home/saurav/sem6/335/asgn2/src/parser.py',24),
  ('simple_stmt -> small_stmts NEWLINE','simple_stmt',2,'p_simple_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',28),
  ('simple_stmt -> small_stmts SEMI NEWLINE','simple_stmt',3,'p_simple_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',29),
  ('small_stmts -> small_stmts SEMI small_stmt','small_stmts',3,'p_small_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',32),
  ('small_stmts -> small_stmt','small_stmts',1,'p_small_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',33),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',39),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',40),
  ('small_stmt -> print_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',41),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',42),
  ('small_stmt -> import_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',43),
  ('expr_stmt -> testlist EQUAL testlist','expr_stmt',3,'p_expr_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',51),
  ('expr_stmt -> testlist','expr_stmt',1,'p_expr_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',52),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',55),
  ('print_stmt -> PRINT test','print_stmt',2,'p_print_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',58),
  ('return_stmt -> RETURN testlist','return_stmt',2,'p_return_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',62),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',65),
  ('import_stmt -> IMPORT NAME','import_stmt',2,'p_import_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',68),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',71),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',72),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',73),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',74),
  ('if_stmt -> IF test COLON suite elif_expr','if_stmt',5,'p_if_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',76),
  ('if_stmt -> IF test COLON suite elif_expr ELSE COLON suite','if_stmt',8,'p_if_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',77),
  ('elif_expr -> <empty>','elif_expr',0,'p_elif_expr','/home/saurav/sem6/335/asgn2/src/parser.py',80),
  ('elif_expr -> ELIF test COLON suite elif_expr','elif_expr',5,'p_elif_expr','/home/saurav/sem6/335/asgn2/src/parser.py',81),
  ('for_stmt -> FOR NAME IN test COLON suite','for_stmt',6,'p_for_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',84),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',88),
  ('while_stmt -> WHILE test COLON suite ELSE COLON suite','while_stmt',7,'p_while_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',89),
  ('suite -> simple_stmt','suite',1,'p_suite','/home/saurav/sem6/335/asgn2/src/parser.py',92),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','/home/saurav/sem6/335/asgn2/src/parser.py',93),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',96),
  ('stmts -> stmt','stmts',1,'p_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',97),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','/home/saurav/sem6/335/asgn2/src/parser.py',101),
  ('parameters -> LPAREN RPAREN','parameters',2,'p_parameters','/home/saurav/sem6/335/asgn2/src/parser.py',105),
  ('parameters -> LPAREN varargslist RPAREN','parameters',3,'p_parameters','/home/saurav/sem6/335/asgn2/src/parser.py',106),
  ('varargslist -> varargslist COMMA NAME','varargslist',3,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',111),
  ('varargslist -> NAME','varargslist',1,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',112),
  ('comparison -> comparison PLUS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',115),
  ('comparison -> comparison MINUS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',116),
  ('comparison -> comparison STAR comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',117),
  ('comparison -> comparison SLASH comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',118),
  ('comparison -> comparison LESS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',119),
  ('comparison -> comparison EQEQUAL comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',120),
  ('comparison -> comparison GREATER comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',121),
  ('comparison -> PLUS comparison','comparison',2,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',122),
  ('comparison -> MINUS comparison','comparison',2,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',123),
  ('comparison -> power','comparison',1,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',124),
  ('power -> atom','power',1,'p_power','/home/saurav/sem6/335/asgn2/src/parser.py',130),
  ('power -> atom trailer','power',2,'p_power','/home/saurav/sem6/335/asgn2/src/parser.py',131),
  ('atom -> NAME','atom',1,'p_atom_name','/home/saurav/sem6/335/asgn2/src/parser.py',134),
  ('atom -> NUMBER','atom',1,'p_atom_number','/home/saurav/sem6/335/asgn2/src/parser.py',137),
  ('atom -> STRING','atom',1,'p_atom_number','/home/saurav/sem6/335/asgn2/src/parser.py',138),
  ('atom -> LPAREN testlist RPAREN','atom',3,'p_atom_tuple','/home/saurav/sem6/335/asgn2/src/parser.py',141),
  ('trailer -> LPAREN arglist RPAREN','trailer',3,'p_trailer','/home/saurav/sem6/335/asgn2/src/parser.py',145),
  ('testlist -> testlist_multi COMMA','testlist',2,'p_testlist','/home/saurav/sem6/335/asgn2/src/parser.py',151),
  ('testlist -> testlist_multi','testlist',1,'p_testlist','/home/saurav/sem6/335/asgn2/src/parser.py',152),
  ('testlist_multi -> testlist_multi COMMA test','testlist_multi',3,'p_testlist_multi','/home/saurav/sem6/335/asgn2/src/parser.py',166),
  ('testlist_multi -> test','testlist_multi',1,'p_testlist_multi','/home/saurav/sem6/335/asgn2/src/parser.py',167),
  ('test -> comparison','test',1,'p_test','/home/saurav/sem6/335/asgn2/src/parser.py',182),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','/home/saurav/sem6/335/asgn2/src/parser.py',190),
  ('arglist -> argument','arglist',1,'p_arglist','/home/saurav/sem6/335/asgn2/src/parser.py',191),
  ('argument -> test','argument',1,'p_argument','/home/saurav/sem6/335/asgn2/src/parser.py',199),
]
