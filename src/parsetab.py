
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb4\xc4\xa2\x95\x8c\x9a+\x12\x92k\xf8=\x1d,\xc4I'
    
_lr_action_items = {'DEDENT':([27,33,37,39,43,45,79,104,106,107,117,123,131,134,135,143,144,145,146,155,156,158,],[-23,-22,-63,-65,-62,-64,-24,-25,-73,-71,-68,-5,-66,144,-76,-70,-74,-75,-72,-68,-67,-69,]),'STAREQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,78,81,93,94,95,96,97,98,99,102,116,],[-90,-87,-86,-97,-91,-98,69,-95,-89,-85,-88,-84,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-93,]),'ELIF':([79,104,106,117,144,155,],[-24,-25,-73,130,-74,130,]),'ENDMARKER':([0,2,22,27,33,35,37,39,43,45,79,104,106,107,117,123,131,143,144,146,155,156,158,],[-4,3,-2,-23,-22,-3,-63,-65,-62,-64,-24,-25,-73,-71,-68,-5,-66,-70,-74,-72,-68,-67,-69,]),'STARSTAREQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,78,81,93,94,95,96,97,98,99,102,116,],[-90,-87,-86,-97,-91,-98,72,-95,-89,-85,-88,-84,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-93,]),'LESS':([6,19,20,30,32,41,54,57,58,81,93,94,95,96,97,98,99,116,],[-90,-87,-86,-91,64,-89,64,-88,64,-92,64,64,64,64,64,64,64,-93,]),'GLOBAL':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,29,-2,-23,-22,-3,-63,-65,-62,-64,-24,29,29,29,-25,-73,-71,29,-68,29,-5,-66,29,29,-76,29,-70,-74,-75,-72,29,29,-68,-67,-69,]),'NUMBER':([0,2,4,7,8,11,12,14,22,23,26,27,33,35,37,39,43,45,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,82,89,92,101,104,106,107,109,115,117,121,123,124,130,131,133,134,135,136,143,144,145,146,150,151,153,155,156,158,],[-4,6,6,6,6,6,6,6,-2,6,6,-23,-22,-3,-63,-65,-62,-64,6,6,6,6,6,6,6,6,-41,-42,-40,-44,6,-39,-43,-45,6,-24,6,6,6,6,6,-25,-73,-71,6,6,-68,6,-5,6,6,-66,6,6,-76,6,-70,-74,-75,-72,6,6,6,-68,-67,-69,]),'ASSERT':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,7,-2,-23,-22,-3,-63,-65,-62,-64,-24,7,7,7,-25,-73,-71,7,-68,7,-5,-66,7,7,-76,7,-70,-74,-75,-72,7,7,-68,-67,-69,]),'WHILE':([0,2,22,27,33,35,37,39,43,45,79,104,106,107,117,121,123,131,134,135,143,144,145,146,155,156,158,],[-4,8,-2,-23,-22,-3,-63,-65,-62,-64,-24,-25,-73,-71,-68,8,-5,-66,8,-76,-70,-74,-75,-72,-68,-67,-69,]),'COLON':([6,19,20,30,32,41,50,54,57,58,59,81,84,93,94,95,96,97,98,99,110,116,119,122,126,141,142,],[-90,-87,-86,-91,-98,-89,82,-85,-88,-84,89,-92,109,-79,-83,-81,-82,-77,-80,-78,-6,-93,133,136,-7,150,151,]),'GREATER':([6,19,20,30,32,41,54,57,58,81,93,94,95,96,97,98,99,116,],[-90,-87,-86,-91,63,-89,63,-88,63,-92,63,63,63,63,63,63,63,-93,]),'PRINT':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,11,-2,-23,-22,-3,-63,-65,-62,-64,-24,11,11,11,-25,-73,-71,11,-68,11,-5,-66,11,11,-76,11,-70,-74,-75,-72,11,11,-68,-67,-69,]),'RETURN':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,12,-2,-23,-22,-3,-63,-65,-62,-64,-24,12,12,12,-25,-73,-71,12,-68,12,-5,-66,12,12,-76,12,-70,-74,-75,-72,12,12,-68,-67,-69,]),'MINUS':([0,2,4,6,7,8,11,12,14,19,20,22,23,26,27,30,32,33,35,37,39,41,43,45,54,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,89,92,93,94,95,96,97,98,99,101,104,106,107,109,115,116,117,121,123,124,130,131,133,134,135,136,143,144,145,146,150,151,153,155,156,158,],[-4,14,14,-90,14,14,14,14,14,-87,-86,-2,14,14,-23,-91,68,-22,-3,-63,-65,-89,-62,-64,68,14,-88,68,14,14,14,14,14,14,14,-41,-42,-40,-44,14,-39,-43,-45,14,-24,14,-92,14,14,14,68,68,68,68,68,68,68,14,-25,-73,-71,14,14,-93,-68,14,-5,14,14,-66,14,14,-76,14,-70,-74,-75,-72,14,14,14,-68,-67,-69,]),'DEF':([0,2,22,27,33,35,37,39,43,45,79,104,106,107,117,121,123,131,134,135,143,144,145,146,155,156,158,],[-4,15,-2,-23,-22,-3,-63,-65,-62,-64,-24,-25,-73,-71,-68,15,-5,-66,15,-76,-70,-74,-75,-72,-68,-67,-69,]),'RPAREN':([6,19,20,25,30,32,38,41,48,54,57,58,78,81,85,86,87,88,93,94,95,96,97,98,99,102,111,112,113,116,125,127,128,129,137,138,139,140,147,148,149,152,154,157,],[-90,-87,-86,-97,-91,-98,-95,-89,81,-85,-88,-84,-94,-92,110,-100,-101,116,-79,-83,-81,-82,-77,-80,-78,-96,-16,-13,126,-93,-12,-20,140,-99,-13,-11,-19,-17,-10,-14,-18,-9,-21,-15,]),'SEMI':([5,6,9,11,12,13,16,17,18,19,20,21,24,25,28,30,32,34,36,38,40,41,42,44,46,47,49,51,52,53,54,57,58,60,76,78,81,90,93,94,95,96,97,98,99,100,102,103,108,116,118,120,132,],[-27,-90,-51,-46,-54,-48,-28,-32,-31,-87,-86,-50,-30,-97,-49,-91,-98,-37,-34,-95,-29,-89,-33,-52,-53,80,-61,-56,-47,-55,-85,-88,-84,-59,-36,-94,-92,-58,-79,-83,-81,-82,-77,-80,-78,-35,-96,-26,-57,-93,-59,-38,-60,]),'NEWLINE':([0,2,5,6,9,11,12,13,16,17,18,19,20,21,22,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,57,58,60,76,78,79,80,81,82,89,90,93,94,95,96,97,98,99,100,102,103,104,106,107,108,109,116,117,118,120,123,131,132,133,136,143,144,146,150,151,155,156,158,],[-4,22,-27,-90,-51,-46,-54,-48,-28,-32,-31,-87,-86,-50,-2,-30,-97,-23,-49,-91,-98,-22,-37,-3,-34,-63,-95,-65,-29,-89,-33,-62,-52,-64,-53,79,-61,-56,-47,-55,-85,-88,-84,-59,-36,-94,-24,104,-92,105,105,-58,-79,-83,-81,-82,-77,-80,-78,-35,-96,-26,-25,-73,-71,-57,105,-93,-68,-59,-38,-5,-66,-60,105,105,-70,-74,-72,105,105,-68,-67,-69,]),'PLUS':([0,2,4,6,7,8,11,12,14,19,20,22,23,26,27,30,32,33,35,37,39,41,43,45,54,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,89,92,93,94,95,96,97,98,99,101,104,106,107,109,115,116,117,121,123,124,130,131,133,134,135,136,143,144,145,146,150,151,153,155,156,158,],[-4,23,23,-90,23,23,23,23,23,-87,-86,-2,23,23,-23,-91,66,-22,-3,-63,-65,-89,-62,-64,66,23,-88,66,23,23,23,23,23,23,23,-41,-42,-40,-44,23,-39,-43,-45,23,-24,23,-92,23,23,23,66,66,66,66,66,66,66,23,-25,-73,-71,23,23,-93,-68,23,-5,23,23,-66,23,23,-76,23,-70,-74,-75,-72,23,23,23,-68,-67,-69,]),'PERCENTEQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,78,81,93,94,95,96,97,98,99,102,116,],[-90,-87,-86,-97,-91,-98,75,-95,-89,-85,-88,-84,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-93,]),'IMPORT':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,10,-2,-23,-22,-3,-63,-65,-62,-64,-24,10,10,10,-25,-73,-71,10,-68,10,-5,-66,10,10,-76,10,-70,-74,-75,-72,10,10,-68,-67,-69,]),'IN':([61,],[92,]),'EQEQUAL':([6,19,20,30,32,41,54,57,58,81,93,94,95,96,97,98,99,116,],[-90,-87,-86,-91,65,-89,65,-88,65,-92,65,65,65,65,65,65,65,-93,]),'$end':([1,3,],[0,-1,]),'SLASHEQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,78,81,93,94,95,96,97,98,99,102,116,],[-90,-87,-86,-97,-91,-98,70,-95,-89,-85,-88,-84,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-93,]),'STRING':([0,2,4,7,8,11,12,14,22,23,26,27,33,35,37,39,43,45,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,82,89,92,101,104,106,107,109,115,117,121,123,124,130,131,133,134,135,136,143,144,145,146,150,151,153,155,156,158,],[-4,30,30,30,30,30,30,30,-2,30,30,-23,-22,-3,-63,-65,-62,-64,30,30,30,30,30,30,30,30,-41,-42,-40,-44,30,-39,-43,-45,30,-24,30,30,30,30,30,-25,-73,-71,30,30,-68,30,-5,30,30,-66,30,30,-76,30,-70,-74,-75,-72,30,30,30,-68,-67,-69,]),'FOR':([0,2,22,27,33,35,37,39,43,45,79,104,106,107,117,121,123,131,134,135,143,144,145,146,155,156,158,],[-4,31,-2,-23,-22,-3,-63,-65,-62,-64,-24,-25,-73,-71,-68,31,-5,-66,31,-76,-70,-74,-75,-72,-68,-67,-69,]),'EQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,76,78,81,93,94,95,96,97,98,99,102,111,112,116,120,140,148,],[-90,-87,-86,-97,-91,-98,-37,-95,-89,-85,-88,-84,101,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-16,124,-93,-38,-17,153,]),'PLUSEQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,78,81,93,94,95,96,97,98,99,102,116,],[-90,-87,-86,-97,-91,-98,74,-95,-89,-85,-88,-84,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-93,]),'STAR':([6,19,20,30,32,41,54,57,58,81,93,94,95,96,97,98,99,116,],[-90,-87,-86,-91,62,-89,62,-88,62,-92,62,62,62,62,62,62,62,-93,]),'LPAREN':([0,2,4,6,7,8,11,12,14,19,22,23,26,27,30,33,35,37,39,41,43,45,55,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,85,89,92,101,104,106,107,109,114,115,117,121,123,124,130,131,133,134,135,136,138,143,144,145,146,149,150,151,152,153,155,156,158,],[-4,4,4,-90,4,4,4,4,4,56,-2,4,4,-23,-91,-22,-3,-63,-65,-89,-62,-64,85,4,4,4,4,4,4,4,4,-41,-42,-40,-44,4,-39,-43,-45,4,-24,4,-92,4,114,4,4,4,-25,-73,-71,4,114,4,-68,4,-5,4,4,-66,4,4,-76,4,114,-70,-74,-75,-72,114,4,4,114,4,-68,-67,-69,]),'PASS':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,13,-2,-23,-22,-3,-63,-65,-62,-64,-24,13,13,13,-25,-73,-71,13,-68,13,-5,-66,13,13,-76,13,-70,-74,-75,-72,13,13,-68,-67,-69,]),'MINEQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,78,81,93,94,95,96,97,98,99,102,116,],[-90,-87,-86,-97,-91,-98,71,-95,-89,-85,-88,-84,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-93,]),'ELSE':([79,104,106,107,117,131,144,155,158,],[-24,-25,-73,122,-68,142,-74,-68,-69,]),'IF':([0,2,22,27,33,35,37,39,43,45,79,104,106,107,117,121,123,131,134,135,143,144,145,146,155,156,158,],[-4,26,-2,-23,-22,-3,-63,-65,-62,-64,-24,-25,-73,-71,-68,26,-5,-66,26,-76,-70,-74,-75,-72,-68,-67,-69,]),'INDENT':([105,],[121,]),'NAME':([0,2,4,7,8,10,11,12,14,15,22,23,26,27,29,31,33,35,37,39,43,45,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,82,83,85,89,91,92,101,104,106,107,109,114,115,117,121,123,124,130,131,133,134,135,136,138,143,144,145,146,149,150,151,152,153,155,156,158,],[-4,41,41,41,41,51,41,41,41,55,-2,41,41,-23,60,61,-22,-3,-63,-65,-62,-64,41,41,41,41,41,41,41,41,-41,-42,-40,-44,41,-39,-43,-45,41,-24,41,41,108,111,41,118,41,41,-25,-73,-71,41,111,41,-68,41,-5,41,41,-66,41,41,-76,41,111,-70,-74,-75,-72,111,41,41,111,41,-68,-67,-69,]),'SLASH':([6,19,20,30,32,41,54,57,58,81,93,94,95,96,97,98,99,116,],[-90,-87,-86,-91,67,-89,67,-88,67,-92,67,67,67,67,67,67,67,-93,]),'AS':([51,],[83,]),'BREAK':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,44,-2,-23,-22,-3,-63,-65,-62,-64,-24,44,44,44,-25,-73,-71,44,-68,44,-5,-66,44,44,-76,44,-70,-74,-75,-72,44,44,-68,-67,-69,]),'CONTINUE':([0,2,22,27,33,35,37,39,43,45,79,80,82,89,104,106,107,109,117,121,123,131,133,134,135,136,143,144,145,146,150,151,155,156,158,],[-4,46,-2,-23,-22,-3,-63,-65,-62,-64,-24,46,46,46,-25,-73,-71,46,-68,46,-5,-66,46,46,-76,46,-70,-74,-75,-72,46,46,-68,-67,-69,]),'SLASHSLASHEQUAL':([6,19,20,25,30,32,34,38,41,54,57,58,78,81,93,94,95,96,97,98,99,102,116,],[-90,-87,-86,-97,-91,-98,77,-95,-89,-85,-88,-84,-94,-92,-79,-83,-81,-82,-77,-80,-78,-96,-93,]),'COMMA':([6,19,20,25,30,32,38,41,54,57,58,60,81,86,87,88,93,94,95,96,97,98,99,102,111,112,116,118,125,127,129,137,139,140,147,148,154,157,],[-90,-87,-86,-97,-91,-98,78,-89,-85,-88,-84,91,-92,-100,-101,115,-79,-83,-81,-82,-77,-80,-78,-96,-16,-13,-93,91,138,-20,-99,-13,149,-17,152,-14,-21,-15,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'namelist':([60,118,],[90,132,]),'small_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[5,103,5,5,5,5,5,5,5,5,5,]),'augassign':([34,],[73,]),'argument':([56,115,],[86,129,]),'fplist':([114,],[128,]),'return_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[9,9,9,9,9,9,9,9,9,9,9,]),'suite':([82,89,109,133,136,150,151,],[107,117,123,143,146,155,156,]),'arglist':([56,],[88,]),'flow_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[16,16,16,16,16,16,16,16,16,16,16,]),'expr_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[40,40,40,40,40,40,40,40,40,40,40,]),'parameters':([55,],[84,]),'stmts':([121,],[134,]),'continue_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[21,21,21,21,21,21,21,21,21,21,21,]),'fpdef':([85,114,138,149,152,],[112,127,148,154,148,]),'print_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[24,24,24,24,24,24,24,24,24,24,24,]),'test':([2,4,7,8,11,12,26,56,73,78,80,82,89,92,101,109,115,121,124,130,133,134,136,150,151,153,],[25,25,25,50,25,25,59,87,25,102,25,25,25,119,25,25,87,25,137,141,25,25,25,25,25,157,]),'global_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[42,42,42,42,42,42,42,42,42,42,42,]),'fpdeflist':([112,137,],[125,147,]),'elif_list':([117,155,],[131,158,]),'compound_stmt':([2,121,134,],[27,27,27,]),'break_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[28,28,28,28,28,28,28,28,28,28,28,]),'power':([2,4,7,8,11,12,14,23,26,56,62,63,64,65,66,67,68,73,78,80,82,89,92,101,109,115,121,124,130,133,134,136,150,151,153,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'simple_stmt':([2,82,89,109,121,133,134,136,150,151,],[33,106,106,106,33,106,33,106,106,106,]),'testlist':([2,4,7,11,12,73,80,82,89,101,109,121,133,134,136,150,151,],[34,48,49,52,53,100,34,34,34,120,34,34,34,34,34,34,34,]),'stmt':([2,121,134,],[35,135,145,]),'assert_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[36,36,36,36,36,36,36,36,36,36,36,]),'for_stmt':([2,121,134,],[37,37,37,]),'testlist_multi':([2,4,7,11,12,73,80,82,89,101,109,121,133,134,136,150,151,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'atom':([2,4,7,8,11,12,14,23,26,56,62,63,64,65,66,67,68,73,78,80,82,89,92,101,109,115,121,124,130,133,134,136,150,151,153,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'funcdef':([2,121,134,],[39,39,39,]),'import_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[17,17,17,17,17,17,17,17,17,17,17,]),'pass_stmt':([2,80,82,89,109,121,133,134,136,150,151,],[18,18,18,18,18,18,18,18,18,18,18,]),'comparison':([2,4,7,8,11,12,14,23,26,56,62,63,64,65,66,67,68,73,78,80,82,89,92,101,109,115,121,124,130,133,134,136,150,151,153,],[32,32,32,32,32,32,54,58,32,32,93,94,95,96,97,98,99,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'if_stmt':([2,121,134,],[43,43,43,]),'file_input':([0,],[1,]),'while_stmt':([2,121,134,],[45,45,45,]),'varargslist':([85,],[113,]),'fplist1':([127,],[139,]),'trailer':([19,],[57,]),'single_stmt':([0,],[2,]),'eqtestlist':([34,],[76,]),'small_stmts':([2,82,89,109,121,133,134,136,150,151,],[47,47,47,47,47,47,47,47,47,47,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file_input","S'",1,None,None,None),
  ('file_input -> single_stmt ENDMARKER','file_input',2,'p_file_input','/home/saurav/sem6/335/asgn2/src/parser.py',10),
  ('single_stmt -> single_stmt NEWLINE','single_stmt',2,'p_single_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',14),
  ('single_stmt -> single_stmt stmt','single_stmt',2,'p_single_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',15),
  ('single_stmt -> <empty>','single_stmt',0,'p_single_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',16),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','/home/saurav/sem6/335/asgn2/src/parser.py',20),
  ('parameters -> LPAREN RPAREN','parameters',2,'p_parameters','/home/saurav/sem6/335/asgn2/src/parser.py',25),
  ('parameters -> LPAREN varargslist RPAREN','parameters',3,'p_parameters','/home/saurav/sem6/335/asgn2/src/parser.py',26),
  ('varargslist -> <empty>','varargslist',0,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',31),
  ('varargslist -> fpdef EQUAL test fpdeflist COMMA','varargslist',5,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',32),
  ('varargslist -> fpdef EQUAL test fpdeflist','varargslist',4,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',33),
  ('varargslist -> fpdef fpdeflist COMMA','varargslist',3,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',34),
  ('varargslist -> fpdef fpdeflist','varargslist',2,'p_varargslist','/home/saurav/sem6/335/asgn2/src/parser.py',35),
  ('fpdeflist -> <empty>','fpdeflist',0,'p_fpdeflist','/home/saurav/sem6/335/asgn2/src/parser.py',39),
  ('fpdeflist -> fpdeflist COMMA fpdef','fpdeflist',3,'p_fpdeflist','/home/saurav/sem6/335/asgn2/src/parser.py',40),
  ('fpdeflist -> fpdeflist COMMA fpdef EQUAL test','fpdeflist',5,'p_fpdeflist','/home/saurav/sem6/335/asgn2/src/parser.py',41),
  ('fpdef -> NAME','fpdef',1,'p_fpdef','/home/saurav/sem6/335/asgn2/src/parser.py',46),
  ('fpdef -> LPAREN fplist RPAREN','fpdef',3,'p_fpdef','/home/saurav/sem6/335/asgn2/src/parser.py',47),
  ('fplist -> fpdef fplist1 COMMA','fplist',3,'p_fplist','/home/saurav/sem6/335/asgn2/src/parser.py',52),
  ('fplist -> fpdef fplist1','fplist',2,'p_fplist','/home/saurav/sem6/335/asgn2/src/parser.py',53),
  ('fplist1 -> <empty>','fplist1',0,'p_fplist1','/home/saurav/sem6/335/asgn2/src/parser.py',57),
  ('fplist1 -> fplist1 COMMA fpdef','fplist1',3,'p_fplist1','/home/saurav/sem6/335/asgn2/src/parser.py',58),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',63),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',64),
  ('simple_stmt -> small_stmts NEWLINE','simple_stmt',2,'p_simple_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',69),
  ('simple_stmt -> small_stmts SEMI NEWLINE','simple_stmt',3,'p_simple_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',70),
  ('small_stmts -> small_stmts SEMI small_stmt','small_stmts',3,'p_small_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',75),
  ('small_stmts -> small_stmt','small_stmts',1,'p_small_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',76),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',84),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',85),
  ('small_stmt -> print_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',86),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',87),
  ('small_stmt -> import_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',88),
  ('small_stmt -> global_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',89),
  ('small_stmt -> assert_stmt','small_stmt',1,'p_small_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',90),
  ('expr_stmt -> testlist augassign testlist','expr_stmt',3,'p_expr_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',95),
  ('expr_stmt -> testlist eqtestlist','expr_stmt',2,'p_expr_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',96),
  ('eqtestlist -> <empty>','eqtestlist',0,'p_eqtestlist','/home/saurav/sem6/335/asgn2/src/parser.py',100),
  ('eqtestlist -> eqtestlist EQUAL testlist','eqtestlist',3,'p_eqtestlist','/home/saurav/sem6/335/asgn2/src/parser.py',101),
  ('augassign -> PLUSEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',106),
  ('augassign -> MINEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',107),
  ('augassign -> STAREQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',108),
  ('augassign -> SLASHEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',109),
  ('augassign -> PERCENTEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',110),
  ('augassign -> STARSTAREQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',111),
  ('augassign -> SLASHSLASHEQUAL','augassign',1,'p_augassign','/home/saurav/sem6/335/asgn2/src/parser.py',112),
  ('print_stmt -> PRINT','print_stmt',1,'p_print_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',117),
  ('print_stmt -> PRINT testlist','print_stmt',2,'p_print_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',118),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',123),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',127),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',128),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',129),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',134),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',139),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',144),
  ('return_stmt -> RETURN testlist','return_stmt',2,'p_return_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',145),
  ('import_stmt -> IMPORT NAME','import_stmt',2,'p_import_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',149),
  ('import_stmt -> IMPORT NAME AS NAME','import_stmt',4,'p_import_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',150),
  ('global_stmt -> GLOBAL NAME namelist','global_stmt',3,'p_global_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',155),
  ('namelist -> <empty>','namelist',0,'p_namelist','/home/saurav/sem6/335/asgn2/src/parser.py',159),
  ('namelist -> COMMA NAME namelist','namelist',3,'p_namelist','/home/saurav/sem6/335/asgn2/src/parser.py',160),
  ('assert_stmt -> ASSERT testlist','assert_stmt',2,'p_assert_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',164),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',169),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',170),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',171),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',172),
  ('if_stmt -> IF test COLON suite elif_list','if_stmt',5,'p_if_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',178),
  ('if_stmt -> IF test COLON suite elif_list ELSE COLON suite','if_stmt',8,'p_if_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',179),
  ('elif_list -> <empty>','elif_list',0,'p_elif_list','/home/saurav/sem6/335/asgn2/src/parser.py',183),
  ('elif_list -> ELIF test COLON suite elif_list','elif_list',5,'p_elif_list','/home/saurav/sem6/335/asgn2/src/parser.py',184),
  ('for_stmt -> FOR NAME IN test COLON suite','for_stmt',6,'p_for_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',199),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',203),
  ('while_stmt -> WHILE test COLON suite ELSE COLON suite','while_stmt',7,'p_while_stmt','/home/saurav/sem6/335/asgn2/src/parser.py',204),
  ('suite -> simple_stmt','suite',1,'p_suite','/home/saurav/sem6/335/asgn2/src/parser.py',207),
  ('suite -> NEWLINE INDENT stmts DEDENT','suite',4,'p_suite','/home/saurav/sem6/335/asgn2/src/parser.py',208),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',211),
  ('stmts -> stmt','stmts',1,'p_stmts','/home/saurav/sem6/335/asgn2/src/parser.py',212),
  ('comparison -> comparison PLUS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',220),
  ('comparison -> comparison MINUS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',221),
  ('comparison -> comparison STAR comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',222),
  ('comparison -> comparison SLASH comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',223),
  ('comparison -> comparison LESS comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',224),
  ('comparison -> comparison EQEQUAL comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',225),
  ('comparison -> comparison GREATER comparison','comparison',3,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',226),
  ('comparison -> PLUS comparison','comparison',2,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',227),
  ('comparison -> MINUS comparison','comparison',2,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',228),
  ('comparison -> power','comparison',1,'p_comparison','/home/saurav/sem6/335/asgn2/src/parser.py',229),
  ('power -> atom','power',1,'p_power','/home/saurav/sem6/335/asgn2/src/parser.py',235),
  ('power -> atom trailer','power',2,'p_power','/home/saurav/sem6/335/asgn2/src/parser.py',236),
  ('atom -> NAME','atom',1,'p_atom_name','/home/saurav/sem6/335/asgn2/src/parser.py',239),
  ('atom -> NUMBER','atom',1,'p_atom_number','/home/saurav/sem6/335/asgn2/src/parser.py',242),
  ('atom -> STRING','atom',1,'p_atom_number','/home/saurav/sem6/335/asgn2/src/parser.py',243),
  ('atom -> LPAREN testlist RPAREN','atom',3,'p_atom_tuple','/home/saurav/sem6/335/asgn2/src/parser.py',246),
  ('trailer -> LPAREN arglist RPAREN','trailer',3,'p_trailer','/home/saurav/sem6/335/asgn2/src/parser.py',250),
  ('testlist -> testlist_multi COMMA','testlist',2,'p_testlist','/home/saurav/sem6/335/asgn2/src/parser.py',255),
  ('testlist -> testlist_multi','testlist',1,'p_testlist','/home/saurav/sem6/335/asgn2/src/parser.py',256),
  ('testlist_multi -> testlist_multi COMMA test','testlist_multi',3,'p_testlist_multi','/home/saurav/sem6/335/asgn2/src/parser.py',259),
  ('testlist_multi -> test','testlist_multi',1,'p_testlist_multi','/home/saurav/sem6/335/asgn2/src/parser.py',260),
  ('test -> comparison','test',1,'p_test','/home/saurav/sem6/335/asgn2/src/parser.py',265),
  ('arglist -> arglist COMMA argument','arglist',3,'p_arglist','/home/saurav/sem6/335/asgn2/src/parser.py',270),
  ('arglist -> argument','arglist',1,'p_arglist','/home/saurav/sem6/335/asgn2/src/parser.py',271),
  ('argument -> test','argument',1,'p_argument','/home/saurav/sem6/335/asgn2/src/parser.py',275),
]
