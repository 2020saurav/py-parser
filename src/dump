PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(DEF,'def',1,0)
Action : Shift and goto state 10

State  : 10
Stack  : DEF . LexToken(NAME,'foo',1,4)
Action : Shift and goto state 45

State  : 45
Stack  : DEF NAME . LexToken(LPAREN,'(',1,7)
Action : Shift and goto state 68

State  : 68
Stack  : DEF NAME LPAREN . LexToken(NAME,'a',1,8)
Action : Shift and goto state 91

State  : 91
Stack  : DEF NAME LPAREN NAME . LexToken(RPAREN,')',1,9)
Action : Reduce rule [varargslist -> NAME] with ['a'] and goto state 43
Result : <NoneType @ 0x8b8800> (None)

State  : 89
Stack  : DEF NAME LPAREN varargslist . LexToken(RPAREN,')',1,9)
Action : Shift and goto state 100

State  : 100
Stack  : DEF NAME LPAREN varargslist RPAREN . LexToken(COLON,':',1,10)
Action : Reduce rule [parameters -> LPAREN varargslist RPAREN] with ['(',None,')'] and goto state 41
Result : <NoneType @ 0x8b8800> (None)

State  : 67
Stack  : DEF NAME parameters . LexToken(COLON,':',1,10)
Action : Shift and goto state 88

State  : 88
Stack  : DEF NAME parameters COLON . LexToken(NEWLINE,'\n',1,11)
Action : Shift and goto state 85

State  : 85
Stack  : DEF NAME parameters COLON NEWLINE . LexToken(INDENT,None,2,-100)
Action : Shift and goto state 96

State  : 96
Stack  : DEF NAME parameters COLON NEWLINE INDENT . LexToken(PRINT,'print',2,13)
Action : Shift and goto state 7

State  : 7
Stack  : DEF NAME parameters COLON NEWLINE INDENT PRINT . LexToken(NAME,'a',2,19)
Action : Shift and goto state 31

State  : 31
Stack  : DEF NAME parameters COLON NEWLINE INDENT PRINT NAME . LexToken(NEWLINE,'\n',2,20)
Action : Reduce rule [atom -> NAME] with ['a'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : DEF NAME parameters COLON NEWLINE INDENT PRINT atom . LexToken(NEWLINE,'\n',2,20)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : DEF NAME parameters COLON NEWLINE INDENT PRINT power . LexToken(NEWLINE,'\n',2,20)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : DEF NAME parameters COLON NEWLINE INDENT PRINT comparison . LexToken(NEWLINE,'\n',2,20)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 42
Stack  : DEF NAME parameters COLON NEWLINE INDENT PRINT test . LexToken(NEWLINE,'\n',2,20)
Action : Reduce rule [print_stmt -> PRINT test] with ['print',None] and goto state 20
Result : <NoneType @ 0x8b8800> (None)

State  : 17
Stack  : DEF NAME parameters COLON NEWLINE INDENT print_stmt . LexToken(NEWLINE,'\n',2,20)
Action : Reduce rule [small_stmt -> print_stmt] with [None] and goto state 14
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : DEF NAME parameters COLON NEWLINE INDENT small_stmt . LexToken(NEWLINE,'\n',2,20)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 11
Result : <NoneType @ 0x8b8800> (None)

State  : 37
Stack  : DEF NAME parameters COLON NEWLINE INDENT small_stmts . LexToken(NEWLINE,'\n',2,20)
Action : Shift and goto state 63

State  : 63
Stack  : DEF NAME parameters COLON NEWLINE INDENT small_stmts NEWLINE . LexToken(PRINT,'print',3,22)
Action : Reduce rule [simple_stmt -> small_stmts NEWLINE] with [None,'\n'] and goto state 8
Result : <NoneType @ 0x8b8800> (None)

State  : 24
Stack  : DEF NAME parameters COLON NEWLINE INDENT simple_stmt . LexToken(PRINT,'print',3,22)
Action : Reduce rule [stmt -> simple_stmt] with [None] and goto state 6
Result : <NoneType @ 0x8b8800> (None)

State  : 106
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmt . LexToken(PRINT,'print',3,22)
Action : Reduce rule [stmts -> stmt] with [None] and goto state 38
Result : <NoneType @ 0x8b8800> (None)

State  : 105
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts . LexToken(PRINT,'print',3,22)
Action : Shift and goto state 7

State  : 7
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT . LexToken(NAME,'a',3,28)
Action : Shift and goto state 31

State  : 31
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT NAME . LexToken(PLUS,'+',3,29)
Action : Reduce rule [atom -> NAME] with ['a'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT atom . LexToken(PLUS,'+',3,29)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT power . LexToken(PLUS,'+',3,29)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison . LexToken(PLUS,'+',3,29)
Action : Shift and goto state 57

State  : 57
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison PLUS . LexToken(NUMBER,1,3,30)
Action : Shift and goto state 38

State  : 38
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison PLUS NUMBER . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [atom -> NUMBER] with [1] and goto state 57
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison PLUS atom . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison PLUS power . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 80
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison PLUS comparison . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [comparison -> comparison PLUS comparison] with [None,'+',None] and goto state 44
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 42
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts PRINT test . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [print_stmt -> PRINT test] with ['print',None] and goto state 20
Result : <NoneType @ 0x8b8800> (None)

State  : 17
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts print_stmt . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [small_stmt -> print_stmt] with [None] and goto state 14
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts small_stmt . LexToken(NEWLINE,'\n\n',3,31)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 11
Result : <NoneType @ 0x8b8800> (None)

State  : 37
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts . LexToken(NEWLINE,'\n\n',3,31)
Action : Shift and goto state 63

State  : 63
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts NEWLINE . LexToken(DEDENT,None,5,-100)
Action : Reduce rule [simple_stmt -> small_stmts NEWLINE] with [None,'\n\n'] and goto state 8
Result : <NoneType @ 0x8b8800> (None)

State  : 24
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts simple_stmt . LexToken(DEDENT,None,5,-100)
Action : Reduce rule [stmt -> simple_stmt] with [None] and goto state 6
Result : <NoneType @ 0x8b8800> (None)

State  : 113
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts stmt . LexToken(DEDENT,None,5,-100)
Action : Reduce rule [stmts -> stmts stmt] with [None,None] and goto state 37
Result : <NoneType @ 0x8b8800> (None)

State  : 105
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts . LexToken(DEDENT,None,5,-100)
Action : Shift and goto state 112

State  : 112
Stack  : DEF NAME parameters COLON NEWLINE INDENT stmts DEDENT . LexToken(DEF,'def',5,33)
Action : Reduce rule [suite -> NEWLINE INDENT stmts DEDENT] with ['\n',None,None,None] and goto state 36
Result : <NoneType @ 0x8b8800> (None)

State  : 98
Stack  : DEF NAME parameters COLON suite . LexToken(DEF,'def',5,33)
Action : Reduce rule [funcdef -> DEF NAME parameters COLON suite] with ['def','foo',None,':',None] and goto state 39
Result : <NoneType @ 0x8b8800> (None)

State  : 29
Stack  : funcdef . LexToken(DEF,'def',5,33)
Action : Reduce rule [compound_stmt -> funcdef] with [None] and goto state 27
Result : <NoneType @ 0x8b8800> (None)

State  : 21
Stack  : compound_stmt . LexToken(DEF,'def',5,33)
Action : Reduce rule [stmt -> compound_stmt] with [None] and goto state 7
Result : <NoneType @ 0x8b8800> (None)

State  : 26
Stack  : stmt . LexToken(DEF,'def',5,33)
Action : Reduce rule [file_input -> stmt] with [None] and goto state 5
Result : <NoneType @ 0x8b8800> (None)

State  : 34
Stack  : file_input . LexToken(DEF,'def',5,33)
Action : Shift and goto state 10

State  : 10
Stack  : file_input DEF . LexToken(NAME,'hh',5,37)
Action : Shift and goto state 45

State  : 45
Stack  : file_input DEF NAME . LexToken(LPAREN,'(',5,39)
Action : Shift and goto state 68

State  : 68
Stack  : file_input DEF NAME LPAREN . LexToken(NAME,'z',5,40)
Action : Shift and goto state 91

State  : 91
Stack  : file_input DEF NAME LPAREN NAME . LexToken(RPAREN,')',5,41)
Action : Reduce rule [varargslist -> NAME] with ['z'] and goto state 43
Result : <NoneType @ 0x8b8800> (None)

State  : 89
Stack  : file_input DEF NAME LPAREN varargslist . LexToken(RPAREN,')',5,41)
Action : Shift and goto state 100

State  : 100
Stack  : file_input DEF NAME LPAREN varargslist RPAREN . LexToken(COLON,':',5,42)
Action : Reduce rule [parameters -> LPAREN varargslist RPAREN] with ['(',None,')'] and goto state 41
Result : <NoneType @ 0x8b8800> (None)

State  : 67
Stack  : file_input DEF NAME parameters . LexToken(COLON,':',5,42)
Action : Shift and goto state 88

State  : 88
Stack  : file_input DEF NAME parameters COLON . LexToken(NEWLINE,'\n',5,43)
Action : Shift and goto state 85

State  : 85
Stack  : file_input DEF NAME parameters COLON NEWLINE . LexToken(INDENT,None,6,-100)
Action : Shift and goto state 96

State  : 96
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT . LexToken(NAME,'a',6,45)
Action : Shift and goto state 31

State  : 31
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT NAME . LexToken(EQUAL,'=',6,47)
Action : Reduce rule [atom -> NAME] with ['a'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT atom . LexToken(EQUAL,'=',6,47)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT power . LexToken(EQUAL,'=',6,47)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT comparison . LexToken(EQUAL,'=',6,47)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 19
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT test . LexToken(EQUAL,'=',6,47)
Action : Reduce rule [testlist_multi -> test] with [None] and goto state 64
Result : <NoneType @ 0x8b8800> (None)

State  : 28
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist_multi . LexToken(EQUAL,'=',6,47)
Action : Reduce rule [testlist -> testlist_multi] with [None] and goto state 62
Result : <NoneType @ 0x8b8800> (None)

State  : 25
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist . LexToken(EQUAL,'=',6,47)
Action : Shift and goto state 51

State  : 51
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL . LexToken(NUMBER,42,6,49)
Action : Shift and goto state 38

State  : 38
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL NUMBER . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [atom -> NUMBER] with [42] and goto state 57
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL atom . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL power . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL comparison . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 19
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL test . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [testlist_multi -> test] with [None] and goto state 64
Result : <NoneType @ 0x8b8800> (None)

State  : 28
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL testlist_multi . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [testlist -> testlist_multi] with [None] and goto state 62
Result : <NoneType @ 0x8b8800> (None)

State  : 74
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT testlist EQUAL testlist . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [expr_stmt -> testlist EQUAL testlist] with [None,'=',None] and goto state 17
Result : <NoneType @ 0x8b8800> (None)

State  : 30
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT expr_stmt . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [small_stmt -> expr_stmt] with [None] and goto state 13
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT small_stmt . LexToken(NEWLINE,'\n',6,51)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 11
Result : <NoneType @ 0x8b8800> (None)

State  : 37
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT small_stmts . LexToken(NEWLINE,'\n',6,51)
Action : Shift and goto state 63

State  : 63
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT small_stmts NEWLINE . LexToken(NAME,'foo',7,53)
Action : Reduce rule [simple_stmt -> small_stmts NEWLINE] with [None,'\n'] and goto state 8
Result : <NoneType @ 0x8b8800> (None)

State  : 24
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT simple_stmt . LexToken(NAME,'foo',7,53)
Action : Reduce rule [stmt -> simple_stmt] with [None] and goto state 6
Result : <NoneType @ 0x8b8800> (None)

State  : 106
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmt . LexToken(NAME,'foo',7,53)
Action : Reduce rule [stmts -> stmt] with [None] and goto state 38
Result : <NoneType @ 0x8b8800> (None)

State  : 105
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts . LexToken(NAME,'foo',7,53)
Action : Shift and goto state 31

State  : 31
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts NAME . LexToken(LPAREN,'(',7,56)
Action : Reduce rule [atom -> NAME] with ['foo'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom . LexToken(LPAREN,'(',7,56)
Action : Shift and goto state 46

State  : 46
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN . LexToken(NAME,'a',7,57)
Action : Shift and goto state 31

State  : 31
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN NAME . LexToken(RPAREN,')',7,58)
Action : Reduce rule [atom -> NAME] with ['a'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN atom . LexToken(RPAREN,')',7,58)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN power . LexToken(RPAREN,')',7,58)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN comparison . LexToken(RPAREN,')',7,58)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 70
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN test . LexToken(RPAREN,')',7,58)
Action : Reduce rule [argument -> test] with [None] and goto state 68
Result : <NoneType @ 0x8b8800> (None)

State  : 69
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN argument . LexToken(RPAREN,')',7,58)
Action : Reduce rule [arglist -> argument] with [None] and goto state 67
Result : <NoneType @ 0x8b8800> (None)

State  : 71
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN arglist . LexToken(RPAREN,')',7,58)
Action : Shift and goto state 93

State  : 93
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom LPAREN arglist RPAREN . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [trailer -> LPAREN arglist RPAREN] with ['(',None,')'] and goto state 60
Result : <NoneType @ 0x8b8800> (None)

State  : 47
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom trailer . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [power -> atom trailer] with [None,None] and goto state 55
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts power . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts comparison . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 19
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts test . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [testlist_multi -> test] with [None] and goto state 64
Result : <NoneType @ 0x8b8800> (None)

State  : 28
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist_multi . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [testlist -> testlist_multi] with [None] and goto state 62
Result : <NoneType @ 0x8b8800> (None)

State  : 25
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [expr_stmt -> testlist] with [None] and goto state 18
Result : <NoneType @ 0x8b8800> (None)

State  : 30
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts expr_stmt . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [small_stmt -> expr_stmt] with [None] and goto state 13
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmt . LexToken(NEWLINE,'\n',7,59)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 11
Result : <NoneType @ 0x8b8800> (None)

State  : 37
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts . LexToken(NEWLINE,'\n',7,59)
Action : Shift and goto state 63

State  : 63
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts NEWLINE . LexToken(NAME,'b',8,61)
Action : Reduce rule [simple_stmt -> small_stmts NEWLINE] with [None,'\n'] and goto state 8
Result : <NoneType @ 0x8b8800> (None)

State  : 24
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts simple_stmt . LexToken(NAME,'b',8,61)
Action : Reduce rule [stmt -> simple_stmt] with [None] and goto state 6
Result : <NoneType @ 0x8b8800> (None)

State  : 113
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts stmt . LexToken(NAME,'b',8,61)
Action : Reduce rule [stmts -> stmts stmt] with [None,None] and goto state 37
Result : <NoneType @ 0x8b8800> (None)

State  : 105
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts . LexToken(NAME,'b',8,61)
Action : Shift and goto state 31

State  : 31
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts NAME . LexToken(EQUAL,'=',8,63)
Action : Reduce rule [atom -> NAME] with ['b'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts atom . LexToken(EQUAL,'=',8,63)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts power . LexToken(EQUAL,'=',8,63)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts comparison . LexToken(EQUAL,'=',8,63)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 19
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts test . LexToken(EQUAL,'=',8,63)
Action : Reduce rule [testlist_multi -> test] with [None] and goto state 64
Result : <NoneType @ 0x8b8800> (None)

State  : 28
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist_multi . LexToken(EQUAL,'=',8,63)
Action : Reduce rule [testlist -> testlist_multi] with [None] and goto state 62
Result : <NoneType @ 0x8b8800> (None)

State  : 25
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist . LexToken(EQUAL,'=',8,63)
Action : Shift and goto state 51

State  : 51
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL . LexToken(STRING,'"my name is\\np ksaurav"',8,65)
Action : Shift and goto state 22

State  : 22
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL STRING . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [atom -> STRING] with [<str @ 0x7fec728d3630>] and goto state 58
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL atom . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL power . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL comparison . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 19
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL test . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [testlist_multi -> test] with [None] and goto state 64
Result : <NoneType @ 0x8b8800> (None)

State  : 28
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL testlist_multi . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [testlist -> testlist_multi] with [None] and goto state 62
Result : <NoneType @ 0x8b8800> (None)

State  : 74
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts testlist EQUAL testlist . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [expr_stmt -> testlist EQUAL testlist] with [None,'=',None] and goto state 17
Result : <NoneType @ 0x8b8800> (None)

State  : 30
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts expr_stmt . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [small_stmt -> expr_stmt] with [None] and goto state 13
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmt . LexToken(NEWLINE,'\n',8,88)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 11
Result : <NoneType @ 0x8b8800> (None)

State  : 37
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts . LexToken(NEWLINE,'\n',8,88)
Action : Shift and goto state 63

State  : 63
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts NEWLINE . LexToken(PRINT,'print',9,90)
Action : Reduce rule [simple_stmt -> small_stmts NEWLINE] with [None,'\n'] and goto state 8
Result : <NoneType @ 0x8b8800> (None)

State  : 24
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts simple_stmt . LexToken(PRINT,'print',9,90)
Action : Reduce rule [stmt -> simple_stmt] with [None] and goto state 6
Result : <NoneType @ 0x8b8800> (None)

State  : 113
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts stmt . LexToken(PRINT,'print',9,90)
Action : Reduce rule [stmts -> stmts stmt] with [None,None] and goto state 37
Result : <NoneType @ 0x8b8800> (None)

State  : 105
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts . LexToken(PRINT,'print',9,90)
Action : Shift and goto state 7

State  : 7
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts PRINT . LexToken(NAME,'b',9,96)
Action : Shift and goto state 31

State  : 31
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts PRINT NAME . LexToken(NEWLINE,'\n',9,97)
Action : Reduce rule [atom -> NAME] with ['b'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts PRINT atom . LexToken(NEWLINE,'\n',9,97)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts PRINT power . LexToken(NEWLINE,'\n',9,97)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts PRINT comparison . LexToken(NEWLINE,'\n',9,97)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 42
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts PRINT test . LexToken(NEWLINE,'\n',9,97)
Action : Reduce rule [print_stmt -> PRINT test] with ['print',None] and goto state 20
Result : <NoneType @ 0x8b8800> (None)

State  : 17
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts print_stmt . LexToken(NEWLINE,'\n',9,97)
Action : Reduce rule [small_stmt -> print_stmt] with [None] and goto state 14
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmt . LexToken(NEWLINE,'\n',9,97)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 11
Result : <NoneType @ 0x8b8800> (None)

State  : 37
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts . LexToken(NEWLINE,'\n',9,97)
Action : Shift and goto state 63

State  : 63
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts small_stmts NEWLINE . LexToken(DEDENT,None,12,-100)
Action : Reduce rule [simple_stmt -> small_stmts NEWLINE] with [None,'\n'] and goto state 8
Result : <NoneType @ 0x8b8800> (None)

State  : 24
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts simple_stmt . LexToken(DEDENT,None,12,-100)
Action : Reduce rule [stmt -> simple_stmt] with [None] and goto state 6
Result : <NoneType @ 0x8b8800> (None)

State  : 113
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts stmt . LexToken(DEDENT,None,12,-100)
Action : Reduce rule [stmts -> stmts stmt] with [None,None] and goto state 37
Result : <NoneType @ 0x8b8800> (None)

State  : 105
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts . LexToken(DEDENT,None,12,-100)
Action : Shift and goto state 112

State  : 112
Stack  : file_input DEF NAME parameters COLON NEWLINE INDENT stmts DEDENT . LexToken(NAME,'hh',12,136)
Action : Reduce rule [suite -> NEWLINE INDENT stmts DEDENT] with ['\n',None,None,None] and goto state 36
Result : <NoneType @ 0x8b8800> (None)

State  : 98
Stack  : file_input DEF NAME parameters COLON suite . LexToken(NAME,'hh',12,136)
Action : Reduce rule [funcdef -> DEF NAME parameters COLON suite] with ['def','hh',None,':',None] and goto state 39
Result : <NoneType @ 0x8b8800> (None)

State  : 29
Stack  : file_input funcdef . LexToken(NAME,'hh',12,136)
Action : Reduce rule [compound_stmt -> funcdef] with [None] and goto state 27
Result : <NoneType @ 0x8b8800> (None)

State  : 21
Stack  : file_input compound_stmt . LexToken(NAME,'hh',12,136)
Action : Reduce rule [stmt -> compound_stmt] with [None] and goto state 7
Result : <NoneType @ 0x8b8800> (None)

State  : 62
Stack  : file_input stmt . LexToken(NAME,'hh',12,136)
Action : Reduce rule [file_input -> file_input stmt] with [None,None] and goto state 3
Result : <NoneType @ 0x8b8800> (None)

State  : 34
Stack  : file_input . LexToken(NAME,'hh',12,136)
Action : Shift and goto state 31

State  : 31
Stack  : file_input NAME . LexToken(LPAREN,'(',12,138)
Action : Reduce rule [atom -> NAME] with ['hh'] and goto state 56
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input atom . LexToken(LPAREN,'(',12,138)
Action : Shift and goto state 46

State  : 46
Stack  : file_input atom LPAREN . LexToken(NUMBER,1,12,139)
Action : Shift and goto state 38

State  : 38
Stack  : file_input atom LPAREN NUMBER . LexToken(RPAREN,')',12,140)
Action : Reduce rule [atom -> NUMBER] with [1] and goto state 57
Result : <NoneType @ 0x8b8800> (None)

State  : 13
Stack  : file_input atom LPAREN atom . LexToken(RPAREN,')',12,140)
Action : Reduce rule [power -> atom] with [None] and goto state 54
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input atom LPAREN power . LexToken(RPAREN,')',12,140)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input atom LPAREN comparison . LexToken(RPAREN,')',12,140)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 70
Stack  : file_input atom LPAREN test . LexToken(RPAREN,')',12,140)
Action : Reduce rule [argument -> test] with [None] and goto state 68
Result : <NoneType @ 0x8b8800> (None)

State  : 69
Stack  : file_input atom LPAREN argument . LexToken(RPAREN,')',12,140)
Action : Reduce rule [arglist -> argument] with [None] and goto state 67
Result : <NoneType @ 0x8b8800> (None)

State  : 71
Stack  : file_input atom LPAREN arglist . LexToken(RPAREN,')',12,140)
Action : Shift and goto state 93

State  : 93
Stack  : file_input atom LPAREN arglist RPAREN . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [trailer -> LPAREN arglist RPAREN] with ['(',None,')'] and goto state 60
Result : <NoneType @ 0x8b8800> (None)

State  : 47
Stack  : file_input atom trailer . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [power -> atom trailer] with [None,None] and goto state 55
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : file_input power . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [comparison -> power] with [None] and goto state 53
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : file_input comparison . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [test -> comparison] with [None] and goto state 65
Result : <NoneType @ 0x8b8800> (None)

State  : 19
Stack  : file_input test . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [testlist_multi -> test] with [None] and goto state 64
Result : <NoneType @ 0x8b8800> (None)

State  : 28
Stack  : file_input testlist_multi . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [testlist -> testlist_multi] with [None] and goto state 62
Result : <NoneType @ 0x8b8800> (None)

State  : 25
Stack  : file_input testlist . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [expr_stmt -> testlist] with [None] and goto state 18
Result : <NoneType @ 0x8b8800> (None)

State  : 30
Stack  : file_input expr_stmt . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [small_stmt -> expr_stmt] with [None] and goto state 13
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : file_input small_stmt . LexToken(NEWLINE,'\n',12,141)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 11
Result : <NoneType @ 0x8b8800> (None)

State  : 37
Stack  : file_input small_stmts . LexToken(NEWLINE,'\n',12,141)
Action : Shift and goto state 63

State  : 63
Stack  : file_input small_stmts NEWLINE . $end
ERROR: Error  : file_input small_stmts NEWLINE . $end
Traceback (most recent call last):
  File "/home/saurav/sem6/335/asgn2/src/parser.py", line 191, in <module>
    root =  z.parse(data.read())
  File "/home/saurav/sem6/335/asgn2/src/parser.py", line 184, in parse
    result = self.parser.parse(lexer = self.mlexer, debug=True)
  File "/home/saurav/sem6/335/asgn2/src/yacc.py", line 261, in parse
    return self.parsedebug(input,lexer,debug,tracking,tokenfunc)
  File "/home/saurav/sem6/335/asgn2/src/yacc.py", line 519, in parsedebug
    tok = self.errorfunc(errtoken)
  File "/home/saurav/sem6/335/asgn2/src/parser.py", line 174, in p_error
    raise SyntaxError(str(p))
SyntaxError: None
