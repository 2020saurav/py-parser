Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    NOTEQUAL
    RAISE
    STAREQUAL
    STARSTAR
    GLOBAL
    ASSERT
    DEL
    VBAR
    BACKQUOTE
    WITH
    LEFTSHIFT
    GREATEREQUAL
    MINEQUAL
    BINARYNUMBER
    EXCEPT
    PERCENTEQUAL
    TILDE
    UNICODESTRING
    RSQB
    CLASS
    TRIPLESTRING
    SLASHSLASH
    SLASHEQUAL
    RIGHTSHIFT
    RBRACE
    EXEC
    AMPER
    IS
    PERCENT
    YIELD
    TRY
    PLUSEQUAL
    FINALLY
    AT
    LESSEQUAL
    LSQB
    DOT
    AND
    CIRCUMFLEX
    FNUMBER
    LBRACE
    FROM
    HEXADECIMALNUMBER
    INUMBER
    RAWSTRING
    AS
    BREAK
    CONTINUE
    OCTALNUMBER
    NOT
    WS
    OR
    LAMBDA

Grammar

Rule 0     S' -> program
Rule 1     program -> file_input ENDMARKER
Rule 2     file_input -> file_input NEWLINE
Rule 3     file_input -> file_input stmt
Rule 4     file_input -> NEWLINE
Rule 5     file_input -> stmt
Rule 6     stmt -> simple_stmt
Rule 7     stmt -> compound_stmt
Rule 8     simple_stmt -> small_stmts NEWLINE
Rule 9     simple_stmt -> small_stmts SEMI NEWLINE
Rule 10    small_stmts -> small_stmts SEMI small_stmt
Rule 11    small_stmts -> small_stmt
Rule 12    small_stmt -> flow_stmt
Rule 13    small_stmt -> expr_stmt
Rule 14    small_stmt -> print_stmt
Rule 15    small_stmt -> pass_stmt
Rule 16    small_stmt -> import_stmt
Rule 17    expr_stmt -> testlist EQUAL testlist
Rule 18    expr_stmt -> testlist
Rule 19    flow_stmt -> return_stmt
Rule 20    print_stmt -> PRINT test
Rule 21    return_stmt -> RETURN testlist
Rule 22    pass_stmt -> PASS
Rule 23    import_stmt -> IMPORT NAME
Rule 24    compound_stmt -> if_stmt
Rule 25    compound_stmt -> for_stmt
Rule 26    compound_stmt -> while_stmt
Rule 27    compound_stmt -> funcdef
Rule 28    if_stmt -> IF test COLON suite elif_expr
Rule 29    if_stmt -> IF test COLON suite elif_expr ELSE COLON suite
Rule 30    elif_expr -> <empty>
Rule 31    elif_expr -> ELIF test COLON suite elif_expr
Rule 32    for_stmt -> FOR NAME IN test COLON suite
Rule 33    while_stmt -> WHILE test COLON suite
Rule 34    while_stmt -> WHILE test COLON suite ELSE COLON suite
Rule 35    suite -> simple_stmt
Rule 36    suite -> NEWLINE INDENT stmts DEDENT
Rule 37    stmts -> stmts stmt
Rule 38    stmts -> stmt
Rule 39    funcdef -> DEF NAME parameters COLON suite
Rule 40    parameters -> LPAREN RPAREN
Rule 41    parameters -> LPAREN varargslist RPAREN
Rule 42    varargslist -> varargslist COMMA NAME
Rule 43    varargslist -> NAME
Rule 44    comparison -> comparison PLUS comparison
Rule 45    comparison -> comparison MINUS comparison
Rule 46    comparison -> comparison STAR comparison
Rule 47    comparison -> comparison SLASH comparison
Rule 48    comparison -> comparison LESS comparison
Rule 49    comparison -> comparison EQEQUAL comparison
Rule 50    comparison -> comparison GREATER comparison
Rule 51    comparison -> PLUS comparison
Rule 52    comparison -> MINUS comparison
Rule 53    comparison -> power
Rule 54    power -> atom
Rule 55    power -> atom trailer
Rule 56    atom -> NAME
Rule 57    atom -> NUMBER
Rule 58    atom -> STRING
Rule 59    atom -> LPAREN testlist RPAREN
Rule 60    trailer -> LPAREN arglist RPAREN
Rule 61    testlist -> testlist_multi COMMA
Rule 62    testlist -> testlist_multi
Rule 63    testlist_multi -> testlist_multi COMMA test
Rule 64    testlist_multi -> test
Rule 65    test -> comparison
Rule 66    arglist -> arglist COMMA argument
Rule 67    arglist -> argument
Rule 68    argument -> test

Terminals, with rules where they appear

AMPER                : 
AND                  : 
AS                   : 
ASSERT               : 
AT                   : 
BACKQUOTE            : 
BINARYNUMBER         : 
BREAK                : 
CIRCUMFLEX           : 
CLASS                : 
COLON                : 28 29 29 31 32 33 34 34 39
COMMA                : 42 61 63 66
CONTINUE             : 
DEDENT               : 36
DEF                  : 39
DEL                  : 
DOT                  : 
ELIF                 : 31
ELSE                 : 29 34
ENDMARKER            : 1
EQEQUAL              : 49
EQUAL                : 17
EXCEPT               : 
EXEC                 : 
FINALLY              : 
FNUMBER              : 
FOR                  : 32
FROM                 : 
GLOBAL               : 
GREATER              : 50
GREATEREQUAL         : 
HEXADECIMALNUMBER    : 
IF                   : 28 29
IMPORT               : 23
IN                   : 32
INDENT               : 36
INUMBER              : 
IS                   : 
LAMBDA               : 
LBRACE               : 
LEFTSHIFT            : 
LESS                 : 48
LESSEQUAL            : 
LPAREN               : 40 41 59 60
LSQB                 : 
MINEQUAL             : 
MINUS                : 45 52
NAME                 : 23 32 39 42 43 56
NEWLINE              : 2 4 8 9 36
NOT                  : 
NOTEQUAL             : 
NUMBER               : 57
OCTALNUMBER          : 
OR                   : 
PASS                 : 22
PERCENT              : 
PERCENTEQUAL         : 
PLUS                 : 44 51
PLUSEQUAL            : 
PRINT                : 20
RAISE                : 
RAWSTRING            : 
RBRACE               : 
RETURN               : 21
RIGHTSHIFT           : 
RPAREN               : 40 41 59 60
RSQB                 : 
SEMI                 : 9 10
SLASH                : 47
SLASHEQUAL           : 
SLASHSLASH           : 
STAR                 : 46
STAREQUAL            : 
STARSTAR             : 
STRING               : 58
TILDE                : 
TRIPLESTRING         : 
TRY                  : 
UNICODESTRING        : 
VBAR                 : 
WHILE                : 33 34
WITH                 : 
WS                   : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arglist              : 60 66
argument             : 66 67
atom                 : 54 55
comparison           : 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 52 65
compound_stmt        : 7
elif_expr            : 28 29 31
expr_stmt            : 13
file_input           : 1 2 3
flow_stmt            : 12
for_stmt             : 25
funcdef              : 27
if_stmt              : 24
import_stmt          : 16
parameters           : 39
pass_stmt            : 15
power                : 53
print_stmt           : 14
program              : 0
return_stmt          : 19
simple_stmt          : 6 35
small_stmt           : 10 11
small_stmts          : 8 9 10
stmt                 : 3 5 37 38
stmts                : 36 37
suite                : 28 29 29 31 32 33 34 34 39
test                 : 20 28 29 31 32 33 34 63 64 68
testlist             : 17 17 18 21 59
testlist_multi       : 61 62 63
trailer              : 55
varargslist          : 41 42
while_stmt           : 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . file_input ENDMARKER
    (2) file_input -> . file_input NEWLINE
    (3) file_input -> . file_input stmt
    (4) file_input -> . NEWLINE
    (5) file_input -> . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . for_stmt
    (26) compound_stmt -> . while_stmt
    (27) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (28) if_stmt -> . IF test COLON suite elif_expr
    (29) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (32) for_stmt -> . FOR NAME IN test COLON suite
    (33) while_stmt -> . WHILE test COLON suite
    (34) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (39) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 14
    IF              shift and go to state 20
    FOR             shift and go to state 23
    WHILE           shift and go to state 4
    DEF             shift and go to state 10
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 11
    expr_stmt                      shift and go to state 30
    print_stmt                     shift and go to state 17
    program                        shift and go to state 18
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 24
    testlist                       shift and go to state 25
    stmt                           shift and go to state 26
    for_stmt                       shift and go to state 27
    testlist_multi                 shift and go to state 28
    atom                           shift and go to state 13
    funcdef                        shift and go to state 29
    import_stmt                    shift and go to state 36
    pass_stmt                      shift and go to state 12
    comparison                     shift and go to state 32
    if_stmt                        shift and go to state 33
    file_input                     shift and go to state 34
    while_stmt                     shift and go to state 35
    small_stmts                    shift and go to state 37

state 1

    (59) atom -> LPAREN . testlist RPAREN
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    testlist                       shift and go to state 39
    testlist_multi                 shift and go to state 28
    atom                           shift and go to state 13
    test                           shift and go to state 19

state 2

    (11) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 11 (small_stmts -> small_stmt .)
    SEMI            reduce using rule 11 (small_stmts -> small_stmt .)


state 3

    (22) pass_stmt -> PASS .

    NEWLINE         reduce using rule 22 (pass_stmt -> PASS .)
    SEMI            reduce using rule 22 (pass_stmt -> PASS .)


state 4

    (33) while_stmt -> WHILE . test COLON suite
    (34) while_stmt -> WHILE . test COLON suite ELSE COLON suite
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    atom                           shift and go to state 13
    test                           shift and go to state 40

state 5

    (19) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 19 (flow_stmt -> return_stmt .)
    SEMI            reduce using rule 19 (flow_stmt -> return_stmt .)


state 6

    (23) import_stmt -> IMPORT . NAME

    NAME            shift and go to state 41


state 7

    (20) print_stmt -> PRINT . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    atom                           shift and go to state 13
    test                           shift and go to state 42

state 8

    (21) return_stmt -> RETURN . testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    testlist                       shift and go to state 43
    testlist_multi                 shift and go to state 28
    atom                           shift and go to state 13
    test                           shift and go to state 19

state 9

    (52) comparison -> MINUS . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 44
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 10

    (39) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 45


state 11

    (12) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 12 (small_stmt -> flow_stmt .)
    SEMI            reduce using rule 12 (small_stmt -> flow_stmt .)


state 12

    (15) small_stmt -> pass_stmt .

    NEWLINE         reduce using rule 15 (small_stmt -> pass_stmt .)
    SEMI            reduce using rule 15 (small_stmt -> pass_stmt .)


state 13

    (54) power -> atom .
    (55) power -> atom . trailer
    (60) trailer -> . LPAREN arglist RPAREN

    PLUS            reduce using rule 54 (power -> atom .)
    MINUS           reduce using rule 54 (power -> atom .)
    STAR            reduce using rule 54 (power -> atom .)
    SLASH           reduce using rule 54 (power -> atom .)
    LESS            reduce using rule 54 (power -> atom .)
    EQEQUAL         reduce using rule 54 (power -> atom .)
    GREATER         reduce using rule 54 (power -> atom .)
    COMMA           reduce using rule 54 (power -> atom .)
    EQUAL           reduce using rule 54 (power -> atom .)
    NEWLINE         reduce using rule 54 (power -> atom .)
    SEMI            reduce using rule 54 (power -> atom .)
    RPAREN          reduce using rule 54 (power -> atom .)
    COLON           reduce using rule 54 (power -> atom .)
    LPAREN          shift and go to state 46

    trailer                        shift and go to state 47

state 14

    (4) file_input -> NEWLINE .

    ENDMARKER       reduce using rule 4 (file_input -> NEWLINE .)
    NEWLINE         reduce using rule 4 (file_input -> NEWLINE .)
    IF              reduce using rule 4 (file_input -> NEWLINE .)
    FOR             reduce using rule 4 (file_input -> NEWLINE .)
    WHILE           reduce using rule 4 (file_input -> NEWLINE .)
    DEF             reduce using rule 4 (file_input -> NEWLINE .)
    PRINT           reduce using rule 4 (file_input -> NEWLINE .)
    PASS            reduce using rule 4 (file_input -> NEWLINE .)
    IMPORT          reduce using rule 4 (file_input -> NEWLINE .)
    RETURN          reduce using rule 4 (file_input -> NEWLINE .)
    PLUS            reduce using rule 4 (file_input -> NEWLINE .)
    MINUS           reduce using rule 4 (file_input -> NEWLINE .)
    NAME            reduce using rule 4 (file_input -> NEWLINE .)
    NUMBER          reduce using rule 4 (file_input -> NEWLINE .)
    STRING          reduce using rule 4 (file_input -> NEWLINE .)
    LPAREN          reduce using rule 4 (file_input -> NEWLINE .)


state 15

    (51) comparison -> PLUS . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 48
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 16

    (53) comparison -> power .

    PLUS            reduce using rule 53 (comparison -> power .)
    MINUS           reduce using rule 53 (comparison -> power .)
    STAR            reduce using rule 53 (comparison -> power .)
    SLASH           reduce using rule 53 (comparison -> power .)
    LESS            reduce using rule 53 (comparison -> power .)
    EQEQUAL         reduce using rule 53 (comparison -> power .)
    GREATER         reduce using rule 53 (comparison -> power .)
    COMMA           reduce using rule 53 (comparison -> power .)
    EQUAL           reduce using rule 53 (comparison -> power .)
    NEWLINE         reduce using rule 53 (comparison -> power .)
    SEMI            reduce using rule 53 (comparison -> power .)
    COLON           reduce using rule 53 (comparison -> power .)
    RPAREN          reduce using rule 53 (comparison -> power .)


state 17

    (14) small_stmt -> print_stmt .

    NEWLINE         reduce using rule 14 (small_stmt -> print_stmt .)
    SEMI            reduce using rule 14 (small_stmt -> print_stmt .)


state 18

    (0) S' -> program .



state 19

    (64) testlist_multi -> test .

    COMMA           reduce using rule 64 (testlist_multi -> test .)
    EQUAL           reduce using rule 64 (testlist_multi -> test .)
    NEWLINE         reduce using rule 64 (testlist_multi -> test .)
    SEMI            reduce using rule 64 (testlist_multi -> test .)
    RPAREN          reduce using rule 64 (testlist_multi -> test .)


state 20

    (28) if_stmt -> IF . test COLON suite elif_expr
    (29) if_stmt -> IF . test COLON suite elif_expr ELSE COLON suite
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    atom                           shift and go to state 13
    test                           shift and go to state 49

state 21

    (7) stmt -> compound_stmt .

    DEDENT          reduce using rule 7 (stmt -> compound_stmt .)
    IF              reduce using rule 7 (stmt -> compound_stmt .)
    FOR             reduce using rule 7 (stmt -> compound_stmt .)
    WHILE           reduce using rule 7 (stmt -> compound_stmt .)
    DEF             reduce using rule 7 (stmt -> compound_stmt .)
    PRINT           reduce using rule 7 (stmt -> compound_stmt .)
    PASS            reduce using rule 7 (stmt -> compound_stmt .)
    IMPORT          reduce using rule 7 (stmt -> compound_stmt .)
    RETURN          reduce using rule 7 (stmt -> compound_stmt .)
    PLUS            reduce using rule 7 (stmt -> compound_stmt .)
    MINUS           reduce using rule 7 (stmt -> compound_stmt .)
    NAME            reduce using rule 7 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 7 (stmt -> compound_stmt .)
    STRING          reduce using rule 7 (stmt -> compound_stmt .)
    LPAREN          reduce using rule 7 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 7 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 7 (stmt -> compound_stmt .)


state 22

    (58) atom -> STRING .

    LPAREN          reduce using rule 58 (atom -> STRING .)
    PLUS            reduce using rule 58 (atom -> STRING .)
    MINUS           reduce using rule 58 (atom -> STRING .)
    STAR            reduce using rule 58 (atom -> STRING .)
    SLASH           reduce using rule 58 (atom -> STRING .)
    LESS            reduce using rule 58 (atom -> STRING .)
    EQEQUAL         reduce using rule 58 (atom -> STRING .)
    GREATER         reduce using rule 58 (atom -> STRING .)
    COMMA           reduce using rule 58 (atom -> STRING .)
    EQUAL           reduce using rule 58 (atom -> STRING .)
    NEWLINE         reduce using rule 58 (atom -> STRING .)
    SEMI            reduce using rule 58 (atom -> STRING .)
    RPAREN          reduce using rule 58 (atom -> STRING .)
    COLON           reduce using rule 58 (atom -> STRING .)


state 23

    (32) for_stmt -> FOR . NAME IN test COLON suite

    NAME            shift and go to state 50


state 24

    (6) stmt -> simple_stmt .

    DEDENT          reduce using rule 6 (stmt -> simple_stmt .)
    IF              reduce using rule 6 (stmt -> simple_stmt .)
    FOR             reduce using rule 6 (stmt -> simple_stmt .)
    WHILE           reduce using rule 6 (stmt -> simple_stmt .)
    DEF             reduce using rule 6 (stmt -> simple_stmt .)
    PRINT           reduce using rule 6 (stmt -> simple_stmt .)
    PASS            reduce using rule 6 (stmt -> simple_stmt .)
    IMPORT          reduce using rule 6 (stmt -> simple_stmt .)
    RETURN          reduce using rule 6 (stmt -> simple_stmt .)
    PLUS            reduce using rule 6 (stmt -> simple_stmt .)
    MINUS           reduce using rule 6 (stmt -> simple_stmt .)
    NAME            reduce using rule 6 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 6 (stmt -> simple_stmt .)
    STRING          reduce using rule 6 (stmt -> simple_stmt .)
    LPAREN          reduce using rule 6 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 6 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 6 (stmt -> simple_stmt .)


state 25

    (17) expr_stmt -> testlist . EQUAL testlist
    (18) expr_stmt -> testlist .

    EQUAL           shift and go to state 51
    NEWLINE         reduce using rule 18 (expr_stmt -> testlist .)
    SEMI            reduce using rule 18 (expr_stmt -> testlist .)


state 26

    (5) file_input -> stmt .

    ENDMARKER       reduce using rule 5 (file_input -> stmt .)
    NEWLINE         reduce using rule 5 (file_input -> stmt .)
    IF              reduce using rule 5 (file_input -> stmt .)
    FOR             reduce using rule 5 (file_input -> stmt .)
    WHILE           reduce using rule 5 (file_input -> stmt .)
    DEF             reduce using rule 5 (file_input -> stmt .)
    PRINT           reduce using rule 5 (file_input -> stmt .)
    PASS            reduce using rule 5 (file_input -> stmt .)
    IMPORT          reduce using rule 5 (file_input -> stmt .)
    RETURN          reduce using rule 5 (file_input -> stmt .)
    PLUS            reduce using rule 5 (file_input -> stmt .)
    MINUS           reduce using rule 5 (file_input -> stmt .)
    NAME            reduce using rule 5 (file_input -> stmt .)
    NUMBER          reduce using rule 5 (file_input -> stmt .)
    STRING          reduce using rule 5 (file_input -> stmt .)
    LPAREN          reduce using rule 5 (file_input -> stmt .)


state 27

    (25) compound_stmt -> for_stmt .

    ENDMARKER       reduce using rule 25 (compound_stmt -> for_stmt .)
    NEWLINE         reduce using rule 25 (compound_stmt -> for_stmt .)
    IF              reduce using rule 25 (compound_stmt -> for_stmt .)
    FOR             reduce using rule 25 (compound_stmt -> for_stmt .)
    WHILE           reduce using rule 25 (compound_stmt -> for_stmt .)
    DEF             reduce using rule 25 (compound_stmt -> for_stmt .)
    PRINT           reduce using rule 25 (compound_stmt -> for_stmt .)
    PASS            reduce using rule 25 (compound_stmt -> for_stmt .)
    IMPORT          reduce using rule 25 (compound_stmt -> for_stmt .)
    RETURN          reduce using rule 25 (compound_stmt -> for_stmt .)
    PLUS            reduce using rule 25 (compound_stmt -> for_stmt .)
    MINUS           reduce using rule 25 (compound_stmt -> for_stmt .)
    NAME            reduce using rule 25 (compound_stmt -> for_stmt .)
    NUMBER          reduce using rule 25 (compound_stmt -> for_stmt .)
    STRING          reduce using rule 25 (compound_stmt -> for_stmt .)
    LPAREN          reduce using rule 25 (compound_stmt -> for_stmt .)
    DEDENT          reduce using rule 25 (compound_stmt -> for_stmt .)


state 28

    (61) testlist -> testlist_multi . COMMA
    (62) testlist -> testlist_multi .
    (63) testlist_multi -> testlist_multi . COMMA test

    COMMA           shift and go to state 52
    EQUAL           reduce using rule 62 (testlist -> testlist_multi .)
    NEWLINE         reduce using rule 62 (testlist -> testlist_multi .)
    SEMI            reduce using rule 62 (testlist -> testlist_multi .)
    RPAREN          reduce using rule 62 (testlist -> testlist_multi .)


state 29

    (27) compound_stmt -> funcdef .

    ENDMARKER       reduce using rule 27 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 27 (compound_stmt -> funcdef .)
    IF              reduce using rule 27 (compound_stmt -> funcdef .)
    FOR             reduce using rule 27 (compound_stmt -> funcdef .)
    WHILE           reduce using rule 27 (compound_stmt -> funcdef .)
    DEF             reduce using rule 27 (compound_stmt -> funcdef .)
    PRINT           reduce using rule 27 (compound_stmt -> funcdef .)
    PASS            reduce using rule 27 (compound_stmt -> funcdef .)
    IMPORT          reduce using rule 27 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 27 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 27 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 27 (compound_stmt -> funcdef .)
    NAME            reduce using rule 27 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 27 (compound_stmt -> funcdef .)
    STRING          reduce using rule 27 (compound_stmt -> funcdef .)
    LPAREN          reduce using rule 27 (compound_stmt -> funcdef .)
    DEDENT          reduce using rule 27 (compound_stmt -> funcdef .)


state 30

    (13) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 13 (small_stmt -> expr_stmt .)
    SEMI            reduce using rule 13 (small_stmt -> expr_stmt .)


state 31

    (56) atom -> NAME .

    LPAREN          reduce using rule 56 (atom -> NAME .)
    PLUS            reduce using rule 56 (atom -> NAME .)
    MINUS           reduce using rule 56 (atom -> NAME .)
    STAR            reduce using rule 56 (atom -> NAME .)
    SLASH           reduce using rule 56 (atom -> NAME .)
    LESS            reduce using rule 56 (atom -> NAME .)
    EQEQUAL         reduce using rule 56 (atom -> NAME .)
    GREATER         reduce using rule 56 (atom -> NAME .)
    COMMA           reduce using rule 56 (atom -> NAME .)
    EQUAL           reduce using rule 56 (atom -> NAME .)
    NEWLINE         reduce using rule 56 (atom -> NAME .)
    SEMI            reduce using rule 56 (atom -> NAME .)
    RPAREN          reduce using rule 56 (atom -> NAME .)
    COLON           reduce using rule 56 (atom -> NAME .)


state 32

    (65) test -> comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    COMMA           reduce using rule 65 (test -> comparison .)
    EQUAL           reduce using rule 65 (test -> comparison .)
    NEWLINE         reduce using rule 65 (test -> comparison .)
    SEMI            reduce using rule 65 (test -> comparison .)
    COLON           reduce using rule 65 (test -> comparison .)
    RPAREN          reduce using rule 65 (test -> comparison .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 59
    STAR            shift and go to state 53
    SLASH           shift and go to state 58
    LESS            shift and go to state 55
    EQEQUAL         shift and go to state 56
    GREATER         shift and go to state 54


state 33

    (24) compound_stmt -> if_stmt .

    ENDMARKER       reduce using rule 24 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 24 (compound_stmt -> if_stmt .)
    IF              reduce using rule 24 (compound_stmt -> if_stmt .)
    FOR             reduce using rule 24 (compound_stmt -> if_stmt .)
    WHILE           reduce using rule 24 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 24 (compound_stmt -> if_stmt .)
    PRINT           reduce using rule 24 (compound_stmt -> if_stmt .)
    PASS            reduce using rule 24 (compound_stmt -> if_stmt .)
    IMPORT          reduce using rule 24 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 24 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 24 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 24 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 24 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 24 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 24 (compound_stmt -> if_stmt .)
    LPAREN          reduce using rule 24 (compound_stmt -> if_stmt .)
    DEDENT          reduce using rule 24 (compound_stmt -> if_stmt .)


state 34

    (1) program -> file_input . ENDMARKER
    (2) file_input -> file_input . NEWLINE
    (3) file_input -> file_input . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . for_stmt
    (26) compound_stmt -> . while_stmt
    (27) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (28) if_stmt -> . IF test COLON suite elif_expr
    (29) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (32) for_stmt -> . FOR NAME IN test COLON suite
    (33) while_stmt -> . WHILE test COLON suite
    (34) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (39) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    ENDMARKER       shift and go to state 60
    NEWLINE         shift and go to state 61
    IF              shift and go to state 20
    FOR             shift and go to state 23
    WHILE           shift and go to state 4
    DEF             shift and go to state 10
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 11
    expr_stmt                      shift and go to state 30
    print_stmt                     shift and go to state 17
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 24
    testlist                       shift and go to state 25
    stmt                           shift and go to state 62
    for_stmt                       shift and go to state 27
    testlist_multi                 shift and go to state 28
    atom                           shift and go to state 13
    funcdef                        shift and go to state 29
    import_stmt                    shift and go to state 36
    if_stmt                        shift and go to state 33
    comparison                     shift and go to state 32
    pass_stmt                      shift and go to state 12
    while_stmt                     shift and go to state 35
    small_stmts                    shift and go to state 37

state 35

    (26) compound_stmt -> while_stmt .

    ENDMARKER       reduce using rule 26 (compound_stmt -> while_stmt .)
    NEWLINE         reduce using rule 26 (compound_stmt -> while_stmt .)
    IF              reduce using rule 26 (compound_stmt -> while_stmt .)
    FOR             reduce using rule 26 (compound_stmt -> while_stmt .)
    WHILE           reduce using rule 26 (compound_stmt -> while_stmt .)
    DEF             reduce using rule 26 (compound_stmt -> while_stmt .)
    PRINT           reduce using rule 26 (compound_stmt -> while_stmt .)
    PASS            reduce using rule 26 (compound_stmt -> while_stmt .)
    IMPORT          reduce using rule 26 (compound_stmt -> while_stmt .)
    RETURN          reduce using rule 26 (compound_stmt -> while_stmt .)
    PLUS            reduce using rule 26 (compound_stmt -> while_stmt .)
    MINUS           reduce using rule 26 (compound_stmt -> while_stmt .)
    NAME            reduce using rule 26 (compound_stmt -> while_stmt .)
    NUMBER          reduce using rule 26 (compound_stmt -> while_stmt .)
    STRING          reduce using rule 26 (compound_stmt -> while_stmt .)
    LPAREN          reduce using rule 26 (compound_stmt -> while_stmt .)
    DEDENT          reduce using rule 26 (compound_stmt -> while_stmt .)


state 36

    (16) small_stmt -> import_stmt .

    NEWLINE         reduce using rule 16 (small_stmt -> import_stmt .)
    SEMI            reduce using rule 16 (small_stmt -> import_stmt .)


state 37

    (8) simple_stmt -> small_stmts . NEWLINE
    (9) simple_stmt -> small_stmts . SEMI NEWLINE
    (10) small_stmts -> small_stmts . SEMI small_stmt

    NEWLINE         shift and go to state 63
    SEMI            shift and go to state 64


state 38

    (57) atom -> NUMBER .

    LPAREN          reduce using rule 57 (atom -> NUMBER .)
    PLUS            reduce using rule 57 (atom -> NUMBER .)
    MINUS           reduce using rule 57 (atom -> NUMBER .)
    STAR            reduce using rule 57 (atom -> NUMBER .)
    SLASH           reduce using rule 57 (atom -> NUMBER .)
    LESS            reduce using rule 57 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 57 (atom -> NUMBER .)
    GREATER         reduce using rule 57 (atom -> NUMBER .)
    COMMA           reduce using rule 57 (atom -> NUMBER .)
    EQUAL           reduce using rule 57 (atom -> NUMBER .)
    NEWLINE         reduce using rule 57 (atom -> NUMBER .)
    SEMI            reduce using rule 57 (atom -> NUMBER .)
    RPAREN          reduce using rule 57 (atom -> NUMBER .)
    COLON           reduce using rule 57 (atom -> NUMBER .)


state 39

    (59) atom -> LPAREN testlist . RPAREN

    RPAREN          shift and go to state 65


state 40

    (33) while_stmt -> WHILE test . COLON suite
    (34) while_stmt -> WHILE test . COLON suite ELSE COLON suite

    COLON           shift and go to state 66


state 41

    (23) import_stmt -> IMPORT NAME .

    NEWLINE         reduce using rule 23 (import_stmt -> IMPORT NAME .)
    SEMI            reduce using rule 23 (import_stmt -> IMPORT NAME .)


state 42

    (20) print_stmt -> PRINT test .

    NEWLINE         reduce using rule 20 (print_stmt -> PRINT test .)
    SEMI            reduce using rule 20 (print_stmt -> PRINT test .)


state 43

    (21) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 21 (return_stmt -> RETURN testlist .)
    SEMI            reduce using rule 21 (return_stmt -> RETURN testlist .)


state 44

    (52) comparison -> MINUS comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 52 (comparison -> MINUS comparison .)
    MINUS           reduce using rule 52 (comparison -> MINUS comparison .)
    LESS            reduce using rule 52 (comparison -> MINUS comparison .)
    EQEQUAL         reduce using rule 52 (comparison -> MINUS comparison .)
    GREATER         reduce using rule 52 (comparison -> MINUS comparison .)
    COMMA           reduce using rule 52 (comparison -> MINUS comparison .)
    EQUAL           reduce using rule 52 (comparison -> MINUS comparison .)
    NEWLINE         reduce using rule 52 (comparison -> MINUS comparison .)
    SEMI            reduce using rule 52 (comparison -> MINUS comparison .)
    COLON           reduce using rule 52 (comparison -> MINUS comparison .)
    RPAREN          reduce using rule 52 (comparison -> MINUS comparison .)
    STAR            shift and go to state 53
    SLASH           shift and go to state 58

  ! STAR            [ reduce using rule 52 (comparison -> MINUS comparison .) ]
  ! SLASH           [ reduce using rule 52 (comparison -> MINUS comparison .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 59 ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 45

    (39) funcdef -> DEF NAME . parameters COLON suite
    (40) parameters -> . LPAREN RPAREN
    (41) parameters -> . LPAREN varargslist RPAREN

    LPAREN          shift and go to state 68

    parameters                     shift and go to state 67

state 46

    (60) trailer -> LPAREN . arglist RPAREN
    (66) arglist -> . arglist COMMA argument
    (67) arglist -> . argument
    (68) argument -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    argument                       shift and go to state 69
    atom                           shift and go to state 13
    test                           shift and go to state 70
    arglist                        shift and go to state 71

state 47

    (55) power -> atom trailer .

    PLUS            reduce using rule 55 (power -> atom trailer .)
    MINUS           reduce using rule 55 (power -> atom trailer .)
    STAR            reduce using rule 55 (power -> atom trailer .)
    SLASH           reduce using rule 55 (power -> atom trailer .)
    LESS            reduce using rule 55 (power -> atom trailer .)
    EQEQUAL         reduce using rule 55 (power -> atom trailer .)
    GREATER         reduce using rule 55 (power -> atom trailer .)
    COMMA           reduce using rule 55 (power -> atom trailer .)
    EQUAL           reduce using rule 55 (power -> atom trailer .)
    NEWLINE         reduce using rule 55 (power -> atom trailer .)
    SEMI            reduce using rule 55 (power -> atom trailer .)
    RPAREN          reduce using rule 55 (power -> atom trailer .)
    COLON           reduce using rule 55 (power -> atom trailer .)


state 48

    (51) comparison -> PLUS comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 51 (comparison -> PLUS comparison .)
    MINUS           reduce using rule 51 (comparison -> PLUS comparison .)
    LESS            reduce using rule 51 (comparison -> PLUS comparison .)
    EQEQUAL         reduce using rule 51 (comparison -> PLUS comparison .)
    GREATER         reduce using rule 51 (comparison -> PLUS comparison .)
    COMMA           reduce using rule 51 (comparison -> PLUS comparison .)
    EQUAL           reduce using rule 51 (comparison -> PLUS comparison .)
    NEWLINE         reduce using rule 51 (comparison -> PLUS comparison .)
    SEMI            reduce using rule 51 (comparison -> PLUS comparison .)
    COLON           reduce using rule 51 (comparison -> PLUS comparison .)
    RPAREN          reduce using rule 51 (comparison -> PLUS comparison .)
    STAR            shift and go to state 53
    SLASH           shift and go to state 58

  ! STAR            [ reduce using rule 51 (comparison -> PLUS comparison .) ]
  ! SLASH           [ reduce using rule 51 (comparison -> PLUS comparison .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 59 ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 49

    (28) if_stmt -> IF test . COLON suite elif_expr
    (29) if_stmt -> IF test . COLON suite elif_expr ELSE COLON suite

    COLON           shift and go to state 72


state 50

    (32) for_stmt -> FOR NAME . IN test COLON suite

    IN              shift and go to state 73


state 51

    (17) expr_stmt -> testlist EQUAL . testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    testlist                       shift and go to state 74
    testlist_multi                 shift and go to state 28
    atom                           shift and go to state 13
    test                           shift and go to state 19

state 52

    (61) testlist -> testlist_multi COMMA .
    (63) testlist_multi -> testlist_multi COMMA . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    EQUAL           reduce using rule 61 (testlist -> testlist_multi COMMA .)
    NEWLINE         reduce using rule 61 (testlist -> testlist_multi COMMA .)
    SEMI            reduce using rule 61 (testlist -> testlist_multi COMMA .)
    RPAREN          reduce using rule 61 (testlist -> testlist_multi COMMA .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    atom                           shift and go to state 13
    test                           shift and go to state 75

state 53

    (46) comparison -> comparison STAR . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 76
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 54

    (50) comparison -> comparison GREATER . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 77
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 55

    (48) comparison -> comparison LESS . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 78
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 56

    (49) comparison -> comparison EQEQUAL . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 79
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 57

    (44) comparison -> comparison PLUS . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 80
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 58

    (47) comparison -> comparison SLASH . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 81
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 59

    (45) comparison -> comparison MINUS . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 82
    power                          shift and go to state 16
    atom                           shift and go to state 13

state 60

    (1) program -> file_input ENDMARKER .

    $end            reduce using rule 1 (program -> file_input ENDMARKER .)


state 61

    (2) file_input -> file_input NEWLINE .

    ENDMARKER       reduce using rule 2 (file_input -> file_input NEWLINE .)
    NEWLINE         reduce using rule 2 (file_input -> file_input NEWLINE .)
    IF              reduce using rule 2 (file_input -> file_input NEWLINE .)
    FOR             reduce using rule 2 (file_input -> file_input NEWLINE .)
    WHILE           reduce using rule 2 (file_input -> file_input NEWLINE .)
    DEF             reduce using rule 2 (file_input -> file_input NEWLINE .)
    PRINT           reduce using rule 2 (file_input -> file_input NEWLINE .)
    PASS            reduce using rule 2 (file_input -> file_input NEWLINE .)
    IMPORT          reduce using rule 2 (file_input -> file_input NEWLINE .)
    RETURN          reduce using rule 2 (file_input -> file_input NEWLINE .)
    PLUS            reduce using rule 2 (file_input -> file_input NEWLINE .)
    MINUS           reduce using rule 2 (file_input -> file_input NEWLINE .)
    NAME            reduce using rule 2 (file_input -> file_input NEWLINE .)
    NUMBER          reduce using rule 2 (file_input -> file_input NEWLINE .)
    STRING          reduce using rule 2 (file_input -> file_input NEWLINE .)
    LPAREN          reduce using rule 2 (file_input -> file_input NEWLINE .)


state 62

    (3) file_input -> file_input stmt .

    ENDMARKER       reduce using rule 3 (file_input -> file_input stmt .)
    NEWLINE         reduce using rule 3 (file_input -> file_input stmt .)
    IF              reduce using rule 3 (file_input -> file_input stmt .)
    FOR             reduce using rule 3 (file_input -> file_input stmt .)
    WHILE           reduce using rule 3 (file_input -> file_input stmt .)
    DEF             reduce using rule 3 (file_input -> file_input stmt .)
    PRINT           reduce using rule 3 (file_input -> file_input stmt .)
    PASS            reduce using rule 3 (file_input -> file_input stmt .)
    IMPORT          reduce using rule 3 (file_input -> file_input stmt .)
    RETURN          reduce using rule 3 (file_input -> file_input stmt .)
    PLUS            reduce using rule 3 (file_input -> file_input stmt .)
    MINUS           reduce using rule 3 (file_input -> file_input stmt .)
    NAME            reduce using rule 3 (file_input -> file_input stmt .)
    NUMBER          reduce using rule 3 (file_input -> file_input stmt .)
    STRING          reduce using rule 3 (file_input -> file_input stmt .)
    LPAREN          reduce using rule 3 (file_input -> file_input stmt .)


state 63

    (8) simple_stmt -> small_stmts NEWLINE .

    ENDMARKER       reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    FOR             reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    WHILE           reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    PRINT           reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    PASS            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    IMPORT          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    LPAREN          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    DEDENT          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    ELSE            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    ELIF            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)


state 64

    (9) simple_stmt -> small_stmts SEMI . NEWLINE
    (10) small_stmts -> small_stmts SEMI . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 84
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    import_stmt                    shift and go to state 36
    pass_stmt                      shift and go to state 12
    power                          shift and go to state 16
    small_stmt                     shift and go to state 83
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 13
    test                           shift and go to state 19
    testlist_multi                 shift and go to state 28
    expr_stmt                      shift and go to state 30

state 65

    (59) atom -> LPAREN testlist RPAREN .

    LPAREN          reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    PLUS            reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    MINUS           reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    STAR            reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    SLASH           reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    LESS            reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    EQEQUAL         reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    GREATER         reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    COMMA           reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    EQUAL           reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    NEWLINE         reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    SEMI            reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    RPAREN          reduce using rule 59 (atom -> LPAREN testlist RPAREN .)
    COLON           reduce using rule 59 (atom -> LPAREN testlist RPAREN .)


state 66

    (33) while_stmt -> WHILE test COLON . suite
    (34) while_stmt -> WHILE test COLON . suite ELSE COLON suite
    (35) suite -> . simple_stmt
    (36) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 85
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    import_stmt                    shift and go to state 36
    pass_stmt                      shift and go to state 12
    power                          shift and go to state 16
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 87
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    testlist_multi                 shift and go to state 28
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 13
    test                           shift and go to state 19
    suite                          shift and go to state 86
    expr_stmt                      shift and go to state 30
    small_stmts                    shift and go to state 37

state 67

    (39) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 88


state 68

    (40) parameters -> LPAREN . RPAREN
    (41) parameters -> LPAREN . varargslist RPAREN
    (42) varargslist -> . varargslist COMMA NAME
    (43) varargslist -> . NAME

    RPAREN          shift and go to state 90
    NAME            shift and go to state 91

    varargslist                    shift and go to state 89

state 69

    (67) arglist -> argument .

    RPAREN          reduce using rule 67 (arglist -> argument .)
    COMMA           reduce using rule 67 (arglist -> argument .)


state 70

    (68) argument -> test .

    RPAREN          reduce using rule 68 (argument -> test .)
    COMMA           reduce using rule 68 (argument -> test .)


state 71

    (60) trailer -> LPAREN arglist . RPAREN
    (66) arglist -> arglist . COMMA argument

    RPAREN          shift and go to state 93
    COMMA           shift and go to state 92


state 72

    (28) if_stmt -> IF test COLON . suite elif_expr
    (29) if_stmt -> IF test COLON . suite elif_expr ELSE COLON suite
    (35) suite -> . simple_stmt
    (36) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 85
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    import_stmt                    shift and go to state 36
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    testlist_multi                 shift and go to state 28
    simple_stmt                    shift and go to state 87
    power                          shift and go to state 16
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 13
    test                           shift and go to state 19
    suite                          shift and go to state 94
    expr_stmt                      shift and go to state 30
    small_stmts                    shift and go to state 37
    pass_stmt                      shift and go to state 12

state 73

    (32) for_stmt -> FOR NAME IN . test COLON suite
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    atom                           shift and go to state 13
    test                           shift and go to state 95

state 74

    (17) expr_stmt -> testlist EQUAL testlist .

    NEWLINE         reduce using rule 17 (expr_stmt -> testlist EQUAL testlist .)
    SEMI            reduce using rule 17 (expr_stmt -> testlist EQUAL testlist .)


state 75

    (63) testlist_multi -> testlist_multi COMMA test .

    COMMA           reduce using rule 63 (testlist_multi -> testlist_multi COMMA test .)
    EQUAL           reduce using rule 63 (testlist_multi -> testlist_multi COMMA test .)
    NEWLINE         reduce using rule 63 (testlist_multi -> testlist_multi COMMA test .)
    SEMI            reduce using rule 63 (testlist_multi -> testlist_multi COMMA test .)
    RPAREN          reduce using rule 63 (testlist_multi -> testlist_multi COMMA test .)


state 76

    (46) comparison -> comparison STAR comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 46 (comparison -> comparison STAR comparison .)
    MINUS           reduce using rule 46 (comparison -> comparison STAR comparison .)
    STAR            reduce using rule 46 (comparison -> comparison STAR comparison .)
    SLASH           reduce using rule 46 (comparison -> comparison STAR comparison .)
    LESS            reduce using rule 46 (comparison -> comparison STAR comparison .)
    EQEQUAL         reduce using rule 46 (comparison -> comparison STAR comparison .)
    GREATER         reduce using rule 46 (comparison -> comparison STAR comparison .)
    COMMA           reduce using rule 46 (comparison -> comparison STAR comparison .)
    EQUAL           reduce using rule 46 (comparison -> comparison STAR comparison .)
    NEWLINE         reduce using rule 46 (comparison -> comparison STAR comparison .)
    SEMI            reduce using rule 46 (comparison -> comparison STAR comparison .)
    COLON           reduce using rule 46 (comparison -> comparison STAR comparison .)
    RPAREN          reduce using rule 46 (comparison -> comparison STAR comparison .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 59 ]
  ! STAR            [ shift and go to state 53 ]
  ! SLASH           [ shift and go to state 58 ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 77

    (50) comparison -> comparison GREATER comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 50 (comparison -> comparison GREATER comparison .)
    EQEQUAL         reduce using rule 50 (comparison -> comparison GREATER comparison .)
    GREATER         reduce using rule 50 (comparison -> comparison GREATER comparison .)
    COMMA           reduce using rule 50 (comparison -> comparison GREATER comparison .)
    EQUAL           reduce using rule 50 (comparison -> comparison GREATER comparison .)
    NEWLINE         reduce using rule 50 (comparison -> comparison GREATER comparison .)
    SEMI            reduce using rule 50 (comparison -> comparison GREATER comparison .)
    COLON           reduce using rule 50 (comparison -> comparison GREATER comparison .)
    RPAREN          reduce using rule 50 (comparison -> comparison GREATER comparison .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 59
    STAR            shift and go to state 53
    SLASH           shift and go to state 58

  ! PLUS            [ reduce using rule 50 (comparison -> comparison GREATER comparison .) ]
  ! MINUS           [ reduce using rule 50 (comparison -> comparison GREATER comparison .) ]
  ! STAR            [ reduce using rule 50 (comparison -> comparison GREATER comparison .) ]
  ! SLASH           [ reduce using rule 50 (comparison -> comparison GREATER comparison .) ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 78

    (48) comparison -> comparison LESS comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 48 (comparison -> comparison LESS comparison .)
    EQEQUAL         reduce using rule 48 (comparison -> comparison LESS comparison .)
    GREATER         reduce using rule 48 (comparison -> comparison LESS comparison .)
    COMMA           reduce using rule 48 (comparison -> comparison LESS comparison .)
    EQUAL           reduce using rule 48 (comparison -> comparison LESS comparison .)
    NEWLINE         reduce using rule 48 (comparison -> comparison LESS comparison .)
    SEMI            reduce using rule 48 (comparison -> comparison LESS comparison .)
    COLON           reduce using rule 48 (comparison -> comparison LESS comparison .)
    RPAREN          reduce using rule 48 (comparison -> comparison LESS comparison .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 59
    STAR            shift and go to state 53
    SLASH           shift and go to state 58

  ! PLUS            [ reduce using rule 48 (comparison -> comparison LESS comparison .) ]
  ! MINUS           [ reduce using rule 48 (comparison -> comparison LESS comparison .) ]
  ! STAR            [ reduce using rule 48 (comparison -> comparison LESS comparison .) ]
  ! SLASH           [ reduce using rule 48 (comparison -> comparison LESS comparison .) ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 79

    (49) comparison -> comparison EQEQUAL comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    EQEQUAL         reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    GREATER         reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    COMMA           reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    EQUAL           reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    NEWLINE         reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    SEMI            reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    COLON           reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    RPAREN          reduce using rule 49 (comparison -> comparison EQEQUAL comparison .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 59
    STAR            shift and go to state 53
    SLASH           shift and go to state 58

  ! PLUS            [ reduce using rule 49 (comparison -> comparison EQEQUAL comparison .) ]
  ! MINUS           [ reduce using rule 49 (comparison -> comparison EQEQUAL comparison .) ]
  ! STAR            [ reduce using rule 49 (comparison -> comparison EQEQUAL comparison .) ]
  ! SLASH           [ reduce using rule 49 (comparison -> comparison EQEQUAL comparison .) ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 80

    (44) comparison -> comparison PLUS comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 44 (comparison -> comparison PLUS comparison .)
    MINUS           reduce using rule 44 (comparison -> comparison PLUS comparison .)
    LESS            reduce using rule 44 (comparison -> comparison PLUS comparison .)
    EQEQUAL         reduce using rule 44 (comparison -> comparison PLUS comparison .)
    GREATER         reduce using rule 44 (comparison -> comparison PLUS comparison .)
    COMMA           reduce using rule 44 (comparison -> comparison PLUS comparison .)
    EQUAL           reduce using rule 44 (comparison -> comparison PLUS comparison .)
    NEWLINE         reduce using rule 44 (comparison -> comparison PLUS comparison .)
    SEMI            reduce using rule 44 (comparison -> comparison PLUS comparison .)
    COLON           reduce using rule 44 (comparison -> comparison PLUS comparison .)
    RPAREN          reduce using rule 44 (comparison -> comparison PLUS comparison .)
    STAR            shift and go to state 53
    SLASH           shift and go to state 58

  ! STAR            [ reduce using rule 44 (comparison -> comparison PLUS comparison .) ]
  ! SLASH           [ reduce using rule 44 (comparison -> comparison PLUS comparison .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 59 ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 81

    (47) comparison -> comparison SLASH comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 47 (comparison -> comparison SLASH comparison .)
    MINUS           reduce using rule 47 (comparison -> comparison SLASH comparison .)
    STAR            reduce using rule 47 (comparison -> comparison SLASH comparison .)
    SLASH           reduce using rule 47 (comparison -> comparison SLASH comparison .)
    LESS            reduce using rule 47 (comparison -> comparison SLASH comparison .)
    EQEQUAL         reduce using rule 47 (comparison -> comparison SLASH comparison .)
    GREATER         reduce using rule 47 (comparison -> comparison SLASH comparison .)
    COMMA           reduce using rule 47 (comparison -> comparison SLASH comparison .)
    EQUAL           reduce using rule 47 (comparison -> comparison SLASH comparison .)
    NEWLINE         reduce using rule 47 (comparison -> comparison SLASH comparison .)
    SEMI            reduce using rule 47 (comparison -> comparison SLASH comparison .)
    COLON           reduce using rule 47 (comparison -> comparison SLASH comparison .)
    RPAREN          reduce using rule 47 (comparison -> comparison SLASH comparison .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 59 ]
  ! STAR            [ shift and go to state 53 ]
  ! SLASH           [ shift and go to state 58 ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 82

    (45) comparison -> comparison MINUS comparison .
    (44) comparison -> comparison . PLUS comparison
    (45) comparison -> comparison . MINUS comparison
    (46) comparison -> comparison . STAR comparison
    (47) comparison -> comparison . SLASH comparison
    (48) comparison -> comparison . LESS comparison
    (49) comparison -> comparison . EQEQUAL comparison
    (50) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 45 (comparison -> comparison MINUS comparison .)
    MINUS           reduce using rule 45 (comparison -> comparison MINUS comparison .)
    LESS            reduce using rule 45 (comparison -> comparison MINUS comparison .)
    EQEQUAL         reduce using rule 45 (comparison -> comparison MINUS comparison .)
    GREATER         reduce using rule 45 (comparison -> comparison MINUS comparison .)
    COMMA           reduce using rule 45 (comparison -> comparison MINUS comparison .)
    EQUAL           reduce using rule 45 (comparison -> comparison MINUS comparison .)
    NEWLINE         reduce using rule 45 (comparison -> comparison MINUS comparison .)
    SEMI            reduce using rule 45 (comparison -> comparison MINUS comparison .)
    COLON           reduce using rule 45 (comparison -> comparison MINUS comparison .)
    RPAREN          reduce using rule 45 (comparison -> comparison MINUS comparison .)
    STAR            shift and go to state 53
    SLASH           shift and go to state 58

  ! STAR            [ reduce using rule 45 (comparison -> comparison MINUS comparison .) ]
  ! SLASH           [ reduce using rule 45 (comparison -> comparison MINUS comparison .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 59 ]
  ! LESS            [ shift and go to state 55 ]
  ! EQEQUAL         [ shift and go to state 56 ]
  ! GREATER         [ shift and go to state 54 ]


state 83

    (10) small_stmts -> small_stmts SEMI small_stmt .

    NEWLINE         reduce using rule 10 (small_stmts -> small_stmts SEMI small_stmt .)
    SEMI            reduce using rule 10 (small_stmts -> small_stmts SEMI small_stmt .)


state 84

    (9) simple_stmt -> small_stmts SEMI NEWLINE .

    ENDMARKER       reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NEWLINE         reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IF              reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    FOR             reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    WHILE           reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEF             reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PRINT           reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PASS            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IMPORT          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    RETURN          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PLUS            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    MINUS           reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NAME            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NUMBER          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    STRING          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    LPAREN          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEDENT          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELSE            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELIF            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)


state 85

    (36) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 96


state 86

    (33) while_stmt -> WHILE test COLON suite .
    (34) while_stmt -> WHILE test COLON suite . ELSE COLON suite

    DEDENT          reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    IF              reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    FOR             reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    WHILE           reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    DEF             reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    PRINT           reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    PASS            reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    IMPORT          reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    RETURN          reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    PLUS            reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    MINUS           reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    NAME            reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    NUMBER          reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    STRING          reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    LPAREN          reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    ENDMARKER       reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    NEWLINE         reduce using rule 33 (while_stmt -> WHILE test COLON suite .)
    ELSE            shift and go to state 97


state 87

    (35) suite -> simple_stmt .

    ELSE            reduce using rule 35 (suite -> simple_stmt .)
    ENDMARKER       reduce using rule 35 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 35 (suite -> simple_stmt .)
    IF              reduce using rule 35 (suite -> simple_stmt .)
    FOR             reduce using rule 35 (suite -> simple_stmt .)
    WHILE           reduce using rule 35 (suite -> simple_stmt .)
    DEF             reduce using rule 35 (suite -> simple_stmt .)
    PRINT           reduce using rule 35 (suite -> simple_stmt .)
    PASS            reduce using rule 35 (suite -> simple_stmt .)
    IMPORT          reduce using rule 35 (suite -> simple_stmt .)
    RETURN          reduce using rule 35 (suite -> simple_stmt .)
    PLUS            reduce using rule 35 (suite -> simple_stmt .)
    MINUS           reduce using rule 35 (suite -> simple_stmt .)
    NAME            reduce using rule 35 (suite -> simple_stmt .)
    NUMBER          reduce using rule 35 (suite -> simple_stmt .)
    STRING          reduce using rule 35 (suite -> simple_stmt .)
    LPAREN          reduce using rule 35 (suite -> simple_stmt .)
    DEDENT          reduce using rule 35 (suite -> simple_stmt .)
    ELIF            reduce using rule 35 (suite -> simple_stmt .)


state 88

    (39) funcdef -> DEF NAME parameters COLON . suite
    (35) suite -> . simple_stmt
    (36) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 85
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    expr_stmt                      shift and go to state 30
    pass_stmt                      shift and go to state 12
    simple_stmt                    shift and go to state 87
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    testlist_multi                 shift and go to state 28
    small_stmt                     shift and go to state 2
    power                          shift and go to state 16
    return_stmt                    shift and go to state 5
    import_stmt                    shift and go to state 36
    atom                           shift and go to state 13
    test                           shift and go to state 19
    suite                          shift and go to state 98
    small_stmts                    shift and go to state 37

state 89

    (41) parameters -> LPAREN varargslist . RPAREN
    (42) varargslist -> varargslist . COMMA NAME

    RPAREN          shift and go to state 100
    COMMA           shift and go to state 99


state 90

    (40) parameters -> LPAREN RPAREN .

    COLON           reduce using rule 40 (parameters -> LPAREN RPAREN .)


state 91

    (43) varargslist -> NAME .

    RPAREN          reduce using rule 43 (varargslist -> NAME .)
    COMMA           reduce using rule 43 (varargslist -> NAME .)


state 92

    (66) arglist -> arglist COMMA . argument
    (68) argument -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    argument                       shift and go to state 101
    atom                           shift and go to state 13
    test                           shift and go to state 70

state 93

    (60) trailer -> LPAREN arglist RPAREN .

    PLUS            reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    MINUS           reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    STAR            reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    SLASH           reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    LESS            reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    EQEQUAL         reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    GREATER         reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    COMMA           reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    EQUAL           reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    NEWLINE         reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    SEMI            reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)
    COLON           reduce using rule 60 (trailer -> LPAREN arglist RPAREN .)


state 94

    (28) if_stmt -> IF test COLON suite . elif_expr
    (29) if_stmt -> IF test COLON suite . elif_expr ELSE COLON suite
    (30) elif_expr -> .
    (31) elif_expr -> . ELIF test COLON suite elif_expr

    ELSE            reduce using rule 30 (elif_expr -> .)
    ENDMARKER       reduce using rule 30 (elif_expr -> .)
    NEWLINE         reduce using rule 30 (elif_expr -> .)
    IF              reduce using rule 30 (elif_expr -> .)
    FOR             reduce using rule 30 (elif_expr -> .)
    WHILE           reduce using rule 30 (elif_expr -> .)
    DEF             reduce using rule 30 (elif_expr -> .)
    PRINT           reduce using rule 30 (elif_expr -> .)
    PASS            reduce using rule 30 (elif_expr -> .)
    IMPORT          reduce using rule 30 (elif_expr -> .)
    RETURN          reduce using rule 30 (elif_expr -> .)
    PLUS            reduce using rule 30 (elif_expr -> .)
    MINUS           reduce using rule 30 (elif_expr -> .)
    NAME            reduce using rule 30 (elif_expr -> .)
    NUMBER          reduce using rule 30 (elif_expr -> .)
    STRING          reduce using rule 30 (elif_expr -> .)
    LPAREN          reduce using rule 30 (elif_expr -> .)
    DEDENT          reduce using rule 30 (elif_expr -> .)
    ELIF            shift and go to state 102

    elif_expr                      shift and go to state 103

state 95

    (32) for_stmt -> FOR NAME IN test . COLON suite

    COLON           shift and go to state 104


state 96

    (36) suite -> NEWLINE INDENT . stmts DEDENT
    (37) stmts -> . stmts stmt
    (38) stmts -> . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . for_stmt
    (26) compound_stmt -> . while_stmt
    (27) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (28) if_stmt -> . IF test COLON suite elif_expr
    (29) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (32) for_stmt -> . FOR NAME IN test COLON suite
    (33) while_stmt -> . WHILE test COLON suite
    (34) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (39) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    IF              shift and go to state 20
    FOR             shift and go to state 23
    WHILE           shift and go to state 4
    DEF             shift and go to state 10
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 11
    expr_stmt                      shift and go to state 30
    stmts                          shift and go to state 105
    print_stmt                     shift and go to state 17
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 24
    testlist                       shift and go to state 25
    stmt                           shift and go to state 106
    for_stmt                       shift and go to state 27
    testlist_multi                 shift and go to state 28
    atom                           shift and go to state 13
    funcdef                        shift and go to state 29
    import_stmt                    shift and go to state 36
    pass_stmt                      shift and go to state 12
    comparison                     shift and go to state 32
    if_stmt                        shift and go to state 33
    while_stmt                     shift and go to state 35
    small_stmts                    shift and go to state 37

state 97

    (34) while_stmt -> WHILE test COLON suite ELSE . COLON suite

    COLON           shift and go to state 107


state 98

    (39) funcdef -> DEF NAME parameters COLON suite .

    ENDMARKER       reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    FOR             reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    WHILE           reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    PRINT           reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    PASS            reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    IMPORT          reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    LPAREN          reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 39 (funcdef -> DEF NAME parameters COLON suite .)


state 99

    (42) varargslist -> varargslist COMMA . NAME

    NAME            shift and go to state 108


state 100

    (41) parameters -> LPAREN varargslist RPAREN .

    COLON           reduce using rule 41 (parameters -> LPAREN varargslist RPAREN .)


state 101

    (66) arglist -> arglist COMMA argument .

    RPAREN          reduce using rule 66 (arglist -> arglist COMMA argument .)
    COMMA           reduce using rule 66 (arglist -> arglist COMMA argument .)


state 102

    (31) elif_expr -> ELIF . test COLON suite elif_expr
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 16
    atom                           shift and go to state 13
    test                           shift and go to state 109

state 103

    (28) if_stmt -> IF test COLON suite elif_expr .
    (29) if_stmt -> IF test COLON suite elif_expr . ELSE COLON suite

    ENDMARKER       reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    NEWLINE         reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    IF              reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    FOR             reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    WHILE           reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    DEF             reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    PRINT           reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    PASS            reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    IMPORT          reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    RETURN          reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    PLUS            reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    MINUS           reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    NAME            reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    NUMBER          reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    STRING          reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    LPAREN          reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    DEDENT          reduce using rule 28 (if_stmt -> IF test COLON suite elif_expr .)
    ELSE            shift and go to state 110


state 104

    (32) for_stmt -> FOR NAME IN test COLON . suite
    (35) suite -> . simple_stmt
    (36) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 85
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    import_stmt                    shift and go to state 36
    pass_stmt                      shift and go to state 12
    power                          shift and go to state 16
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 87
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    testlist_multi                 shift and go to state 28
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 13
    test                           shift and go to state 19
    suite                          shift and go to state 111
    expr_stmt                      shift and go to state 30
    small_stmts                    shift and go to state 37

state 105

    (36) suite -> NEWLINE INDENT stmts . DEDENT
    (37) stmts -> stmts . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . for_stmt
    (26) compound_stmt -> . while_stmt
    (27) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (28) if_stmt -> . IF test COLON suite elif_expr
    (29) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (32) for_stmt -> . FOR NAME IN test COLON suite
    (33) while_stmt -> . WHILE test COLON suite
    (34) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (39) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    DEDENT          shift and go to state 112
    IF              shift and go to state 20
    FOR             shift and go to state 23
    WHILE           shift and go to state 4
    DEF             shift and go to state 10
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 11
    expr_stmt                      shift and go to state 30
    print_stmt                     shift and go to state 17
    test                           shift and go to state 19
    compound_stmt                  shift and go to state 21
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 24
    testlist                       shift and go to state 25
    stmt                           shift and go to state 113
    for_stmt                       shift and go to state 27
    testlist_multi                 shift and go to state 28
    atom                           shift and go to state 13
    funcdef                        shift and go to state 29
    import_stmt                    shift and go to state 36
    pass_stmt                      shift and go to state 12
    comparison                     shift and go to state 32
    if_stmt                        shift and go to state 33
    while_stmt                     shift and go to state 35
    small_stmts                    shift and go to state 37

state 106

    (38) stmts -> stmt .

    DEDENT          reduce using rule 38 (stmts -> stmt .)
    IF              reduce using rule 38 (stmts -> stmt .)
    FOR             reduce using rule 38 (stmts -> stmt .)
    WHILE           reduce using rule 38 (stmts -> stmt .)
    DEF             reduce using rule 38 (stmts -> stmt .)
    PRINT           reduce using rule 38 (stmts -> stmt .)
    PASS            reduce using rule 38 (stmts -> stmt .)
    IMPORT          reduce using rule 38 (stmts -> stmt .)
    RETURN          reduce using rule 38 (stmts -> stmt .)
    PLUS            reduce using rule 38 (stmts -> stmt .)
    MINUS           reduce using rule 38 (stmts -> stmt .)
    NAME            reduce using rule 38 (stmts -> stmt .)
    NUMBER          reduce using rule 38 (stmts -> stmt .)
    STRING          reduce using rule 38 (stmts -> stmt .)
    LPAREN          reduce using rule 38 (stmts -> stmt .)


state 107

    (34) while_stmt -> WHILE test COLON suite ELSE COLON . suite
    (35) suite -> . simple_stmt
    (36) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 85
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    import_stmt                    shift and go to state 36
    pass_stmt                      shift and go to state 12
    power                          shift and go to state 16
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 87
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    testlist_multi                 shift and go to state 28
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 13
    test                           shift and go to state 19
    suite                          shift and go to state 114
    expr_stmt                      shift and go to state 30
    small_stmts                    shift and go to state 37

state 108

    (42) varargslist -> varargslist COMMA NAME .

    RPAREN          reduce using rule 42 (varargslist -> varargslist COMMA NAME .)
    COMMA           reduce using rule 42 (varargslist -> varargslist COMMA NAME .)


state 109

    (31) elif_expr -> ELIF test . COLON suite elif_expr

    COLON           shift and go to state 115


state 110

    (29) if_stmt -> IF test COLON suite elif_expr ELSE . COLON suite

    COLON           shift and go to state 116


state 111

    (32) for_stmt -> FOR NAME IN test COLON suite .

    ENDMARKER       reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    NEWLINE         reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    IF              reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    FOR             reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    WHILE           reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    DEF             reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    PRINT           reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    PASS            reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    IMPORT          reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    RETURN          reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    PLUS            reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    MINUS           reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    NAME            reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    NUMBER          reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    STRING          reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    LPAREN          reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)
    DEDENT          reduce using rule 32 (for_stmt -> FOR NAME IN test COLON suite .)


state 112

    (36) suite -> NEWLINE INDENT stmts DEDENT .

    ELSE            reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    ENDMARKER       reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    FOR             reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    WHILE           reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    PRINT           reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    PASS            reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    IMPORT          reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAREN          reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)
    ELIF            reduce using rule 36 (suite -> NEWLINE INDENT stmts DEDENT .)


state 113

    (37) stmts -> stmts stmt .

    DEDENT          reduce using rule 37 (stmts -> stmts stmt .)
    IF              reduce using rule 37 (stmts -> stmts stmt .)
    FOR             reduce using rule 37 (stmts -> stmts stmt .)
    WHILE           reduce using rule 37 (stmts -> stmts stmt .)
    DEF             reduce using rule 37 (stmts -> stmts stmt .)
    PRINT           reduce using rule 37 (stmts -> stmts stmt .)
    PASS            reduce using rule 37 (stmts -> stmts stmt .)
    IMPORT          reduce using rule 37 (stmts -> stmts stmt .)
    RETURN          reduce using rule 37 (stmts -> stmts stmt .)
    PLUS            reduce using rule 37 (stmts -> stmts stmt .)
    MINUS           reduce using rule 37 (stmts -> stmts stmt .)
    NAME            reduce using rule 37 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 37 (stmts -> stmts stmt .)
    STRING          reduce using rule 37 (stmts -> stmts stmt .)
    LPAREN          reduce using rule 37 (stmts -> stmts stmt .)


state 114

    (34) while_stmt -> WHILE test COLON suite ELSE COLON suite .

    DEDENT          reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IF              reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FOR             reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEF             reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PASS            reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IMPORT          reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NAME            reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    STRING          reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LPAREN          reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    ENDMARKER       reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 34 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)


state 115

    (31) elif_expr -> ELIF test COLON . suite elif_expr
    (35) suite -> . simple_stmt
    (36) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 85
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    import_stmt                    shift and go to state 36
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    testlist_multi                 shift and go to state 28
    simple_stmt                    shift and go to state 87
    power                          shift and go to state 16
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 13
    test                           shift and go to state 19
    suite                          shift and go to state 117
    expr_stmt                      shift and go to state 30
    small_stmts                    shift and go to state 37
    pass_stmt                      shift and go to state 12

state 116

    (29) if_stmt -> IF test COLON suite elif_expr ELSE COLON . suite
    (35) suite -> . simple_stmt
    (36) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (15) small_stmt -> . pass_stmt
    (16) small_stmt -> . import_stmt
    (19) flow_stmt -> . return_stmt
    (17) expr_stmt -> . testlist EQUAL testlist
    (18) expr_stmt -> . testlist
    (20) print_stmt -> . PRINT test
    (22) pass_stmt -> . PASS
    (23) import_stmt -> . IMPORT NAME
    (21) return_stmt -> . RETURN testlist
    (61) testlist -> . testlist_multi COMMA
    (62) testlist -> . testlist_multi
    (63) testlist_multi -> . testlist_multi COMMA test
    (64) testlist_multi -> . test
    (65) test -> . comparison
    (44) comparison -> . comparison PLUS comparison
    (45) comparison -> . comparison MINUS comparison
    (46) comparison -> . comparison STAR comparison
    (47) comparison -> . comparison SLASH comparison
    (48) comparison -> . comparison LESS comparison
    (49) comparison -> . comparison EQEQUAL comparison
    (50) comparison -> . comparison GREATER comparison
    (51) comparison -> . PLUS comparison
    (52) comparison -> . MINUS comparison
    (53) comparison -> . power
    (54) power -> . atom
    (55) power -> . atom trailer
    (56) atom -> . NAME
    (57) atom -> . NUMBER
    (58) atom -> . STRING
    (59) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 85
    PRINT           shift and go to state 7
    PASS            shift and go to state 3
    IMPORT          shift and go to state 6
    RETURN          shift and go to state 8
    PLUS            shift and go to state 15
    MINUS           shift and go to state 9
    NAME            shift and go to state 31
    NUMBER          shift and go to state 38
    STRING          shift and go to state 22
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 11
    comparison                     shift and go to state 32
    import_stmt                    shift and go to state 36
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 25
    print_stmt                     shift and go to state 17
    testlist_multi                 shift and go to state 28
    simple_stmt                    shift and go to state 87
    power                          shift and go to state 16
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 13
    test                           shift and go to state 19
    suite                          shift and go to state 118
    expr_stmt                      shift and go to state 30
    small_stmts                    shift and go to state 37
    pass_stmt                      shift and go to state 12

state 117

    (31) elif_expr -> ELIF test COLON suite . elif_expr
    (30) elif_expr -> .
    (31) elif_expr -> . ELIF test COLON suite elif_expr

    ELSE            reduce using rule 30 (elif_expr -> .)
    ENDMARKER       reduce using rule 30 (elif_expr -> .)
    NEWLINE         reduce using rule 30 (elif_expr -> .)
    IF              reduce using rule 30 (elif_expr -> .)
    FOR             reduce using rule 30 (elif_expr -> .)
    WHILE           reduce using rule 30 (elif_expr -> .)
    DEF             reduce using rule 30 (elif_expr -> .)
    PRINT           reduce using rule 30 (elif_expr -> .)
    PASS            reduce using rule 30 (elif_expr -> .)
    IMPORT          reduce using rule 30 (elif_expr -> .)
    RETURN          reduce using rule 30 (elif_expr -> .)
    PLUS            reduce using rule 30 (elif_expr -> .)
    MINUS           reduce using rule 30 (elif_expr -> .)
    NAME            reduce using rule 30 (elif_expr -> .)
    NUMBER          reduce using rule 30 (elif_expr -> .)
    STRING          reduce using rule 30 (elif_expr -> .)
    LPAREN          reduce using rule 30 (elif_expr -> .)
    DEDENT          reduce using rule 30 (elif_expr -> .)
    ELIF            shift and go to state 102

    elif_expr                      shift and go to state 119

state 118

    (29) if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .

    ENDMARKER       reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NEWLINE         reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    IF              reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    FOR             reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    WHILE           reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    DEF             reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PRINT           reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PASS            reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    IMPORT          reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    RETURN          reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PLUS            reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    MINUS           reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NAME            reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NUMBER          reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    STRING          reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    LPAREN          reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    DEDENT          reduce using rule 29 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)


state 119

    (31) elif_expr -> ELIF test COLON suite elif_expr .

    ELSE            reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    ENDMARKER       reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    NEWLINE         reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    IF              reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    FOR             reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    WHILE           reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    DEF             reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    PRINT           reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    PASS            reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    IMPORT          reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    RETURN          reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    PLUS            reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    MINUS           reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    NAME            reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    NUMBER          reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    STRING          reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    LPAREN          reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)
    DEDENT          reduce using rule 31 (elif_expr -> ELIF test COLON suite elif_expr .)

