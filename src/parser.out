Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    NOTEQUAL
    RAISE
    STAREQUAL
    STARSTAR
    GLOBAL
    ASSERT
    DEL
    VBAR
    BACKQUOTE
    PASS
    WITH
    LEFTSHIFT
    GREATEREQUAL
    MINEQUAL
    BINARYNUMBER
    EXCEPT
    PERCENTEQUAL
    TILDE
    IMPORT
    UNICODESTRING
    RSQB
    CLASS
    TRIPLESTRING
    SLASHSLASH
    SLASHEQUAL
    RIGHTSHIFT
    RBRACE
    EXEC
    AMPER
    IS
    PERCENT
    YIELD
    TRY
    PLUSEQUAL
    FINALLY
    AT
    LESSEQUAL
    LSQB
    DOT
    AND
    CIRCUMFLEX
    FNUMBER
    LBRACE
    FROM
    HEXADECIMALNUMBER
    INUMBER
    RAWSTRING
    AS
    BREAK
    CONTINUE
    OCTALNUMBER
    NOT
    WS
    OR
    LAMBDA

Grammar

Rule 0     S' -> program
Rule 1     program -> file_input ENDMARKER
Rule 2     file_input -> file_input NEWLINE
Rule 3     file_input -> file_input stmt
Rule 4     file_input -> NEWLINE
Rule 5     file_input -> stmt
Rule 6     stmt -> simple_stmt
Rule 7     stmt -> compound_stmt
Rule 8     simple_stmt -> small_stmts NEWLINE
Rule 9     simple_stmt -> small_stmts SEMI NEWLINE
Rule 10    small_stmts -> small_stmts SEMI small_stmt
Rule 11    small_stmts -> small_stmt
Rule 12    small_stmt -> flow_stmt
Rule 13    small_stmt -> expr_stmt
Rule 14    small_stmt -> print_stmt
Rule 15    expr_stmt -> testlist EQUAL testlist
Rule 16    expr_stmt -> testlist
Rule 17    flow_stmt -> return_stmt
Rule 18    print_stmt -> PRINT test
Rule 19    return_stmt -> RETURN testlist
Rule 20    compound_stmt -> if_stmt
Rule 21    compound_stmt -> for_stmt
Rule 22    compound_stmt -> while_stmt
Rule 23    compound_stmt -> funcdef
Rule 24    if_stmt -> IF test COLON suite elif_expr
Rule 25    if_stmt -> IF test COLON suite elif_expr ELSE COLON suite
Rule 26    elif_expr -> <empty>
Rule 27    elif_expr -> ELIF test COLON suite elif_expr
Rule 28    for_stmt -> FOR NAME IN test COLON suite
Rule 29    while_stmt -> WHILE test COLON suite
Rule 30    while_stmt -> WHILE test COLON suite ELSE COLON suite
Rule 31    suite -> simple_stmt
Rule 32    suite -> NEWLINE INDENT stmts DEDENT
Rule 33    stmts -> stmts stmt
Rule 34    stmts -> stmt
Rule 35    funcdef -> DEF NAME parameters COLON suite
Rule 36    parameters -> LPAREN RPAREN
Rule 37    parameters -> LPAREN varargslist RPAREN
Rule 38    varargslist -> varargslist COMMA NAME
Rule 39    varargslist -> NAME
Rule 40    comparison -> comparison PLUS comparison
Rule 41    comparison -> comparison MINUS comparison
Rule 42    comparison -> comparison STAR comparison
Rule 43    comparison -> comparison SLASH comparison
Rule 44    comparison -> comparison LESS comparison
Rule 45    comparison -> comparison EQEQUAL comparison
Rule 46    comparison -> comparison GREATER comparison
Rule 47    comparison -> PLUS comparison
Rule 48    comparison -> MINUS comparison
Rule 49    comparison -> power
Rule 50    power -> atom
Rule 51    power -> atom trailer
Rule 52    atom -> NAME
Rule 53    atom -> NUMBER
Rule 54    atom -> STRING
Rule 55    atom -> LPAREN testlist RPAREN
Rule 56    trailer -> LPAREN arglist RPAREN
Rule 57    testlist -> testlist_multi COMMA
Rule 58    testlist -> testlist_multi
Rule 59    testlist_multi -> testlist_multi COMMA test
Rule 60    testlist_multi -> test
Rule 61    test -> comparison
Rule 62    arglist -> arglist COMMA argument
Rule 63    arglist -> argument
Rule 64    argument -> test

Terminals, with rules where they appear

AMPER                : 
AND                  : 
AS                   : 
ASSERT               : 
AT                   : 
BACKQUOTE            : 
BINARYNUMBER         : 
BREAK                : 
CIRCUMFLEX           : 
CLASS                : 
COLON                : 24 25 25 27 28 29 30 30 35
COMMA                : 38 57 59 62
CONTINUE             : 
DEDENT               : 32
DEF                  : 35
DEL                  : 
DOT                  : 
ELIF                 : 27
ELSE                 : 25 30
ENDMARKER            : 1
EQEQUAL              : 45
EQUAL                : 15
EXCEPT               : 
EXEC                 : 
FINALLY              : 
FNUMBER              : 
FOR                  : 28
FROM                 : 
GLOBAL               : 
GREATER              : 46
GREATEREQUAL         : 
HEXADECIMALNUMBER    : 
IF                   : 24 25
IMPORT               : 
IN                   : 28
INDENT               : 32
INUMBER              : 
IS                   : 
LAMBDA               : 
LBRACE               : 
LEFTSHIFT            : 
LESS                 : 44
LESSEQUAL            : 
LPAREN               : 36 37 55 56
LSQB                 : 
MINEQUAL             : 
MINUS                : 41 48
NAME                 : 28 35 38 39 52
NEWLINE              : 2 4 8 9 32
NOT                  : 
NOTEQUAL             : 
NUMBER               : 53
OCTALNUMBER          : 
OR                   : 
PASS                 : 
PERCENT              : 
PERCENTEQUAL         : 
PLUS                 : 40 47
PLUSEQUAL            : 
PRINT                : 18
RAISE                : 
RAWSTRING            : 
RBRACE               : 
RETURN               : 19
RIGHTSHIFT           : 
RPAREN               : 36 37 55 56
RSQB                 : 
SEMI                 : 9 10
SLASH                : 43
SLASHEQUAL           : 
SLASHSLASH           : 
STAR                 : 42
STAREQUAL            : 
STARSTAR             : 
STRING               : 54
TILDE                : 
TRIPLESTRING         : 
TRY                  : 
UNICODESTRING        : 
VBAR                 : 
WHILE                : 29 30
WITH                 : 
WS                   : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arglist              : 56 62
argument             : 62 63
atom                 : 50 51
comparison           : 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 61
compound_stmt        : 7
elif_expr            : 24 25 27
expr_stmt            : 13
file_input           : 1 2 3
flow_stmt            : 12
for_stmt             : 21
funcdef              : 23
if_stmt              : 20
parameters           : 35
power                : 49
print_stmt           : 14
program              : 0
return_stmt          : 17
simple_stmt          : 6 31
small_stmt           : 10 11
small_stmts          : 8 9 10
stmt                 : 3 5 33 34
stmts                : 32 33
suite                : 24 25 25 27 28 29 30 30 35
test                 : 18 24 25 27 28 29 30 59 60 64
testlist             : 15 15 16 19 55
testlist_multi       : 57 58 59
trailer              : 51
varargslist          : 37 38
while_stmt           : 22

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . file_input ENDMARKER
    (2) file_input -> . file_input NEWLINE
    (3) file_input -> . file_input stmt
    (4) file_input -> . NEWLINE
    (5) file_input -> . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (20) compound_stmt -> . if_stmt
    (21) compound_stmt -> . for_stmt
    (22) compound_stmt -> . while_stmt
    (23) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (24) if_stmt -> . IF test COLON suite elif_expr
    (25) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (28) for_stmt -> . FOR NAME IN test COLON suite
    (29) while_stmt -> . WHILE test COLON suite
    (30) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (35) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 11
    IF              shift and go to state 17
    FOR             shift and go to state 20
    WHILE           shift and go to state 4
    DEF             shift and go to state 9
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 14
    program                        shift and go to state 15
    test                           shift and go to state 16
    compound_stmt                  shift and go to state 18
    power                          shift and go to state 13
    simple_stmt                    shift and go to state 21
    testlist                       shift and go to state 22
    stmt                           shift and go to state 23
    for_stmt                       shift and go to state 24
    testlist_multi                 shift and go to state 25
    atom                           shift and go to state 3
    funcdef                        shift and go to state 26
    expr_stmt                      shift and go to state 27
    comparison                     shift and go to state 29
    if_stmt                        shift and go to state 30
    file_input                     shift and go to state 31
    while_stmt                     shift and go to state 32
    small_stmts                    shift and go to state 33

state 1

    (55) atom -> LPAREN . testlist RPAREN
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    testlist                       shift and go to state 35
    testlist_multi                 shift and go to state 25
    atom                           shift and go to state 3
    test                           shift and go to state 16

state 2

    (11) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 11 (small_stmts -> small_stmt .)
    SEMI            reduce using rule 11 (small_stmts -> small_stmt .)


state 3

    (50) power -> atom .
    (51) power -> atom . trailer
    (56) trailer -> . LPAREN arglist RPAREN

    PLUS            reduce using rule 50 (power -> atom .)
    MINUS           reduce using rule 50 (power -> atom .)
    STAR            reduce using rule 50 (power -> atom .)
    SLASH           reduce using rule 50 (power -> atom .)
    LESS            reduce using rule 50 (power -> atom .)
    EQEQUAL         reduce using rule 50 (power -> atom .)
    GREATER         reduce using rule 50 (power -> atom .)
    COLON           reduce using rule 50 (power -> atom .)
    COMMA           reduce using rule 50 (power -> atom .)
    EQUAL           reduce using rule 50 (power -> atom .)
    NEWLINE         reduce using rule 50 (power -> atom .)
    SEMI            reduce using rule 50 (power -> atom .)
    RPAREN          reduce using rule 50 (power -> atom .)
    LPAREN          shift and go to state 36

    trailer                        shift and go to state 37

state 4

    (29) while_stmt -> WHILE . test COLON suite
    (30) while_stmt -> WHILE . test COLON suite ELSE COLON suite
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    atom                           shift and go to state 3
    test                           shift and go to state 38

state 5

    (17) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 17 (flow_stmt -> return_stmt .)
    SEMI            reduce using rule 17 (flow_stmt -> return_stmt .)


state 6

    (18) print_stmt -> PRINT . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    atom                           shift and go to state 3
    test                           shift and go to state 39

state 7

    (19) return_stmt -> RETURN . testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    testlist                       shift and go to state 40
    testlist_multi                 shift and go to state 25
    atom                           shift and go to state 3
    test                           shift and go to state 16

state 8

    (48) comparison -> MINUS . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 41
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 9

    (35) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 42


state 10

    (12) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 12 (small_stmt -> flow_stmt .)
    SEMI            reduce using rule 12 (small_stmt -> flow_stmt .)


state 11

    (4) file_input -> NEWLINE .

    ENDMARKER       reduce using rule 4 (file_input -> NEWLINE .)
    NEWLINE         reduce using rule 4 (file_input -> NEWLINE .)
    IF              reduce using rule 4 (file_input -> NEWLINE .)
    FOR             reduce using rule 4 (file_input -> NEWLINE .)
    WHILE           reduce using rule 4 (file_input -> NEWLINE .)
    DEF             reduce using rule 4 (file_input -> NEWLINE .)
    PRINT           reduce using rule 4 (file_input -> NEWLINE .)
    RETURN          reduce using rule 4 (file_input -> NEWLINE .)
    PLUS            reduce using rule 4 (file_input -> NEWLINE .)
    MINUS           reduce using rule 4 (file_input -> NEWLINE .)
    NAME            reduce using rule 4 (file_input -> NEWLINE .)
    NUMBER          reduce using rule 4 (file_input -> NEWLINE .)
    STRING          reduce using rule 4 (file_input -> NEWLINE .)
    LPAREN          reduce using rule 4 (file_input -> NEWLINE .)


state 12

    (47) comparison -> PLUS . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 43
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 13

    (49) comparison -> power .

    PLUS            reduce using rule 49 (comparison -> power .)
    MINUS           reduce using rule 49 (comparison -> power .)
    STAR            reduce using rule 49 (comparison -> power .)
    SLASH           reduce using rule 49 (comparison -> power .)
    LESS            reduce using rule 49 (comparison -> power .)
    EQEQUAL         reduce using rule 49 (comparison -> power .)
    GREATER         reduce using rule 49 (comparison -> power .)
    COMMA           reduce using rule 49 (comparison -> power .)
    EQUAL           reduce using rule 49 (comparison -> power .)
    NEWLINE         reduce using rule 49 (comparison -> power .)
    SEMI            reduce using rule 49 (comparison -> power .)
    COLON           reduce using rule 49 (comparison -> power .)
    RPAREN          reduce using rule 49 (comparison -> power .)


state 14

    (14) small_stmt -> print_stmt .

    NEWLINE         reduce using rule 14 (small_stmt -> print_stmt .)
    SEMI            reduce using rule 14 (small_stmt -> print_stmt .)


state 15

    (0) S' -> program .



state 16

    (60) testlist_multi -> test .

    COMMA           reduce using rule 60 (testlist_multi -> test .)
    EQUAL           reduce using rule 60 (testlist_multi -> test .)
    NEWLINE         reduce using rule 60 (testlist_multi -> test .)
    SEMI            reduce using rule 60 (testlist_multi -> test .)
    RPAREN          reduce using rule 60 (testlist_multi -> test .)


state 17

    (24) if_stmt -> IF . test COLON suite elif_expr
    (25) if_stmt -> IF . test COLON suite elif_expr ELSE COLON suite
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    atom                           shift and go to state 3
    test                           shift and go to state 44

state 18

    (7) stmt -> compound_stmt .

    ENDMARKER       reduce using rule 7 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 7 (stmt -> compound_stmt .)
    IF              reduce using rule 7 (stmt -> compound_stmt .)
    FOR             reduce using rule 7 (stmt -> compound_stmt .)
    WHILE           reduce using rule 7 (stmt -> compound_stmt .)
    DEF             reduce using rule 7 (stmt -> compound_stmt .)
    PRINT           reduce using rule 7 (stmt -> compound_stmt .)
    RETURN          reduce using rule 7 (stmt -> compound_stmt .)
    PLUS            reduce using rule 7 (stmt -> compound_stmt .)
    MINUS           reduce using rule 7 (stmt -> compound_stmt .)
    NAME            reduce using rule 7 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 7 (stmt -> compound_stmt .)
    STRING          reduce using rule 7 (stmt -> compound_stmt .)
    LPAREN          reduce using rule 7 (stmt -> compound_stmt .)
    DEDENT          reduce using rule 7 (stmt -> compound_stmt .)


state 19

    (54) atom -> STRING .

    LPAREN          reduce using rule 54 (atom -> STRING .)
    PLUS            reduce using rule 54 (atom -> STRING .)
    MINUS           reduce using rule 54 (atom -> STRING .)
    STAR            reduce using rule 54 (atom -> STRING .)
    SLASH           reduce using rule 54 (atom -> STRING .)
    LESS            reduce using rule 54 (atom -> STRING .)
    EQEQUAL         reduce using rule 54 (atom -> STRING .)
    GREATER         reduce using rule 54 (atom -> STRING .)
    COMMA           reduce using rule 54 (atom -> STRING .)
    EQUAL           reduce using rule 54 (atom -> STRING .)
    NEWLINE         reduce using rule 54 (atom -> STRING .)
    SEMI            reduce using rule 54 (atom -> STRING .)
    RPAREN          reduce using rule 54 (atom -> STRING .)
    COLON           reduce using rule 54 (atom -> STRING .)


state 20

    (28) for_stmt -> FOR . NAME IN test COLON suite

    NAME            shift and go to state 45


state 21

    (6) stmt -> simple_stmt .

    ENDMARKER       reduce using rule 6 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 6 (stmt -> simple_stmt .)
    IF              reduce using rule 6 (stmt -> simple_stmt .)
    FOR             reduce using rule 6 (stmt -> simple_stmt .)
    WHILE           reduce using rule 6 (stmt -> simple_stmt .)
    DEF             reduce using rule 6 (stmt -> simple_stmt .)
    PRINT           reduce using rule 6 (stmt -> simple_stmt .)
    RETURN          reduce using rule 6 (stmt -> simple_stmt .)
    PLUS            reduce using rule 6 (stmt -> simple_stmt .)
    MINUS           reduce using rule 6 (stmt -> simple_stmt .)
    NAME            reduce using rule 6 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 6 (stmt -> simple_stmt .)
    STRING          reduce using rule 6 (stmt -> simple_stmt .)
    LPAREN          reduce using rule 6 (stmt -> simple_stmt .)
    DEDENT          reduce using rule 6 (stmt -> simple_stmt .)


state 22

    (15) expr_stmt -> testlist . EQUAL testlist
    (16) expr_stmt -> testlist .

    EQUAL           shift and go to state 46
    NEWLINE         reduce using rule 16 (expr_stmt -> testlist .)
    SEMI            reduce using rule 16 (expr_stmt -> testlist .)


state 23

    (5) file_input -> stmt .

    ENDMARKER       reduce using rule 5 (file_input -> stmt .)
    NEWLINE         reduce using rule 5 (file_input -> stmt .)
    IF              reduce using rule 5 (file_input -> stmt .)
    FOR             reduce using rule 5 (file_input -> stmt .)
    WHILE           reduce using rule 5 (file_input -> stmt .)
    DEF             reduce using rule 5 (file_input -> stmt .)
    PRINT           reduce using rule 5 (file_input -> stmt .)
    RETURN          reduce using rule 5 (file_input -> stmt .)
    PLUS            reduce using rule 5 (file_input -> stmt .)
    MINUS           reduce using rule 5 (file_input -> stmt .)
    NAME            reduce using rule 5 (file_input -> stmt .)
    NUMBER          reduce using rule 5 (file_input -> stmt .)
    STRING          reduce using rule 5 (file_input -> stmt .)
    LPAREN          reduce using rule 5 (file_input -> stmt .)


state 24

    (21) compound_stmt -> for_stmt .

    DEDENT          reduce using rule 21 (compound_stmt -> for_stmt .)
    IF              reduce using rule 21 (compound_stmt -> for_stmt .)
    FOR             reduce using rule 21 (compound_stmt -> for_stmt .)
    WHILE           reduce using rule 21 (compound_stmt -> for_stmt .)
    DEF             reduce using rule 21 (compound_stmt -> for_stmt .)
    PRINT           reduce using rule 21 (compound_stmt -> for_stmt .)
    RETURN          reduce using rule 21 (compound_stmt -> for_stmt .)
    PLUS            reduce using rule 21 (compound_stmt -> for_stmt .)
    MINUS           reduce using rule 21 (compound_stmt -> for_stmt .)
    NAME            reduce using rule 21 (compound_stmt -> for_stmt .)
    NUMBER          reduce using rule 21 (compound_stmt -> for_stmt .)
    STRING          reduce using rule 21 (compound_stmt -> for_stmt .)
    LPAREN          reduce using rule 21 (compound_stmt -> for_stmt .)
    ENDMARKER       reduce using rule 21 (compound_stmt -> for_stmt .)
    NEWLINE         reduce using rule 21 (compound_stmt -> for_stmt .)


state 25

    (57) testlist -> testlist_multi . COMMA
    (58) testlist -> testlist_multi .
    (59) testlist_multi -> testlist_multi . COMMA test

    COMMA           shift and go to state 47
    EQUAL           reduce using rule 58 (testlist -> testlist_multi .)
    NEWLINE         reduce using rule 58 (testlist -> testlist_multi .)
    SEMI            reduce using rule 58 (testlist -> testlist_multi .)
    RPAREN          reduce using rule 58 (testlist -> testlist_multi .)


state 26

    (23) compound_stmt -> funcdef .

    DEDENT          reduce using rule 23 (compound_stmt -> funcdef .)
    IF              reduce using rule 23 (compound_stmt -> funcdef .)
    FOR             reduce using rule 23 (compound_stmt -> funcdef .)
    WHILE           reduce using rule 23 (compound_stmt -> funcdef .)
    DEF             reduce using rule 23 (compound_stmt -> funcdef .)
    PRINT           reduce using rule 23 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 23 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 23 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 23 (compound_stmt -> funcdef .)
    NAME            reduce using rule 23 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 23 (compound_stmt -> funcdef .)
    STRING          reduce using rule 23 (compound_stmt -> funcdef .)
    LPAREN          reduce using rule 23 (compound_stmt -> funcdef .)
    ENDMARKER       reduce using rule 23 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 23 (compound_stmt -> funcdef .)


state 27

    (13) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 13 (small_stmt -> expr_stmt .)
    SEMI            reduce using rule 13 (small_stmt -> expr_stmt .)


state 28

    (52) atom -> NAME .

    LPAREN          reduce using rule 52 (atom -> NAME .)
    PLUS            reduce using rule 52 (atom -> NAME .)
    MINUS           reduce using rule 52 (atom -> NAME .)
    STAR            reduce using rule 52 (atom -> NAME .)
    SLASH           reduce using rule 52 (atom -> NAME .)
    LESS            reduce using rule 52 (atom -> NAME .)
    EQEQUAL         reduce using rule 52 (atom -> NAME .)
    GREATER         reduce using rule 52 (atom -> NAME .)
    COMMA           reduce using rule 52 (atom -> NAME .)
    EQUAL           reduce using rule 52 (atom -> NAME .)
    NEWLINE         reduce using rule 52 (atom -> NAME .)
    SEMI            reduce using rule 52 (atom -> NAME .)
    RPAREN          reduce using rule 52 (atom -> NAME .)
    COLON           reduce using rule 52 (atom -> NAME .)


state 29

    (61) test -> comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    COMMA           reduce using rule 61 (test -> comparison .)
    EQUAL           reduce using rule 61 (test -> comparison .)
    NEWLINE         reduce using rule 61 (test -> comparison .)
    SEMI            reduce using rule 61 (test -> comparison .)
    COLON           reduce using rule 61 (test -> comparison .)
    RPAREN          reduce using rule 61 (test -> comparison .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    STAR            shift and go to state 48
    SLASH           shift and go to state 53
    LESS            shift and go to state 50
    EQEQUAL         shift and go to state 51
    GREATER         shift and go to state 49


state 30

    (20) compound_stmt -> if_stmt .

    DEDENT          reduce using rule 20 (compound_stmt -> if_stmt .)
    IF              reduce using rule 20 (compound_stmt -> if_stmt .)
    FOR             reduce using rule 20 (compound_stmt -> if_stmt .)
    WHILE           reduce using rule 20 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 20 (compound_stmt -> if_stmt .)
    PRINT           reduce using rule 20 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 20 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 20 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 20 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 20 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 20 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 20 (compound_stmt -> if_stmt .)
    LPAREN          reduce using rule 20 (compound_stmt -> if_stmt .)
    ENDMARKER       reduce using rule 20 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 20 (compound_stmt -> if_stmt .)


state 31

    (1) program -> file_input . ENDMARKER
    (2) file_input -> file_input . NEWLINE
    (3) file_input -> file_input . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (20) compound_stmt -> . if_stmt
    (21) compound_stmt -> . for_stmt
    (22) compound_stmt -> . while_stmt
    (23) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (24) if_stmt -> . IF test COLON suite elif_expr
    (25) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (28) for_stmt -> . FOR NAME IN test COLON suite
    (29) while_stmt -> . WHILE test COLON suite
    (30) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (35) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    ENDMARKER       shift and go to state 55
    NEWLINE         shift and go to state 56
    IF              shift and go to state 17
    FOR             shift and go to state 20
    WHILE           shift and go to state 4
    DEF             shift and go to state 9
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 14
    test                           shift and go to state 16
    compound_stmt                  shift and go to state 18
    power                          shift and go to state 13
    simple_stmt                    shift and go to state 21
    testlist                       shift and go to state 22
    stmt                           shift and go to state 57
    for_stmt                       shift and go to state 24
    testlist_multi                 shift and go to state 25
    atom                           shift and go to state 3
    funcdef                        shift and go to state 26
    expr_stmt                      shift and go to state 27
    comparison                     shift and go to state 29
    if_stmt                        shift and go to state 30
    while_stmt                     shift and go to state 32
    small_stmts                    shift and go to state 33

state 32

    (22) compound_stmt -> while_stmt .

    DEDENT          reduce using rule 22 (compound_stmt -> while_stmt .)
    IF              reduce using rule 22 (compound_stmt -> while_stmt .)
    FOR             reduce using rule 22 (compound_stmt -> while_stmt .)
    WHILE           reduce using rule 22 (compound_stmt -> while_stmt .)
    DEF             reduce using rule 22 (compound_stmt -> while_stmt .)
    PRINT           reduce using rule 22 (compound_stmt -> while_stmt .)
    RETURN          reduce using rule 22 (compound_stmt -> while_stmt .)
    PLUS            reduce using rule 22 (compound_stmt -> while_stmt .)
    MINUS           reduce using rule 22 (compound_stmt -> while_stmt .)
    NAME            reduce using rule 22 (compound_stmt -> while_stmt .)
    NUMBER          reduce using rule 22 (compound_stmt -> while_stmt .)
    STRING          reduce using rule 22 (compound_stmt -> while_stmt .)
    LPAREN          reduce using rule 22 (compound_stmt -> while_stmt .)
    ENDMARKER       reduce using rule 22 (compound_stmt -> while_stmt .)
    NEWLINE         reduce using rule 22 (compound_stmt -> while_stmt .)


state 33

    (8) simple_stmt -> small_stmts . NEWLINE
    (9) simple_stmt -> small_stmts . SEMI NEWLINE
    (10) small_stmts -> small_stmts . SEMI small_stmt

    NEWLINE         shift and go to state 58
    SEMI            shift and go to state 59


state 34

    (53) atom -> NUMBER .

    LPAREN          reduce using rule 53 (atom -> NUMBER .)
    PLUS            reduce using rule 53 (atom -> NUMBER .)
    MINUS           reduce using rule 53 (atom -> NUMBER .)
    STAR            reduce using rule 53 (atom -> NUMBER .)
    SLASH           reduce using rule 53 (atom -> NUMBER .)
    LESS            reduce using rule 53 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 53 (atom -> NUMBER .)
    GREATER         reduce using rule 53 (atom -> NUMBER .)
    COMMA           reduce using rule 53 (atom -> NUMBER .)
    EQUAL           reduce using rule 53 (atom -> NUMBER .)
    NEWLINE         reduce using rule 53 (atom -> NUMBER .)
    SEMI            reduce using rule 53 (atom -> NUMBER .)
    RPAREN          reduce using rule 53 (atom -> NUMBER .)
    COLON           reduce using rule 53 (atom -> NUMBER .)


state 35

    (55) atom -> LPAREN testlist . RPAREN

    RPAREN          shift and go to state 60


state 36

    (56) trailer -> LPAREN . arglist RPAREN
    (62) arglist -> . arglist COMMA argument
    (63) arglist -> . argument
    (64) argument -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    argument                       shift and go to state 61
    atom                           shift and go to state 3
    test                           shift and go to state 62
    arglist                        shift and go to state 63

state 37

    (51) power -> atom trailer .

    PLUS            reduce using rule 51 (power -> atom trailer .)
    MINUS           reduce using rule 51 (power -> atom trailer .)
    STAR            reduce using rule 51 (power -> atom trailer .)
    SLASH           reduce using rule 51 (power -> atom trailer .)
    LESS            reduce using rule 51 (power -> atom trailer .)
    EQEQUAL         reduce using rule 51 (power -> atom trailer .)
    GREATER         reduce using rule 51 (power -> atom trailer .)
    COLON           reduce using rule 51 (power -> atom trailer .)
    COMMA           reduce using rule 51 (power -> atom trailer .)
    EQUAL           reduce using rule 51 (power -> atom trailer .)
    NEWLINE         reduce using rule 51 (power -> atom trailer .)
    SEMI            reduce using rule 51 (power -> atom trailer .)
    RPAREN          reduce using rule 51 (power -> atom trailer .)


state 38

    (29) while_stmt -> WHILE test . COLON suite
    (30) while_stmt -> WHILE test . COLON suite ELSE COLON suite

    COLON           shift and go to state 64


state 39

    (18) print_stmt -> PRINT test .

    NEWLINE         reduce using rule 18 (print_stmt -> PRINT test .)
    SEMI            reduce using rule 18 (print_stmt -> PRINT test .)


state 40

    (19) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 19 (return_stmt -> RETURN testlist .)
    SEMI            reduce using rule 19 (return_stmt -> RETURN testlist .)


state 41

    (48) comparison -> MINUS comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 48 (comparison -> MINUS comparison .)
    MINUS           reduce using rule 48 (comparison -> MINUS comparison .)
    LESS            reduce using rule 48 (comparison -> MINUS comparison .)
    EQEQUAL         reduce using rule 48 (comparison -> MINUS comparison .)
    GREATER         reduce using rule 48 (comparison -> MINUS comparison .)
    COMMA           reduce using rule 48 (comparison -> MINUS comparison .)
    EQUAL           reduce using rule 48 (comparison -> MINUS comparison .)
    NEWLINE         reduce using rule 48 (comparison -> MINUS comparison .)
    SEMI            reduce using rule 48 (comparison -> MINUS comparison .)
    COLON           reduce using rule 48 (comparison -> MINUS comparison .)
    RPAREN          reduce using rule 48 (comparison -> MINUS comparison .)
    STAR            shift and go to state 48
    SLASH           shift and go to state 53

  ! STAR            [ reduce using rule 48 (comparison -> MINUS comparison .) ]
  ! SLASH           [ reduce using rule 48 (comparison -> MINUS comparison .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 54 ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 42

    (35) funcdef -> DEF NAME . parameters COLON suite
    (36) parameters -> . LPAREN RPAREN
    (37) parameters -> . LPAREN varargslist RPAREN

    LPAREN          shift and go to state 66

    parameters                     shift and go to state 65

state 43

    (47) comparison -> PLUS comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 47 (comparison -> PLUS comparison .)
    MINUS           reduce using rule 47 (comparison -> PLUS comparison .)
    LESS            reduce using rule 47 (comparison -> PLUS comparison .)
    EQEQUAL         reduce using rule 47 (comparison -> PLUS comparison .)
    GREATER         reduce using rule 47 (comparison -> PLUS comparison .)
    COMMA           reduce using rule 47 (comparison -> PLUS comparison .)
    EQUAL           reduce using rule 47 (comparison -> PLUS comparison .)
    NEWLINE         reduce using rule 47 (comparison -> PLUS comparison .)
    SEMI            reduce using rule 47 (comparison -> PLUS comparison .)
    COLON           reduce using rule 47 (comparison -> PLUS comparison .)
    RPAREN          reduce using rule 47 (comparison -> PLUS comparison .)
    STAR            shift and go to state 48
    SLASH           shift and go to state 53

  ! STAR            [ reduce using rule 47 (comparison -> PLUS comparison .) ]
  ! SLASH           [ reduce using rule 47 (comparison -> PLUS comparison .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 54 ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 44

    (24) if_stmt -> IF test . COLON suite elif_expr
    (25) if_stmt -> IF test . COLON suite elif_expr ELSE COLON suite

    COLON           shift and go to state 67


state 45

    (28) for_stmt -> FOR NAME . IN test COLON suite

    IN              shift and go to state 68


state 46

    (15) expr_stmt -> testlist EQUAL . testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    testlist                       shift and go to state 69
    testlist_multi                 shift and go to state 25
    atom                           shift and go to state 3
    test                           shift and go to state 16

state 47

    (57) testlist -> testlist_multi COMMA .
    (59) testlist_multi -> testlist_multi COMMA . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    EQUAL           reduce using rule 57 (testlist -> testlist_multi COMMA .)
    NEWLINE         reduce using rule 57 (testlist -> testlist_multi COMMA .)
    SEMI            reduce using rule 57 (testlist -> testlist_multi COMMA .)
    RPAREN          reduce using rule 57 (testlist -> testlist_multi COMMA .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    atom                           shift and go to state 3
    test                           shift and go to state 70

state 48

    (42) comparison -> comparison STAR . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 71
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 49

    (46) comparison -> comparison GREATER . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 72
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 50

    (44) comparison -> comparison LESS . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 73
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 51

    (45) comparison -> comparison EQEQUAL . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 74
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 52

    (40) comparison -> comparison PLUS . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 75
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 53

    (43) comparison -> comparison SLASH . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 76
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 54

    (41) comparison -> comparison MINUS . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 77
    power                          shift and go to state 13
    atom                           shift and go to state 3

state 55

    (1) program -> file_input ENDMARKER .

    $end            reduce using rule 1 (program -> file_input ENDMARKER .)


state 56

    (2) file_input -> file_input NEWLINE .

    ENDMARKER       reduce using rule 2 (file_input -> file_input NEWLINE .)
    NEWLINE         reduce using rule 2 (file_input -> file_input NEWLINE .)
    IF              reduce using rule 2 (file_input -> file_input NEWLINE .)
    FOR             reduce using rule 2 (file_input -> file_input NEWLINE .)
    WHILE           reduce using rule 2 (file_input -> file_input NEWLINE .)
    DEF             reduce using rule 2 (file_input -> file_input NEWLINE .)
    PRINT           reduce using rule 2 (file_input -> file_input NEWLINE .)
    RETURN          reduce using rule 2 (file_input -> file_input NEWLINE .)
    PLUS            reduce using rule 2 (file_input -> file_input NEWLINE .)
    MINUS           reduce using rule 2 (file_input -> file_input NEWLINE .)
    NAME            reduce using rule 2 (file_input -> file_input NEWLINE .)
    NUMBER          reduce using rule 2 (file_input -> file_input NEWLINE .)
    STRING          reduce using rule 2 (file_input -> file_input NEWLINE .)
    LPAREN          reduce using rule 2 (file_input -> file_input NEWLINE .)


state 57

    (3) file_input -> file_input stmt .

    ENDMARKER       reduce using rule 3 (file_input -> file_input stmt .)
    NEWLINE         reduce using rule 3 (file_input -> file_input stmt .)
    IF              reduce using rule 3 (file_input -> file_input stmt .)
    FOR             reduce using rule 3 (file_input -> file_input stmt .)
    WHILE           reduce using rule 3 (file_input -> file_input stmt .)
    DEF             reduce using rule 3 (file_input -> file_input stmt .)
    PRINT           reduce using rule 3 (file_input -> file_input stmt .)
    RETURN          reduce using rule 3 (file_input -> file_input stmt .)
    PLUS            reduce using rule 3 (file_input -> file_input stmt .)
    MINUS           reduce using rule 3 (file_input -> file_input stmt .)
    NAME            reduce using rule 3 (file_input -> file_input stmt .)
    NUMBER          reduce using rule 3 (file_input -> file_input stmt .)
    STRING          reduce using rule 3 (file_input -> file_input stmt .)
    LPAREN          reduce using rule 3 (file_input -> file_input stmt .)


state 58

    (8) simple_stmt -> small_stmts NEWLINE .

    DEDENT          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    FOR             reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    WHILE           reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    PRINT           reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    LPAREN          reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    ENDMARKER       reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    ELSE            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)
    ELIF            reduce using rule 8 (simple_stmt -> small_stmts NEWLINE .)


state 59

    (9) simple_stmt -> small_stmts SEMI . NEWLINE
    (10) small_stmts -> small_stmts SEMI . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 79
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    power                          shift and go to state 13
    small_stmt                     shift and go to state 78
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    testlist_multi                 shift and go to state 25
    expr_stmt                      shift and go to state 27

state 60

    (55) atom -> LPAREN testlist RPAREN .

    LPAREN          reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    PLUS            reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    MINUS           reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    STAR            reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    SLASH           reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    LESS            reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    EQEQUAL         reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    GREATER         reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    COMMA           reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    EQUAL           reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    NEWLINE         reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    SEMI            reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    RPAREN          reduce using rule 55 (atom -> LPAREN testlist RPAREN .)
    COLON           reduce using rule 55 (atom -> LPAREN testlist RPAREN .)


state 61

    (63) arglist -> argument .

    RPAREN          reduce using rule 63 (arglist -> argument .)
    COMMA           reduce using rule 63 (arglist -> argument .)


state 62

    (64) argument -> test .

    RPAREN          reduce using rule 64 (argument -> test .)
    COMMA           reduce using rule 64 (argument -> test .)


state 63

    (56) trailer -> LPAREN arglist . RPAREN
    (62) arglist -> arglist . COMMA argument

    RPAREN          shift and go to state 81
    COMMA           shift and go to state 80


state 64

    (29) while_stmt -> WHILE test COLON . suite
    (30) while_stmt -> WHILE test COLON . suite ELSE COLON suite
    (31) suite -> . simple_stmt
    (32) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 82
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    power                          shift and go to state 13
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 84
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    testlist_multi                 shift and go to state 25
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    suite                          shift and go to state 83
    expr_stmt                      shift and go to state 27
    small_stmts                    shift and go to state 33

state 65

    (35) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 85


state 66

    (36) parameters -> LPAREN . RPAREN
    (37) parameters -> LPAREN . varargslist RPAREN
    (38) varargslist -> . varargslist COMMA NAME
    (39) varargslist -> . NAME

    RPAREN          shift and go to state 87
    NAME            shift and go to state 88

    varargslist                    shift and go to state 86

state 67

    (24) if_stmt -> IF test COLON . suite elif_expr
    (25) if_stmt -> IF test COLON . suite elif_expr ELSE COLON suite
    (31) suite -> . simple_stmt
    (32) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 82
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    testlist_multi                 shift and go to state 25
    simple_stmt                    shift and go to state 84
    power                          shift and go to state 13
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    suite                          shift and go to state 89
    expr_stmt                      shift and go to state 27
    small_stmts                    shift and go to state 33

state 68

    (28) for_stmt -> FOR NAME IN . test COLON suite
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    atom                           shift and go to state 3
    test                           shift and go to state 90

state 69

    (15) expr_stmt -> testlist EQUAL testlist .

    NEWLINE         reduce using rule 15 (expr_stmt -> testlist EQUAL testlist .)
    SEMI            reduce using rule 15 (expr_stmt -> testlist EQUAL testlist .)


state 70

    (59) testlist_multi -> testlist_multi COMMA test .

    COMMA           reduce using rule 59 (testlist_multi -> testlist_multi COMMA test .)
    EQUAL           reduce using rule 59 (testlist_multi -> testlist_multi COMMA test .)
    NEWLINE         reduce using rule 59 (testlist_multi -> testlist_multi COMMA test .)
    SEMI            reduce using rule 59 (testlist_multi -> testlist_multi COMMA test .)
    RPAREN          reduce using rule 59 (testlist_multi -> testlist_multi COMMA test .)


state 71

    (42) comparison -> comparison STAR comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 42 (comparison -> comparison STAR comparison .)
    MINUS           reduce using rule 42 (comparison -> comparison STAR comparison .)
    STAR            reduce using rule 42 (comparison -> comparison STAR comparison .)
    SLASH           reduce using rule 42 (comparison -> comparison STAR comparison .)
    LESS            reduce using rule 42 (comparison -> comparison STAR comparison .)
    EQEQUAL         reduce using rule 42 (comparison -> comparison STAR comparison .)
    GREATER         reduce using rule 42 (comparison -> comparison STAR comparison .)
    COMMA           reduce using rule 42 (comparison -> comparison STAR comparison .)
    EQUAL           reduce using rule 42 (comparison -> comparison STAR comparison .)
    NEWLINE         reduce using rule 42 (comparison -> comparison STAR comparison .)
    SEMI            reduce using rule 42 (comparison -> comparison STAR comparison .)
    COLON           reduce using rule 42 (comparison -> comparison STAR comparison .)
    RPAREN          reduce using rule 42 (comparison -> comparison STAR comparison .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 54 ]
  ! STAR            [ shift and go to state 48 ]
  ! SLASH           [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 72

    (46) comparison -> comparison GREATER comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 46 (comparison -> comparison GREATER comparison .)
    EQEQUAL         reduce using rule 46 (comparison -> comparison GREATER comparison .)
    GREATER         reduce using rule 46 (comparison -> comparison GREATER comparison .)
    COMMA           reduce using rule 46 (comparison -> comparison GREATER comparison .)
    EQUAL           reduce using rule 46 (comparison -> comparison GREATER comparison .)
    NEWLINE         reduce using rule 46 (comparison -> comparison GREATER comparison .)
    SEMI            reduce using rule 46 (comparison -> comparison GREATER comparison .)
    COLON           reduce using rule 46 (comparison -> comparison GREATER comparison .)
    RPAREN          reduce using rule 46 (comparison -> comparison GREATER comparison .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    STAR            shift and go to state 48
    SLASH           shift and go to state 53

  ! PLUS            [ reduce using rule 46 (comparison -> comparison GREATER comparison .) ]
  ! MINUS           [ reduce using rule 46 (comparison -> comparison GREATER comparison .) ]
  ! STAR            [ reduce using rule 46 (comparison -> comparison GREATER comparison .) ]
  ! SLASH           [ reduce using rule 46 (comparison -> comparison GREATER comparison .) ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 73

    (44) comparison -> comparison LESS comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 44 (comparison -> comparison LESS comparison .)
    EQEQUAL         reduce using rule 44 (comparison -> comparison LESS comparison .)
    GREATER         reduce using rule 44 (comparison -> comparison LESS comparison .)
    COMMA           reduce using rule 44 (comparison -> comparison LESS comparison .)
    EQUAL           reduce using rule 44 (comparison -> comparison LESS comparison .)
    NEWLINE         reduce using rule 44 (comparison -> comparison LESS comparison .)
    SEMI            reduce using rule 44 (comparison -> comparison LESS comparison .)
    COLON           reduce using rule 44 (comparison -> comparison LESS comparison .)
    RPAREN          reduce using rule 44 (comparison -> comparison LESS comparison .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    STAR            shift and go to state 48
    SLASH           shift and go to state 53

  ! PLUS            [ reduce using rule 44 (comparison -> comparison LESS comparison .) ]
  ! MINUS           [ reduce using rule 44 (comparison -> comparison LESS comparison .) ]
  ! STAR            [ reduce using rule 44 (comparison -> comparison LESS comparison .) ]
  ! SLASH           [ reduce using rule 44 (comparison -> comparison LESS comparison .) ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 74

    (45) comparison -> comparison EQEQUAL comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    EQEQUAL         reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    GREATER         reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    COMMA           reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    EQUAL           reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    NEWLINE         reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    SEMI            reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    COLON           reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    RPAREN          reduce using rule 45 (comparison -> comparison EQEQUAL comparison .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    STAR            shift and go to state 48
    SLASH           shift and go to state 53

  ! PLUS            [ reduce using rule 45 (comparison -> comparison EQEQUAL comparison .) ]
  ! MINUS           [ reduce using rule 45 (comparison -> comparison EQEQUAL comparison .) ]
  ! STAR            [ reduce using rule 45 (comparison -> comparison EQEQUAL comparison .) ]
  ! SLASH           [ reduce using rule 45 (comparison -> comparison EQEQUAL comparison .) ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 75

    (40) comparison -> comparison PLUS comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 40 (comparison -> comparison PLUS comparison .)
    MINUS           reduce using rule 40 (comparison -> comparison PLUS comparison .)
    LESS            reduce using rule 40 (comparison -> comparison PLUS comparison .)
    EQEQUAL         reduce using rule 40 (comparison -> comparison PLUS comparison .)
    GREATER         reduce using rule 40 (comparison -> comparison PLUS comparison .)
    COMMA           reduce using rule 40 (comparison -> comparison PLUS comparison .)
    EQUAL           reduce using rule 40 (comparison -> comparison PLUS comparison .)
    NEWLINE         reduce using rule 40 (comparison -> comparison PLUS comparison .)
    SEMI            reduce using rule 40 (comparison -> comparison PLUS comparison .)
    COLON           reduce using rule 40 (comparison -> comparison PLUS comparison .)
    RPAREN          reduce using rule 40 (comparison -> comparison PLUS comparison .)
    STAR            shift and go to state 48
    SLASH           shift and go to state 53

  ! STAR            [ reduce using rule 40 (comparison -> comparison PLUS comparison .) ]
  ! SLASH           [ reduce using rule 40 (comparison -> comparison PLUS comparison .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 54 ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 76

    (43) comparison -> comparison SLASH comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 43 (comparison -> comparison SLASH comparison .)
    MINUS           reduce using rule 43 (comparison -> comparison SLASH comparison .)
    STAR            reduce using rule 43 (comparison -> comparison SLASH comparison .)
    SLASH           reduce using rule 43 (comparison -> comparison SLASH comparison .)
    LESS            reduce using rule 43 (comparison -> comparison SLASH comparison .)
    EQEQUAL         reduce using rule 43 (comparison -> comparison SLASH comparison .)
    GREATER         reduce using rule 43 (comparison -> comparison SLASH comparison .)
    COMMA           reduce using rule 43 (comparison -> comparison SLASH comparison .)
    EQUAL           reduce using rule 43 (comparison -> comparison SLASH comparison .)
    NEWLINE         reduce using rule 43 (comparison -> comparison SLASH comparison .)
    SEMI            reduce using rule 43 (comparison -> comparison SLASH comparison .)
    COLON           reduce using rule 43 (comparison -> comparison SLASH comparison .)
    RPAREN          reduce using rule 43 (comparison -> comparison SLASH comparison .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 54 ]
  ! STAR            [ shift and go to state 48 ]
  ! SLASH           [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 77

    (41) comparison -> comparison MINUS comparison .
    (40) comparison -> comparison . PLUS comparison
    (41) comparison -> comparison . MINUS comparison
    (42) comparison -> comparison . STAR comparison
    (43) comparison -> comparison . SLASH comparison
    (44) comparison -> comparison . LESS comparison
    (45) comparison -> comparison . EQEQUAL comparison
    (46) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 41 (comparison -> comparison MINUS comparison .)
    MINUS           reduce using rule 41 (comparison -> comparison MINUS comparison .)
    LESS            reduce using rule 41 (comparison -> comparison MINUS comparison .)
    EQEQUAL         reduce using rule 41 (comparison -> comparison MINUS comparison .)
    GREATER         reduce using rule 41 (comparison -> comparison MINUS comparison .)
    COMMA           reduce using rule 41 (comparison -> comparison MINUS comparison .)
    EQUAL           reduce using rule 41 (comparison -> comparison MINUS comparison .)
    NEWLINE         reduce using rule 41 (comparison -> comparison MINUS comparison .)
    SEMI            reduce using rule 41 (comparison -> comparison MINUS comparison .)
    COLON           reduce using rule 41 (comparison -> comparison MINUS comparison .)
    RPAREN          reduce using rule 41 (comparison -> comparison MINUS comparison .)
    STAR            shift and go to state 48
    SLASH           shift and go to state 53

  ! STAR            [ reduce using rule 41 (comparison -> comparison MINUS comparison .) ]
  ! SLASH           [ reduce using rule 41 (comparison -> comparison MINUS comparison .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 54 ]
  ! LESS            [ shift and go to state 50 ]
  ! EQEQUAL         [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 49 ]


state 78

    (10) small_stmts -> small_stmts SEMI small_stmt .

    NEWLINE         reduce using rule 10 (small_stmts -> small_stmts SEMI small_stmt .)
    SEMI            reduce using rule 10 (small_stmts -> small_stmts SEMI small_stmt .)


state 79

    (9) simple_stmt -> small_stmts SEMI NEWLINE .

    DEDENT          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IF              reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    FOR             reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    WHILE           reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEF             reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PRINT           reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    RETURN          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PLUS            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    MINUS           reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NAME            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NUMBER          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    STRING          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    LPAREN          reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ENDMARKER       reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NEWLINE         reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELSE            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELIF            reduce using rule 9 (simple_stmt -> small_stmts SEMI NEWLINE .)


state 80

    (62) arglist -> arglist COMMA . argument
    (64) argument -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    argument                       shift and go to state 91
    atom                           shift and go to state 3
    test                           shift and go to state 62

state 81

    (56) trailer -> LPAREN arglist RPAREN .

    PLUS            reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    MINUS           reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    STAR            reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    SLASH           reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    LESS            reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    EQEQUAL         reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    GREATER         reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    COMMA           reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    EQUAL           reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    NEWLINE         reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    SEMI            reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)
    COLON           reduce using rule 56 (trailer -> LPAREN arglist RPAREN .)


state 82

    (32) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 92


state 83

    (29) while_stmt -> WHILE test COLON suite .
    (30) while_stmt -> WHILE test COLON suite . ELSE COLON suite

    ENDMARKER       reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    NEWLINE         reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    IF              reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    FOR             reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    WHILE           reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    DEF             reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    PRINT           reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    RETURN          reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    PLUS            reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    MINUS           reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    NAME            reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    NUMBER          reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    STRING          reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    LPAREN          reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    DEDENT          reduce using rule 29 (while_stmt -> WHILE test COLON suite .)
    ELSE            shift and go to state 93


state 84

    (31) suite -> simple_stmt .

    ELIF            reduce using rule 31 (suite -> simple_stmt .)
    ELSE            reduce using rule 31 (suite -> simple_stmt .)
    ENDMARKER       reduce using rule 31 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 31 (suite -> simple_stmt .)
    IF              reduce using rule 31 (suite -> simple_stmt .)
    FOR             reduce using rule 31 (suite -> simple_stmt .)
    WHILE           reduce using rule 31 (suite -> simple_stmt .)
    DEF             reduce using rule 31 (suite -> simple_stmt .)
    PRINT           reduce using rule 31 (suite -> simple_stmt .)
    RETURN          reduce using rule 31 (suite -> simple_stmt .)
    PLUS            reduce using rule 31 (suite -> simple_stmt .)
    MINUS           reduce using rule 31 (suite -> simple_stmt .)
    NAME            reduce using rule 31 (suite -> simple_stmt .)
    NUMBER          reduce using rule 31 (suite -> simple_stmt .)
    STRING          reduce using rule 31 (suite -> simple_stmt .)
    LPAREN          reduce using rule 31 (suite -> simple_stmt .)
    DEDENT          reduce using rule 31 (suite -> simple_stmt .)


state 85

    (35) funcdef -> DEF NAME parameters COLON . suite
    (31) suite -> . simple_stmt
    (32) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 82
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    expr_stmt                      shift and go to state 27
    power                          shift and go to state 13
    simple_stmt                    shift and go to state 84
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    testlist_multi                 shift and go to state 25
    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    suite                          shift and go to state 94
    small_stmts                    shift and go to state 33

state 86

    (37) parameters -> LPAREN varargslist . RPAREN
    (38) varargslist -> varargslist . COMMA NAME

    RPAREN          shift and go to state 96
    COMMA           shift and go to state 95


state 87

    (36) parameters -> LPAREN RPAREN .

    COLON           reduce using rule 36 (parameters -> LPAREN RPAREN .)


state 88

    (39) varargslist -> NAME .

    RPAREN          reduce using rule 39 (varargslist -> NAME .)
    COMMA           reduce using rule 39 (varargslist -> NAME .)


state 89

    (24) if_stmt -> IF test COLON suite . elif_expr
    (25) if_stmt -> IF test COLON suite . elif_expr ELSE COLON suite
    (26) elif_expr -> .
    (27) elif_expr -> . ELIF test COLON suite elif_expr

    ELSE            reduce using rule 26 (elif_expr -> .)
    ENDMARKER       reduce using rule 26 (elif_expr -> .)
    NEWLINE         reduce using rule 26 (elif_expr -> .)
    IF              reduce using rule 26 (elif_expr -> .)
    FOR             reduce using rule 26 (elif_expr -> .)
    WHILE           reduce using rule 26 (elif_expr -> .)
    DEF             reduce using rule 26 (elif_expr -> .)
    PRINT           reduce using rule 26 (elif_expr -> .)
    RETURN          reduce using rule 26 (elif_expr -> .)
    PLUS            reduce using rule 26 (elif_expr -> .)
    MINUS           reduce using rule 26 (elif_expr -> .)
    NAME            reduce using rule 26 (elif_expr -> .)
    NUMBER          reduce using rule 26 (elif_expr -> .)
    STRING          reduce using rule 26 (elif_expr -> .)
    LPAREN          reduce using rule 26 (elif_expr -> .)
    DEDENT          reduce using rule 26 (elif_expr -> .)
    ELIF            shift and go to state 97

    elif_expr                      shift and go to state 98

state 90

    (28) for_stmt -> FOR NAME IN test . COLON suite

    COLON           shift and go to state 99


state 91

    (62) arglist -> arglist COMMA argument .

    RPAREN          reduce using rule 62 (arglist -> arglist COMMA argument .)
    COMMA           reduce using rule 62 (arglist -> arglist COMMA argument .)


state 92

    (32) suite -> NEWLINE INDENT . stmts DEDENT
    (33) stmts -> . stmts stmt
    (34) stmts -> . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (20) compound_stmt -> . if_stmt
    (21) compound_stmt -> . for_stmt
    (22) compound_stmt -> . while_stmt
    (23) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (24) if_stmt -> . IF test COLON suite elif_expr
    (25) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (28) for_stmt -> . FOR NAME IN test COLON suite
    (29) while_stmt -> . WHILE test COLON suite
    (30) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (35) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    IF              shift and go to state 17
    FOR             shift and go to state 20
    WHILE           shift and go to state 4
    DEF             shift and go to state 9
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 10
    stmts                          shift and go to state 100
    print_stmt                     shift and go to state 14
    test                           shift and go to state 16
    compound_stmt                  shift and go to state 18
    power                          shift and go to state 13
    simple_stmt                    shift and go to state 21
    testlist                       shift and go to state 22
    stmt                           shift and go to state 101
    for_stmt                       shift and go to state 24
    testlist_multi                 shift and go to state 25
    atom                           shift and go to state 3
    funcdef                        shift and go to state 26
    expr_stmt                      shift and go to state 27
    comparison                     shift and go to state 29
    if_stmt                        shift and go to state 30
    while_stmt                     shift and go to state 32
    small_stmts                    shift and go to state 33

state 93

    (30) while_stmt -> WHILE test COLON suite ELSE . COLON suite

    COLON           shift and go to state 102


state 94

    (35) funcdef -> DEF NAME parameters COLON suite .

    DEDENT          reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    FOR             reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    WHILE           reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    PRINT           reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    LPAREN          reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    ENDMARKER       reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 35 (funcdef -> DEF NAME parameters COLON suite .)


state 95

    (38) varargslist -> varargslist COMMA . NAME

    NAME            shift and go to state 103


state 96

    (37) parameters -> LPAREN varargslist RPAREN .

    COLON           reduce using rule 37 (parameters -> LPAREN varargslist RPAREN .)


state 97

    (27) elif_expr -> ELIF . test COLON suite elif_expr
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 29
    power                          shift and go to state 13
    atom                           shift and go to state 3
    test                           shift and go to state 104

state 98

    (24) if_stmt -> IF test COLON suite elif_expr .
    (25) if_stmt -> IF test COLON suite elif_expr . ELSE COLON suite

    DEDENT          reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    IF              reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    FOR             reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    WHILE           reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    DEF             reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    PRINT           reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    RETURN          reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    PLUS            reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    MINUS           reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    NAME            reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    NUMBER          reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    STRING          reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    LPAREN          reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    ENDMARKER       reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    NEWLINE         reduce using rule 24 (if_stmt -> IF test COLON suite elif_expr .)
    ELSE            shift and go to state 105


state 99

    (28) for_stmt -> FOR NAME IN test COLON . suite
    (31) suite -> . simple_stmt
    (32) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 82
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    power                          shift and go to state 13
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 84
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    testlist_multi                 shift and go to state 25
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    suite                          shift and go to state 106
    expr_stmt                      shift and go to state 27
    small_stmts                    shift and go to state 33

state 100

    (32) suite -> NEWLINE INDENT stmts . DEDENT
    (33) stmts -> stmts . stmt
    (6) stmt -> . simple_stmt
    (7) stmt -> . compound_stmt
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (20) compound_stmt -> . if_stmt
    (21) compound_stmt -> . for_stmt
    (22) compound_stmt -> . while_stmt
    (23) compound_stmt -> . funcdef
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (24) if_stmt -> . IF test COLON suite elif_expr
    (25) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (28) for_stmt -> . FOR NAME IN test COLON suite
    (29) while_stmt -> . WHILE test COLON suite
    (30) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (35) funcdef -> . DEF NAME parameters COLON suite
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    DEDENT          shift and go to state 107
    IF              shift and go to state 17
    FOR             shift and go to state 20
    WHILE           shift and go to state 4
    DEF             shift and go to state 9
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    small_stmt                     shift and go to state 2
    return_stmt                    shift and go to state 5
    flow_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 14
    test                           shift and go to state 16
    compound_stmt                  shift and go to state 18
    power                          shift and go to state 13
    simple_stmt                    shift and go to state 21
    testlist                       shift and go to state 22
    stmt                           shift and go to state 108
    for_stmt                       shift and go to state 24
    testlist_multi                 shift and go to state 25
    atom                           shift and go to state 3
    funcdef                        shift and go to state 26
    expr_stmt                      shift and go to state 27
    comparison                     shift and go to state 29
    if_stmt                        shift and go to state 30
    while_stmt                     shift and go to state 32
    small_stmts                    shift and go to state 33

state 101

    (34) stmts -> stmt .

    DEDENT          reduce using rule 34 (stmts -> stmt .)
    IF              reduce using rule 34 (stmts -> stmt .)
    FOR             reduce using rule 34 (stmts -> stmt .)
    WHILE           reduce using rule 34 (stmts -> stmt .)
    DEF             reduce using rule 34 (stmts -> stmt .)
    PRINT           reduce using rule 34 (stmts -> stmt .)
    RETURN          reduce using rule 34 (stmts -> stmt .)
    PLUS            reduce using rule 34 (stmts -> stmt .)
    MINUS           reduce using rule 34 (stmts -> stmt .)
    NAME            reduce using rule 34 (stmts -> stmt .)
    NUMBER          reduce using rule 34 (stmts -> stmt .)
    STRING          reduce using rule 34 (stmts -> stmt .)
    LPAREN          reduce using rule 34 (stmts -> stmt .)


state 102

    (30) while_stmt -> WHILE test COLON suite ELSE COLON . suite
    (31) suite -> . simple_stmt
    (32) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 82
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    power                          shift and go to state 13
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 84
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    testlist_multi                 shift and go to state 25
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    suite                          shift and go to state 109
    expr_stmt                      shift and go to state 27
    small_stmts                    shift and go to state 33

state 103

    (38) varargslist -> varargslist COMMA NAME .

    RPAREN          reduce using rule 38 (varargslist -> varargslist COMMA NAME .)
    COMMA           reduce using rule 38 (varargslist -> varargslist COMMA NAME .)


state 104

    (27) elif_expr -> ELIF test . COLON suite elif_expr

    COLON           shift and go to state 110


state 105

    (25) if_stmt -> IF test COLON suite elif_expr ELSE . COLON suite

    COLON           shift and go to state 111


state 106

    (28) for_stmt -> FOR NAME IN test COLON suite .

    DEDENT          reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    IF              reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    FOR             reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    WHILE           reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    DEF             reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    PRINT           reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    RETURN          reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    PLUS            reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    MINUS           reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    NAME            reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    NUMBER          reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    STRING          reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    LPAREN          reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    ENDMARKER       reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)
    NEWLINE         reduce using rule 28 (for_stmt -> FOR NAME IN test COLON suite .)


state 107

    (32) suite -> NEWLINE INDENT stmts DEDENT .

    ELIF            reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    ELSE            reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    ENDMARKER       reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    FOR             reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    WHILE           reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    PRINT           reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAREN          reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 32 (suite -> NEWLINE INDENT stmts DEDENT .)


state 108

    (33) stmts -> stmts stmt .

    DEDENT          reduce using rule 33 (stmts -> stmts stmt .)
    IF              reduce using rule 33 (stmts -> stmts stmt .)
    FOR             reduce using rule 33 (stmts -> stmts stmt .)
    WHILE           reduce using rule 33 (stmts -> stmts stmt .)
    DEF             reduce using rule 33 (stmts -> stmts stmt .)
    PRINT           reduce using rule 33 (stmts -> stmts stmt .)
    RETURN          reduce using rule 33 (stmts -> stmts stmt .)
    PLUS            reduce using rule 33 (stmts -> stmts stmt .)
    MINUS           reduce using rule 33 (stmts -> stmts stmt .)
    NAME            reduce using rule 33 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 33 (stmts -> stmts stmt .)
    STRING          reduce using rule 33 (stmts -> stmts stmt .)
    LPAREN          reduce using rule 33 (stmts -> stmts stmt .)


state 109

    (30) while_stmt -> WHILE test COLON suite ELSE COLON suite .

    ENDMARKER       reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IF              reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FOR             reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEF             reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NAME            reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    STRING          reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LPAREN          reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEDENT          reduce using rule 30 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)


state 110

    (27) elif_expr -> ELIF test COLON . suite elif_expr
    (31) suite -> . simple_stmt
    (32) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 82
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    testlist_multi                 shift and go to state 25
    simple_stmt                    shift and go to state 84
    power                          shift and go to state 13
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    suite                          shift and go to state 112
    expr_stmt                      shift and go to state 27
    small_stmts                    shift and go to state 33

state 111

    (25) if_stmt -> IF test COLON suite elif_expr ELSE COLON . suite
    (31) suite -> . simple_stmt
    (32) suite -> . NEWLINE INDENT stmts DEDENT
    (8) simple_stmt -> . small_stmts NEWLINE
    (9) simple_stmt -> . small_stmts SEMI NEWLINE
    (10) small_stmts -> . small_stmts SEMI small_stmt
    (11) small_stmts -> . small_stmt
    (12) small_stmt -> . flow_stmt
    (13) small_stmt -> . expr_stmt
    (14) small_stmt -> . print_stmt
    (17) flow_stmt -> . return_stmt
    (15) expr_stmt -> . testlist EQUAL testlist
    (16) expr_stmt -> . testlist
    (18) print_stmt -> . PRINT test
    (19) return_stmt -> . RETURN testlist
    (57) testlist -> . testlist_multi COMMA
    (58) testlist -> . testlist_multi
    (59) testlist_multi -> . testlist_multi COMMA test
    (60) testlist_multi -> . test
    (61) test -> . comparison
    (40) comparison -> . comparison PLUS comparison
    (41) comparison -> . comparison MINUS comparison
    (42) comparison -> . comparison STAR comparison
    (43) comparison -> . comparison SLASH comparison
    (44) comparison -> . comparison LESS comparison
    (45) comparison -> . comparison EQEQUAL comparison
    (46) comparison -> . comparison GREATER comparison
    (47) comparison -> . PLUS comparison
    (48) comparison -> . MINUS comparison
    (49) comparison -> . power
    (50) power -> . atom
    (51) power -> . atom trailer
    (52) atom -> . NAME
    (53) atom -> . NUMBER
    (54) atom -> . STRING
    (55) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 82
    PRINT           shift and go to state 6
    RETURN          shift and go to state 7
    PLUS            shift and go to state 12
    MINUS           shift and go to state 8
    NAME            shift and go to state 28
    NUMBER          shift and go to state 34
    STRING          shift and go to state 19
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 10
    comparison                     shift and go to state 29
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 22
    print_stmt                     shift and go to state 14
    testlist_multi                 shift and go to state 25
    simple_stmt                    shift and go to state 84
    power                          shift and go to state 13
    return_stmt                    shift and go to state 5
    atom                           shift and go to state 3
    test                           shift and go to state 16
    suite                          shift and go to state 113
    expr_stmt                      shift and go to state 27
    small_stmts                    shift and go to state 33

state 112

    (27) elif_expr -> ELIF test COLON suite . elif_expr
    (26) elif_expr -> .
    (27) elif_expr -> . ELIF test COLON suite elif_expr

    ELSE            reduce using rule 26 (elif_expr -> .)
    ENDMARKER       reduce using rule 26 (elif_expr -> .)
    NEWLINE         reduce using rule 26 (elif_expr -> .)
    IF              reduce using rule 26 (elif_expr -> .)
    FOR             reduce using rule 26 (elif_expr -> .)
    WHILE           reduce using rule 26 (elif_expr -> .)
    DEF             reduce using rule 26 (elif_expr -> .)
    PRINT           reduce using rule 26 (elif_expr -> .)
    RETURN          reduce using rule 26 (elif_expr -> .)
    PLUS            reduce using rule 26 (elif_expr -> .)
    MINUS           reduce using rule 26 (elif_expr -> .)
    NAME            reduce using rule 26 (elif_expr -> .)
    NUMBER          reduce using rule 26 (elif_expr -> .)
    STRING          reduce using rule 26 (elif_expr -> .)
    LPAREN          reduce using rule 26 (elif_expr -> .)
    DEDENT          reduce using rule 26 (elif_expr -> .)
    ELIF            shift and go to state 97

    elif_expr                      shift and go to state 114

state 113

    (25) if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .

    DEDENT          reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    IF              reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    FOR             reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    WHILE           reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    DEF             reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PRINT           reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    RETURN          reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PLUS            reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    MINUS           reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NAME            reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NUMBER          reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    STRING          reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    LPAREN          reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    ENDMARKER       reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NEWLINE         reduce using rule 25 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)


state 114

    (27) elif_expr -> ELIF test COLON suite elif_expr .

    ELSE            reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    ENDMARKER       reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    NEWLINE         reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    IF              reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    FOR             reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    WHILE           reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    DEF             reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    PRINT           reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    RETURN          reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    PLUS            reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    MINUS           reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    NAME            reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    NUMBER          reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    STRING          reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    LPAREN          reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)
    DEDENT          reduce using rule 27 (elif_expr -> ELIF test COLON suite elif_expr .)

