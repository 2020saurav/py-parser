Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    NOTEQUAL
    ELIF
    RAISE
    STAREQUAL
    STARSTAR
    GLOBAL
    ASSERT
    WHILE
    DEL
    VBAR
    BACKQUOTE
    PRINT
    PASS
    WITH
    LEFTSHIFT
    GREATEREQUAL
    MINEQUAL
    BINARYNUMBER
    EXCEPT
    PERCENTEQUAL
    TILDE
    IMPORT
    UNICODESTRING
    RSQB
    CLASS
    TRIPLESTRING
    SLASHSLASH
    SLASHEQUAL
    RIGHTSHIFT
    RBRACE
    FOR
    EXEC
    AMPER
    IS
    PERCENT
    YIELD
    ELSE
    TRY
    PLUSEQUAL
    FINALLY
    AT
    IN
    LESSEQUAL
    LSQB
    DOT
    AND
    CIRCUMFLEX
    FNUMBER
    LBRACE
    FROM
    HEXADECIMALNUMBER
    INUMBER
    RAWSTRING
    AS
    BREAK
    CONTINUE
    OCTALNUMBER
    NOT
    WS
    OR
    LAMBDA

Grammar

Rule 0     S' -> program
Rule 1     program -> file_input ENDMARKER
Rule 2     file_input -> file_input NEWLINE
Rule 3     file_input -> file_input stmt
Rule 4     file_input -> NEWLINE
Rule 5     file_input -> stmt
Rule 6     funcdef -> DEF NAME parameters COLON suite
Rule 7     parameters -> LPAREN RPAREN
Rule 8     parameters -> LPAREN varargslist RPAREN
Rule 9     varargslist -> varargslist COMMA NAME
Rule 10    varargslist -> NAME
Rule 11    stmt -> simple_stmt
Rule 12    stmt -> compound_stmt
Rule 13    simple_stmt -> small_stmts NEWLINE
Rule 14    simple_stmt -> small_stmts SEMI NEWLINE
Rule 15    small_stmts -> small_stmts SEMI small_stmt
Rule 16    small_stmts -> small_stmt
Rule 17    small_stmt -> flow_stmt
Rule 18    small_stmt -> expr_stmt
Rule 19    expr_stmt -> testlist EQUAL testlist
Rule 20    expr_stmt -> testlist
Rule 21    flow_stmt -> return_stmt
Rule 22    return_stmt -> RETURN testlist
Rule 23    compound_stmt -> if_stmt
Rule 24    compound_stmt -> funcdef
Rule 25    if_stmt -> IF test COLON suite
Rule 26    suite -> simple_stmt
Rule 27    suite -> NEWLINE INDENT stmts DEDENT
Rule 28    stmts -> stmts stmt
Rule 29    stmts -> stmt
Rule 30    comparison -> comparison PLUS comparison
Rule 31    comparison -> comparison MINUS comparison
Rule 32    comparison -> comparison STAR comparison
Rule 33    comparison -> comparison SLASH comparison
Rule 34    comparison -> comparison LESS comparison
Rule 35    comparison -> comparison EQEQUAL comparison
Rule 36    comparison -> comparison GREATER comparison
Rule 37    comparison -> PLUS comparison
Rule 38    comparison -> MINUS comparison
Rule 39    comparison -> power
Rule 40    power -> atom
Rule 41    power -> atom trailer
Rule 42    atom -> NAME
Rule 43    atom -> NUMBER
Rule 44    atom -> STRING
Rule 45    atom -> LPAREN testlist RPAREN
Rule 46    trailer -> LPAREN arglist RPAREN
Rule 47    testlist -> testlist_multi COMMA
Rule 48    testlist -> testlist_multi
Rule 49    testlist_multi -> testlist_multi COMMA test
Rule 50    testlist_multi -> test
Rule 51    test -> comparison
Rule 52    arglist -> arglist COMMA argument
Rule 53    arglist -> argument
Rule 54    argument -> test

Terminals, with rules where they appear

AMPER                : 
AND                  : 
AS                   : 
ASSERT               : 
AT                   : 
BACKQUOTE            : 
BINARYNUMBER         : 
BREAK                : 
CIRCUMFLEX           : 
CLASS                : 
COLON                : 6 25
COMMA                : 9 47 49 52
CONTINUE             : 
DEDENT               : 27
DEF                  : 6
DEL                  : 
DOT                  : 
ELIF                 : 
ELSE                 : 
ENDMARKER            : 1
EQEQUAL              : 35
EQUAL                : 19
EXCEPT               : 
EXEC                 : 
FINALLY              : 
FNUMBER              : 
FOR                  : 
FROM                 : 
GLOBAL               : 
GREATER              : 36
GREATEREQUAL         : 
HEXADECIMALNUMBER    : 
IF                   : 25
IMPORT               : 
IN                   : 
INDENT               : 27
INUMBER              : 
IS                   : 
LAMBDA               : 
LBRACE               : 
LEFTSHIFT            : 
LESS                 : 34
LESSEQUAL            : 
LPAREN               : 7 8 45 46
LSQB                 : 
MINEQUAL             : 
MINUS                : 31 38
NAME                 : 6 9 10 42
NEWLINE              : 2 4 13 14 27
NOT                  : 
NOTEQUAL             : 
NUMBER               : 43
OCTALNUMBER          : 
OR                   : 
PASS                 : 
PERCENT              : 
PERCENTEQUAL         : 
PLUS                 : 30 37
PLUSEQUAL            : 
PRINT                : 
RAISE                : 
RAWSTRING            : 
RBRACE               : 
RETURN               : 22
RIGHTSHIFT           : 
RPAREN               : 7 8 45 46
RSQB                 : 
SEMI                 : 14 15
SLASH                : 33
SLASHEQUAL           : 
SLASHSLASH           : 
STAR                 : 32
STAREQUAL            : 
STARSTAR             : 
STRING               : 44
TILDE                : 
TRIPLESTRING         : 
TRY                  : 
UNICODESTRING        : 
VBAR                 : 
WHILE                : 
WITH                 : 
WS                   : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arglist              : 46 52
argument             : 52 53
atom                 : 40 41
comparison           : 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 38 51
compound_stmt        : 12
expr_stmt            : 18
file_input           : 1 2 3
flow_stmt            : 17
funcdef              : 24
if_stmt              : 23
parameters           : 6
power                : 39
program              : 0
return_stmt          : 21
simple_stmt          : 11 26
small_stmt           : 15 16
small_stmts          : 13 14 15
stmt                 : 3 5 28 29
stmts                : 27 28
suite                : 6 25
test                 : 25 49 50 54
testlist             : 19 19 20 22 45
testlist_multi       : 47 48 49
trailer              : 41
varargslist          : 8 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . file_input ENDMARKER
    (2) file_input -> . file_input NEWLINE
    (3) file_input -> . file_input stmt
    (4) file_input -> . NEWLINE
    (5) file_input -> . stmt
    (11) stmt -> . simple_stmt
    (12) stmt -> . compound_stmt
    (13) simple_stmt -> . small_stmts NEWLINE
    (14) simple_stmt -> . small_stmts SEMI NEWLINE
    (23) compound_stmt -> . if_stmt
    (24) compound_stmt -> . funcdef
    (15) small_stmts -> . small_stmts SEMI small_stmt
    (16) small_stmts -> . small_stmt
    (25) if_stmt -> . IF test COLON suite
    (6) funcdef -> . DEF NAME parameters COLON suite
    (17) small_stmt -> . flow_stmt
    (18) small_stmt -> . expr_stmt
    (21) flow_stmt -> . return_stmt
    (19) expr_stmt -> . testlist EQUAL testlist
    (20) expr_stmt -> . testlist
    (22) return_stmt -> . RETURN testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 8
    IF              shift and go to state 12
    DEF             shift and go to state 6
    RETURN          shift and go to state 4
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 7
    comparison                     shift and go to state 25
    expr_stmt                      shift and go to state 23
    if_stmt                        shift and go to state 26
    test                           shift and go to state 11
    simple_stmt                    shift and go to state 16
    file_input                     shift and go to state 27
    testlist                       shift and go to state 17
    stmt                           shift and go to state 18
    testlist_multi                 shift and go to state 20
    small_stmt                     shift and go to state 2
    power                          shift and go to state 15
    program                        shift and go to state 10
    return_stmt                    shift and go to state 3
    atom                           shift and go to state 21
    funcdef                        shift and go to state 22
    compound_stmt                  shift and go to state 13
    small_stmts                    shift and go to state 28

state 1

    (45) atom -> LPAREN . testlist RPAREN
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 25
    power                          shift and go to state 15
    testlist                       shift and go to state 29
    testlist_multi                 shift and go to state 20
    atom                           shift and go to state 21
    test                           shift and go to state 11

state 2

    (16) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 16 (small_stmts -> small_stmt .)
    SEMI            reduce using rule 16 (small_stmts -> small_stmt .)


state 3

    (21) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 21 (flow_stmt -> return_stmt .)
    SEMI            reduce using rule 21 (flow_stmt -> return_stmt .)


state 4

    (22) return_stmt -> RETURN . testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 25
    power                          shift and go to state 15
    testlist                       shift and go to state 30
    testlist_multi                 shift and go to state 20
    atom                           shift and go to state 21
    test                           shift and go to state 11

state 5

    (38) comparison -> MINUS . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 31
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 6

    (6) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 32


state 7

    (17) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 17 (small_stmt -> flow_stmt .)
    SEMI            reduce using rule 17 (small_stmt -> flow_stmt .)


state 8

    (4) file_input -> NEWLINE .

    ENDMARKER       reduce using rule 4 (file_input -> NEWLINE .)
    NEWLINE         reduce using rule 4 (file_input -> NEWLINE .)
    IF              reduce using rule 4 (file_input -> NEWLINE .)
    DEF             reduce using rule 4 (file_input -> NEWLINE .)
    RETURN          reduce using rule 4 (file_input -> NEWLINE .)
    PLUS            reduce using rule 4 (file_input -> NEWLINE .)
    MINUS           reduce using rule 4 (file_input -> NEWLINE .)
    NAME            reduce using rule 4 (file_input -> NEWLINE .)
    NUMBER          reduce using rule 4 (file_input -> NEWLINE .)
    STRING          reduce using rule 4 (file_input -> NEWLINE .)
    LPAREN          reduce using rule 4 (file_input -> NEWLINE .)


state 9

    (37) comparison -> PLUS . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 33
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 10

    (0) S' -> program .



state 11

    (50) testlist_multi -> test .

    COMMA           reduce using rule 50 (testlist_multi -> test .)
    EQUAL           reduce using rule 50 (testlist_multi -> test .)
    NEWLINE         reduce using rule 50 (testlist_multi -> test .)
    SEMI            reduce using rule 50 (testlist_multi -> test .)
    RPAREN          reduce using rule 50 (testlist_multi -> test .)


state 12

    (25) if_stmt -> IF . test COLON suite
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 25
    power                          shift and go to state 15
    atom                           shift and go to state 21
    test                           shift and go to state 34

state 13

    (12) stmt -> compound_stmt .

    DEDENT          reduce using rule 12 (stmt -> compound_stmt .)
    IF              reduce using rule 12 (stmt -> compound_stmt .)
    DEF             reduce using rule 12 (stmt -> compound_stmt .)
    RETURN          reduce using rule 12 (stmt -> compound_stmt .)
    PLUS            reduce using rule 12 (stmt -> compound_stmt .)
    MINUS           reduce using rule 12 (stmt -> compound_stmt .)
    NAME            reduce using rule 12 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 12 (stmt -> compound_stmt .)
    STRING          reduce using rule 12 (stmt -> compound_stmt .)
    LPAREN          reduce using rule 12 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 12 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 12 (stmt -> compound_stmt .)


state 14

    (44) atom -> STRING .

    LPAREN          reduce using rule 44 (atom -> STRING .)
    PLUS            reduce using rule 44 (atom -> STRING .)
    MINUS           reduce using rule 44 (atom -> STRING .)
    STAR            reduce using rule 44 (atom -> STRING .)
    SLASH           reduce using rule 44 (atom -> STRING .)
    LESS            reduce using rule 44 (atom -> STRING .)
    EQEQUAL         reduce using rule 44 (atom -> STRING .)
    GREATER         reduce using rule 44 (atom -> STRING .)
    COMMA           reduce using rule 44 (atom -> STRING .)
    EQUAL           reduce using rule 44 (atom -> STRING .)
    NEWLINE         reduce using rule 44 (atom -> STRING .)
    SEMI            reduce using rule 44 (atom -> STRING .)
    RPAREN          reduce using rule 44 (atom -> STRING .)
    COLON           reduce using rule 44 (atom -> STRING .)


state 15

    (39) comparison -> power .

    PLUS            reduce using rule 39 (comparison -> power .)
    MINUS           reduce using rule 39 (comparison -> power .)
    STAR            reduce using rule 39 (comparison -> power .)
    SLASH           reduce using rule 39 (comparison -> power .)
    LESS            reduce using rule 39 (comparison -> power .)
    EQEQUAL         reduce using rule 39 (comparison -> power .)
    GREATER         reduce using rule 39 (comparison -> power .)
    COMMA           reduce using rule 39 (comparison -> power .)
    EQUAL           reduce using rule 39 (comparison -> power .)
    NEWLINE         reduce using rule 39 (comparison -> power .)
    SEMI            reduce using rule 39 (comparison -> power .)
    RPAREN          reduce using rule 39 (comparison -> power .)
    COLON           reduce using rule 39 (comparison -> power .)


state 16

    (11) stmt -> simple_stmt .

    DEDENT          reduce using rule 11 (stmt -> simple_stmt .)
    IF              reduce using rule 11 (stmt -> simple_stmt .)
    DEF             reduce using rule 11 (stmt -> simple_stmt .)
    RETURN          reduce using rule 11 (stmt -> simple_stmt .)
    PLUS            reduce using rule 11 (stmt -> simple_stmt .)
    MINUS           reduce using rule 11 (stmt -> simple_stmt .)
    NAME            reduce using rule 11 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 11 (stmt -> simple_stmt .)
    STRING          reduce using rule 11 (stmt -> simple_stmt .)
    LPAREN          reduce using rule 11 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 11 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 11 (stmt -> simple_stmt .)


state 17

    (19) expr_stmt -> testlist . EQUAL testlist
    (20) expr_stmt -> testlist .

    EQUAL           shift and go to state 35
    NEWLINE         reduce using rule 20 (expr_stmt -> testlist .)
    SEMI            reduce using rule 20 (expr_stmt -> testlist .)


state 18

    (5) file_input -> stmt .

    ENDMARKER       reduce using rule 5 (file_input -> stmt .)
    NEWLINE         reduce using rule 5 (file_input -> stmt .)
    IF              reduce using rule 5 (file_input -> stmt .)
    DEF             reduce using rule 5 (file_input -> stmt .)
    RETURN          reduce using rule 5 (file_input -> stmt .)
    PLUS            reduce using rule 5 (file_input -> stmt .)
    MINUS           reduce using rule 5 (file_input -> stmt .)
    NAME            reduce using rule 5 (file_input -> stmt .)
    NUMBER          reduce using rule 5 (file_input -> stmt .)
    STRING          reduce using rule 5 (file_input -> stmt .)
    LPAREN          reduce using rule 5 (file_input -> stmt .)


state 19

    (43) atom -> NUMBER .

    LPAREN          reduce using rule 43 (atom -> NUMBER .)
    PLUS            reduce using rule 43 (atom -> NUMBER .)
    MINUS           reduce using rule 43 (atom -> NUMBER .)
    STAR            reduce using rule 43 (atom -> NUMBER .)
    SLASH           reduce using rule 43 (atom -> NUMBER .)
    LESS            reduce using rule 43 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 43 (atom -> NUMBER .)
    GREATER         reduce using rule 43 (atom -> NUMBER .)
    COMMA           reduce using rule 43 (atom -> NUMBER .)
    EQUAL           reduce using rule 43 (atom -> NUMBER .)
    NEWLINE         reduce using rule 43 (atom -> NUMBER .)
    SEMI            reduce using rule 43 (atom -> NUMBER .)
    RPAREN          reduce using rule 43 (atom -> NUMBER .)
    COLON           reduce using rule 43 (atom -> NUMBER .)


state 20

    (47) testlist -> testlist_multi . COMMA
    (48) testlist -> testlist_multi .
    (49) testlist_multi -> testlist_multi . COMMA test

    COMMA           shift and go to state 36
    EQUAL           reduce using rule 48 (testlist -> testlist_multi .)
    NEWLINE         reduce using rule 48 (testlist -> testlist_multi .)
    SEMI            reduce using rule 48 (testlist -> testlist_multi .)
    RPAREN          reduce using rule 48 (testlist -> testlist_multi .)


state 21

    (40) power -> atom .
    (41) power -> atom . trailer
    (46) trailer -> . LPAREN arglist RPAREN

    PLUS            reduce using rule 40 (power -> atom .)
    MINUS           reduce using rule 40 (power -> atom .)
    STAR            reduce using rule 40 (power -> atom .)
    SLASH           reduce using rule 40 (power -> atom .)
    LESS            reduce using rule 40 (power -> atom .)
    EQEQUAL         reduce using rule 40 (power -> atom .)
    GREATER         reduce using rule 40 (power -> atom .)
    COMMA           reduce using rule 40 (power -> atom .)
    EQUAL           reduce using rule 40 (power -> atom .)
    NEWLINE         reduce using rule 40 (power -> atom .)
    SEMI            reduce using rule 40 (power -> atom .)
    RPAREN          reduce using rule 40 (power -> atom .)
    COLON           reduce using rule 40 (power -> atom .)
    LPAREN          shift and go to state 37

    trailer                        shift and go to state 38

state 22

    (24) compound_stmt -> funcdef .

    ENDMARKER       reduce using rule 24 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 24 (compound_stmt -> funcdef .)
    IF              reduce using rule 24 (compound_stmt -> funcdef .)
    DEF             reduce using rule 24 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 24 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 24 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 24 (compound_stmt -> funcdef .)
    NAME            reduce using rule 24 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 24 (compound_stmt -> funcdef .)
    STRING          reduce using rule 24 (compound_stmt -> funcdef .)
    LPAREN          reduce using rule 24 (compound_stmt -> funcdef .)
    DEDENT          reduce using rule 24 (compound_stmt -> funcdef .)


state 23

    (18) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 18 (small_stmt -> expr_stmt .)
    SEMI            reduce using rule 18 (small_stmt -> expr_stmt .)


state 24

    (42) atom -> NAME .

    LPAREN          reduce using rule 42 (atom -> NAME .)
    PLUS            reduce using rule 42 (atom -> NAME .)
    MINUS           reduce using rule 42 (atom -> NAME .)
    STAR            reduce using rule 42 (atom -> NAME .)
    SLASH           reduce using rule 42 (atom -> NAME .)
    LESS            reduce using rule 42 (atom -> NAME .)
    EQEQUAL         reduce using rule 42 (atom -> NAME .)
    GREATER         reduce using rule 42 (atom -> NAME .)
    COMMA           reduce using rule 42 (atom -> NAME .)
    EQUAL           reduce using rule 42 (atom -> NAME .)
    NEWLINE         reduce using rule 42 (atom -> NAME .)
    SEMI            reduce using rule 42 (atom -> NAME .)
    RPAREN          reduce using rule 42 (atom -> NAME .)
    COLON           reduce using rule 42 (atom -> NAME .)


state 25

    (51) test -> comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    COMMA           reduce using rule 51 (test -> comparison .)
    EQUAL           reduce using rule 51 (test -> comparison .)
    NEWLINE         reduce using rule 51 (test -> comparison .)
    SEMI            reduce using rule 51 (test -> comparison .)
    RPAREN          reduce using rule 51 (test -> comparison .)
    COLON           reduce using rule 51 (test -> comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 45
    STAR            shift and go to state 39
    SLASH           shift and go to state 44
    LESS            shift and go to state 41
    EQEQUAL         shift and go to state 42
    GREATER         shift and go to state 40


state 26

    (23) compound_stmt -> if_stmt .

    ENDMARKER       reduce using rule 23 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 23 (compound_stmt -> if_stmt .)
    IF              reduce using rule 23 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 23 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 23 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 23 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 23 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 23 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 23 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 23 (compound_stmt -> if_stmt .)
    LPAREN          reduce using rule 23 (compound_stmt -> if_stmt .)
    DEDENT          reduce using rule 23 (compound_stmt -> if_stmt .)


state 27

    (1) program -> file_input . ENDMARKER
    (2) file_input -> file_input . NEWLINE
    (3) file_input -> file_input . stmt
    (11) stmt -> . simple_stmt
    (12) stmt -> . compound_stmt
    (13) simple_stmt -> . small_stmts NEWLINE
    (14) simple_stmt -> . small_stmts SEMI NEWLINE
    (23) compound_stmt -> . if_stmt
    (24) compound_stmt -> . funcdef
    (15) small_stmts -> . small_stmts SEMI small_stmt
    (16) small_stmts -> . small_stmt
    (25) if_stmt -> . IF test COLON suite
    (6) funcdef -> . DEF NAME parameters COLON suite
    (17) small_stmt -> . flow_stmt
    (18) small_stmt -> . expr_stmt
    (21) flow_stmt -> . return_stmt
    (19) expr_stmt -> . testlist EQUAL testlist
    (20) expr_stmt -> . testlist
    (22) return_stmt -> . RETURN testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    ENDMARKER       shift and go to state 46
    NEWLINE         shift and go to state 47
    IF              shift and go to state 12
    DEF             shift and go to state 6
    RETURN          shift and go to state 4
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 7
    comparison                     shift and go to state 25
    if_stmt                        shift and go to state 26
    simple_stmt                    shift and go to state 16
    testlist                       shift and go to state 17
    stmt                           shift and go to state 48
    testlist_multi                 shift and go to state 20
    small_stmt                     shift and go to state 2
    power                          shift and go to state 15
    test                           shift and go to state 11
    return_stmt                    shift and go to state 3
    atom                           shift and go to state 21
    funcdef                        shift and go to state 22
    expr_stmt                      shift and go to state 23
    compound_stmt                  shift and go to state 13
    small_stmts                    shift and go to state 28

state 28

    (13) simple_stmt -> small_stmts . NEWLINE
    (14) simple_stmt -> small_stmts . SEMI NEWLINE
    (15) small_stmts -> small_stmts . SEMI small_stmt

    NEWLINE         shift and go to state 49
    SEMI            shift and go to state 50


state 29

    (45) atom -> LPAREN testlist . RPAREN

    RPAREN          shift and go to state 51


state 30

    (22) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 22 (return_stmt -> RETURN testlist .)
    SEMI            reduce using rule 22 (return_stmt -> RETURN testlist .)


state 31

    (38) comparison -> MINUS comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 38 (comparison -> MINUS comparison .)
    MINUS           reduce using rule 38 (comparison -> MINUS comparison .)
    LESS            reduce using rule 38 (comparison -> MINUS comparison .)
    EQEQUAL         reduce using rule 38 (comparison -> MINUS comparison .)
    GREATER         reduce using rule 38 (comparison -> MINUS comparison .)
    COMMA           reduce using rule 38 (comparison -> MINUS comparison .)
    EQUAL           reduce using rule 38 (comparison -> MINUS comparison .)
    NEWLINE         reduce using rule 38 (comparison -> MINUS comparison .)
    SEMI            reduce using rule 38 (comparison -> MINUS comparison .)
    RPAREN          reduce using rule 38 (comparison -> MINUS comparison .)
    COLON           reduce using rule 38 (comparison -> MINUS comparison .)
    STAR            shift and go to state 39
    SLASH           shift and go to state 44

  ! STAR            [ reduce using rule 38 (comparison -> MINUS comparison .) ]
  ! SLASH           [ reduce using rule 38 (comparison -> MINUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 32

    (6) funcdef -> DEF NAME . parameters COLON suite
    (7) parameters -> . LPAREN RPAREN
    (8) parameters -> . LPAREN varargslist RPAREN

    LPAREN          shift and go to state 53

    parameters                     shift and go to state 52

state 33

    (37) comparison -> PLUS comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 37 (comparison -> PLUS comparison .)
    MINUS           reduce using rule 37 (comparison -> PLUS comparison .)
    LESS            reduce using rule 37 (comparison -> PLUS comparison .)
    EQEQUAL         reduce using rule 37 (comparison -> PLUS comparison .)
    GREATER         reduce using rule 37 (comparison -> PLUS comparison .)
    COMMA           reduce using rule 37 (comparison -> PLUS comparison .)
    EQUAL           reduce using rule 37 (comparison -> PLUS comparison .)
    NEWLINE         reduce using rule 37 (comparison -> PLUS comparison .)
    SEMI            reduce using rule 37 (comparison -> PLUS comparison .)
    RPAREN          reduce using rule 37 (comparison -> PLUS comparison .)
    COLON           reduce using rule 37 (comparison -> PLUS comparison .)
    STAR            shift and go to state 39
    SLASH           shift and go to state 44

  ! STAR            [ reduce using rule 37 (comparison -> PLUS comparison .) ]
  ! SLASH           [ reduce using rule 37 (comparison -> PLUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 34

    (25) if_stmt -> IF test . COLON suite

    COLON           shift and go to state 54


state 35

    (19) expr_stmt -> testlist EQUAL . testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 25
    power                          shift and go to state 15
    testlist                       shift and go to state 55
    testlist_multi                 shift and go to state 20
    atom                           shift and go to state 21
    test                           shift and go to state 11

state 36

    (47) testlist -> testlist_multi COMMA .
    (49) testlist_multi -> testlist_multi COMMA . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    EQUAL           reduce using rule 47 (testlist -> testlist_multi COMMA .)
    NEWLINE         reduce using rule 47 (testlist -> testlist_multi COMMA .)
    SEMI            reduce using rule 47 (testlist -> testlist_multi COMMA .)
    RPAREN          reduce using rule 47 (testlist -> testlist_multi COMMA .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 25
    power                          shift and go to state 15
    atom                           shift and go to state 21
    test                           shift and go to state 56

state 37

    (46) trailer -> LPAREN . arglist RPAREN
    (52) arglist -> . arglist COMMA argument
    (53) arglist -> . argument
    (54) argument -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 25
    power                          shift and go to state 15
    argument                       shift and go to state 57
    atom                           shift and go to state 21
    test                           shift and go to state 58
    arglist                        shift and go to state 59

state 38

    (41) power -> atom trailer .

    PLUS            reduce using rule 41 (power -> atom trailer .)
    MINUS           reduce using rule 41 (power -> atom trailer .)
    STAR            reduce using rule 41 (power -> atom trailer .)
    SLASH           reduce using rule 41 (power -> atom trailer .)
    LESS            reduce using rule 41 (power -> atom trailer .)
    EQEQUAL         reduce using rule 41 (power -> atom trailer .)
    GREATER         reduce using rule 41 (power -> atom trailer .)
    COMMA           reduce using rule 41 (power -> atom trailer .)
    EQUAL           reduce using rule 41 (power -> atom trailer .)
    NEWLINE         reduce using rule 41 (power -> atom trailer .)
    SEMI            reduce using rule 41 (power -> atom trailer .)
    RPAREN          reduce using rule 41 (power -> atom trailer .)
    COLON           reduce using rule 41 (power -> atom trailer .)


state 39

    (32) comparison -> comparison STAR . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 60
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 40

    (36) comparison -> comparison GREATER . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 61
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 41

    (34) comparison -> comparison LESS . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 62
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 42

    (35) comparison -> comparison EQEQUAL . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 63
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 43

    (30) comparison -> comparison PLUS . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 64
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 44

    (33) comparison -> comparison SLASH . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 65
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 45

    (31) comparison -> comparison MINUS . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 66
    power                          shift and go to state 15
    atom                           shift and go to state 21

state 46

    (1) program -> file_input ENDMARKER .

    $end            reduce using rule 1 (program -> file_input ENDMARKER .)


state 47

    (2) file_input -> file_input NEWLINE .

    ENDMARKER       reduce using rule 2 (file_input -> file_input NEWLINE .)
    NEWLINE         reduce using rule 2 (file_input -> file_input NEWLINE .)
    IF              reduce using rule 2 (file_input -> file_input NEWLINE .)
    DEF             reduce using rule 2 (file_input -> file_input NEWLINE .)
    RETURN          reduce using rule 2 (file_input -> file_input NEWLINE .)
    PLUS            reduce using rule 2 (file_input -> file_input NEWLINE .)
    MINUS           reduce using rule 2 (file_input -> file_input NEWLINE .)
    NAME            reduce using rule 2 (file_input -> file_input NEWLINE .)
    NUMBER          reduce using rule 2 (file_input -> file_input NEWLINE .)
    STRING          reduce using rule 2 (file_input -> file_input NEWLINE .)
    LPAREN          reduce using rule 2 (file_input -> file_input NEWLINE .)


state 48

    (3) file_input -> file_input stmt .

    ENDMARKER       reduce using rule 3 (file_input -> file_input stmt .)
    NEWLINE         reduce using rule 3 (file_input -> file_input stmt .)
    IF              reduce using rule 3 (file_input -> file_input stmt .)
    DEF             reduce using rule 3 (file_input -> file_input stmt .)
    RETURN          reduce using rule 3 (file_input -> file_input stmt .)
    PLUS            reduce using rule 3 (file_input -> file_input stmt .)
    MINUS           reduce using rule 3 (file_input -> file_input stmt .)
    NAME            reduce using rule 3 (file_input -> file_input stmt .)
    NUMBER          reduce using rule 3 (file_input -> file_input stmt .)
    STRING          reduce using rule 3 (file_input -> file_input stmt .)
    LPAREN          reduce using rule 3 (file_input -> file_input stmt .)


state 49

    (13) simple_stmt -> small_stmts NEWLINE .

    DEDENT          reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    LPAREN          reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    ENDMARKER       reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 13 (simple_stmt -> small_stmts NEWLINE .)


state 50

    (14) simple_stmt -> small_stmts SEMI . NEWLINE
    (15) small_stmts -> small_stmts SEMI . small_stmt
    (17) small_stmt -> . flow_stmt
    (18) small_stmt -> . expr_stmt
    (21) flow_stmt -> . return_stmt
    (19) expr_stmt -> . testlist EQUAL testlist
    (20) expr_stmt -> . testlist
    (22) return_stmt -> . RETURN testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 68
    RETURN          shift and go to state 4
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 7
    comparison                     shift and go to state 25
    power                          shift and go to state 15
    small_stmt                     shift and go to state 67
    testlist                       shift and go to state 17
    return_stmt                    shift and go to state 3
    atom                           shift and go to state 21
    test                           shift and go to state 11
    testlist_multi                 shift and go to state 20
    expr_stmt                      shift and go to state 23

state 51

    (45) atom -> LPAREN testlist RPAREN .

    LPAREN          reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    PLUS            reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    MINUS           reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    STAR            reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    SLASH           reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    LESS            reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    EQEQUAL         reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    GREATER         reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    COMMA           reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    EQUAL           reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    NEWLINE         reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    SEMI            reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    RPAREN          reduce using rule 45 (atom -> LPAREN testlist RPAREN .)
    COLON           reduce using rule 45 (atom -> LPAREN testlist RPAREN .)


state 52

    (6) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 69


state 53

    (7) parameters -> LPAREN . RPAREN
    (8) parameters -> LPAREN . varargslist RPAREN
    (9) varargslist -> . varargslist COMMA NAME
    (10) varargslist -> . NAME

    RPAREN          shift and go to state 71
    NAME            shift and go to state 72

    varargslist                    shift and go to state 70

state 54

    (25) if_stmt -> IF test COLON . suite
    (26) suite -> . simple_stmt
    (27) suite -> . NEWLINE INDENT stmts DEDENT
    (13) simple_stmt -> . small_stmts NEWLINE
    (14) simple_stmt -> . small_stmts SEMI NEWLINE
    (15) small_stmts -> . small_stmts SEMI small_stmt
    (16) small_stmts -> . small_stmt
    (17) small_stmt -> . flow_stmt
    (18) small_stmt -> . expr_stmt
    (21) flow_stmt -> . return_stmt
    (19) expr_stmt -> . testlist EQUAL testlist
    (20) expr_stmt -> . testlist
    (22) return_stmt -> . RETURN testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 73
    RETURN          shift and go to state 4
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 7
    comparison                     shift and go to state 25
    power                          shift and go to state 15
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 74
    testlist                       shift and go to state 17
    testlist_multi                 shift and go to state 20
    return_stmt                    shift and go to state 3
    atom                           shift and go to state 21
    test                           shift and go to state 11
    suite                          shift and go to state 75
    expr_stmt                      shift and go to state 23
    small_stmts                    shift and go to state 28

state 55

    (19) expr_stmt -> testlist EQUAL testlist .

    NEWLINE         reduce using rule 19 (expr_stmt -> testlist EQUAL testlist .)
    SEMI            reduce using rule 19 (expr_stmt -> testlist EQUAL testlist .)


state 56

    (49) testlist_multi -> testlist_multi COMMA test .

    COMMA           reduce using rule 49 (testlist_multi -> testlist_multi COMMA test .)
    EQUAL           reduce using rule 49 (testlist_multi -> testlist_multi COMMA test .)
    NEWLINE         reduce using rule 49 (testlist_multi -> testlist_multi COMMA test .)
    SEMI            reduce using rule 49 (testlist_multi -> testlist_multi COMMA test .)
    RPAREN          reduce using rule 49 (testlist_multi -> testlist_multi COMMA test .)


state 57

    (53) arglist -> argument .

    RPAREN          reduce using rule 53 (arglist -> argument .)
    COMMA           reduce using rule 53 (arglist -> argument .)


state 58

    (54) argument -> test .

    RPAREN          reduce using rule 54 (argument -> test .)
    COMMA           reduce using rule 54 (argument -> test .)


state 59

    (46) trailer -> LPAREN arglist . RPAREN
    (52) arglist -> arglist . COMMA argument

    RPAREN          shift and go to state 77
    COMMA           shift and go to state 76


state 60

    (32) comparison -> comparison STAR comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 32 (comparison -> comparison STAR comparison .)
    MINUS           reduce using rule 32 (comparison -> comparison STAR comparison .)
    STAR            reduce using rule 32 (comparison -> comparison STAR comparison .)
    SLASH           reduce using rule 32 (comparison -> comparison STAR comparison .)
    LESS            reduce using rule 32 (comparison -> comparison STAR comparison .)
    EQEQUAL         reduce using rule 32 (comparison -> comparison STAR comparison .)
    GREATER         reduce using rule 32 (comparison -> comparison STAR comparison .)
    COMMA           reduce using rule 32 (comparison -> comparison STAR comparison .)
    EQUAL           reduce using rule 32 (comparison -> comparison STAR comparison .)
    NEWLINE         reduce using rule 32 (comparison -> comparison STAR comparison .)
    SEMI            reduce using rule 32 (comparison -> comparison STAR comparison .)
    RPAREN          reduce using rule 32 (comparison -> comparison STAR comparison .)
    COLON           reduce using rule 32 (comparison -> comparison STAR comparison .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 45 ]
  ! STAR            [ shift and go to state 39 ]
  ! SLASH           [ shift and go to state 44 ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 61

    (36) comparison -> comparison GREATER comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 36 (comparison -> comparison GREATER comparison .)
    EQEQUAL         reduce using rule 36 (comparison -> comparison GREATER comparison .)
    GREATER         reduce using rule 36 (comparison -> comparison GREATER comparison .)
    COMMA           reduce using rule 36 (comparison -> comparison GREATER comparison .)
    EQUAL           reduce using rule 36 (comparison -> comparison GREATER comparison .)
    NEWLINE         reduce using rule 36 (comparison -> comparison GREATER comparison .)
    SEMI            reduce using rule 36 (comparison -> comparison GREATER comparison .)
    RPAREN          reduce using rule 36 (comparison -> comparison GREATER comparison .)
    COLON           reduce using rule 36 (comparison -> comparison GREATER comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 45
    STAR            shift and go to state 39
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 36 (comparison -> comparison GREATER comparison .) ]
  ! MINUS           [ reduce using rule 36 (comparison -> comparison GREATER comparison .) ]
  ! STAR            [ reduce using rule 36 (comparison -> comparison GREATER comparison .) ]
  ! SLASH           [ reduce using rule 36 (comparison -> comparison GREATER comparison .) ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 62

    (34) comparison -> comparison LESS comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 34 (comparison -> comparison LESS comparison .)
    EQEQUAL         reduce using rule 34 (comparison -> comparison LESS comparison .)
    GREATER         reduce using rule 34 (comparison -> comparison LESS comparison .)
    COMMA           reduce using rule 34 (comparison -> comparison LESS comparison .)
    EQUAL           reduce using rule 34 (comparison -> comparison LESS comparison .)
    NEWLINE         reduce using rule 34 (comparison -> comparison LESS comparison .)
    SEMI            reduce using rule 34 (comparison -> comparison LESS comparison .)
    RPAREN          reduce using rule 34 (comparison -> comparison LESS comparison .)
    COLON           reduce using rule 34 (comparison -> comparison LESS comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 45
    STAR            shift and go to state 39
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 34 (comparison -> comparison LESS comparison .) ]
  ! MINUS           [ reduce using rule 34 (comparison -> comparison LESS comparison .) ]
  ! STAR            [ reduce using rule 34 (comparison -> comparison LESS comparison .) ]
  ! SLASH           [ reduce using rule 34 (comparison -> comparison LESS comparison .) ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 63

    (35) comparison -> comparison EQEQUAL comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    LESS            reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    EQEQUAL         reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    GREATER         reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    COMMA           reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    EQUAL           reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    NEWLINE         reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    SEMI            reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    RPAREN          reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    COLON           reduce using rule 35 (comparison -> comparison EQEQUAL comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 45
    STAR            shift and go to state 39
    SLASH           shift and go to state 44

  ! PLUS            [ reduce using rule 35 (comparison -> comparison EQEQUAL comparison .) ]
  ! MINUS           [ reduce using rule 35 (comparison -> comparison EQEQUAL comparison .) ]
  ! STAR            [ reduce using rule 35 (comparison -> comparison EQEQUAL comparison .) ]
  ! SLASH           [ reduce using rule 35 (comparison -> comparison EQEQUAL comparison .) ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 64

    (30) comparison -> comparison PLUS comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 30 (comparison -> comparison PLUS comparison .)
    MINUS           reduce using rule 30 (comparison -> comparison PLUS comparison .)
    LESS            reduce using rule 30 (comparison -> comparison PLUS comparison .)
    EQEQUAL         reduce using rule 30 (comparison -> comparison PLUS comparison .)
    GREATER         reduce using rule 30 (comparison -> comparison PLUS comparison .)
    COMMA           reduce using rule 30 (comparison -> comparison PLUS comparison .)
    EQUAL           reduce using rule 30 (comparison -> comparison PLUS comparison .)
    NEWLINE         reduce using rule 30 (comparison -> comparison PLUS comparison .)
    SEMI            reduce using rule 30 (comparison -> comparison PLUS comparison .)
    RPAREN          reduce using rule 30 (comparison -> comparison PLUS comparison .)
    COLON           reduce using rule 30 (comparison -> comparison PLUS comparison .)
    STAR            shift and go to state 39
    SLASH           shift and go to state 44

  ! STAR            [ reduce using rule 30 (comparison -> comparison PLUS comparison .) ]
  ! SLASH           [ reduce using rule 30 (comparison -> comparison PLUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 65

    (33) comparison -> comparison SLASH comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 33 (comparison -> comparison SLASH comparison .)
    MINUS           reduce using rule 33 (comparison -> comparison SLASH comparison .)
    STAR            reduce using rule 33 (comparison -> comparison SLASH comparison .)
    SLASH           reduce using rule 33 (comparison -> comparison SLASH comparison .)
    LESS            reduce using rule 33 (comparison -> comparison SLASH comparison .)
    EQEQUAL         reduce using rule 33 (comparison -> comparison SLASH comparison .)
    GREATER         reduce using rule 33 (comparison -> comparison SLASH comparison .)
    COMMA           reduce using rule 33 (comparison -> comparison SLASH comparison .)
    EQUAL           reduce using rule 33 (comparison -> comparison SLASH comparison .)
    NEWLINE         reduce using rule 33 (comparison -> comparison SLASH comparison .)
    SEMI            reduce using rule 33 (comparison -> comparison SLASH comparison .)
    RPAREN          reduce using rule 33 (comparison -> comparison SLASH comparison .)
    COLON           reduce using rule 33 (comparison -> comparison SLASH comparison .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 45 ]
  ! STAR            [ shift and go to state 39 ]
  ! SLASH           [ shift and go to state 44 ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 66

    (31) comparison -> comparison MINUS comparison .
    (30) comparison -> comparison . PLUS comparison
    (31) comparison -> comparison . MINUS comparison
    (32) comparison -> comparison . STAR comparison
    (33) comparison -> comparison . SLASH comparison
    (34) comparison -> comparison . LESS comparison
    (35) comparison -> comparison . EQEQUAL comparison
    (36) comparison -> comparison . GREATER comparison

    PLUS            reduce using rule 31 (comparison -> comparison MINUS comparison .)
    MINUS           reduce using rule 31 (comparison -> comparison MINUS comparison .)
    LESS            reduce using rule 31 (comparison -> comparison MINUS comparison .)
    EQEQUAL         reduce using rule 31 (comparison -> comparison MINUS comparison .)
    GREATER         reduce using rule 31 (comparison -> comparison MINUS comparison .)
    COMMA           reduce using rule 31 (comparison -> comparison MINUS comparison .)
    EQUAL           reduce using rule 31 (comparison -> comparison MINUS comparison .)
    NEWLINE         reduce using rule 31 (comparison -> comparison MINUS comparison .)
    SEMI            reduce using rule 31 (comparison -> comparison MINUS comparison .)
    RPAREN          reduce using rule 31 (comparison -> comparison MINUS comparison .)
    COLON           reduce using rule 31 (comparison -> comparison MINUS comparison .)
    STAR            shift and go to state 39
    SLASH           shift and go to state 44

  ! STAR            [ reduce using rule 31 (comparison -> comparison MINUS comparison .) ]
  ! SLASH           [ reduce using rule 31 (comparison -> comparison MINUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 41 ]
  ! EQEQUAL         [ shift and go to state 42 ]
  ! GREATER         [ shift and go to state 40 ]


state 67

    (15) small_stmts -> small_stmts SEMI small_stmt .

    NEWLINE         reduce using rule 15 (small_stmts -> small_stmts SEMI small_stmt .)
    SEMI            reduce using rule 15 (small_stmts -> small_stmts SEMI small_stmt .)


state 68

    (14) simple_stmt -> small_stmts SEMI NEWLINE .

    DEDENT          reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IF              reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEF             reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    RETURN          reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PLUS            reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    MINUS           reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NAME            reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NUMBER          reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    STRING          reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    LPAREN          reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ENDMARKER       reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NEWLINE         reduce using rule 14 (simple_stmt -> small_stmts SEMI NEWLINE .)


state 69

    (6) funcdef -> DEF NAME parameters COLON . suite
    (26) suite -> . simple_stmt
    (27) suite -> . NEWLINE INDENT stmts DEDENT
    (13) simple_stmt -> . small_stmts NEWLINE
    (14) simple_stmt -> . small_stmts SEMI NEWLINE
    (15) small_stmts -> . small_stmts SEMI small_stmt
    (16) small_stmts -> . small_stmt
    (17) small_stmt -> . flow_stmt
    (18) small_stmt -> . expr_stmt
    (21) flow_stmt -> . return_stmt
    (19) expr_stmt -> . testlist EQUAL testlist
    (20) expr_stmt -> . testlist
    (22) return_stmt -> . RETURN testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 73
    RETURN          shift and go to state 4
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 7
    comparison                     shift and go to state 25
    expr_stmt                      shift and go to state 23
    power                          shift and go to state 15
    simple_stmt                    shift and go to state 74
    testlist                       shift and go to state 17
    small_stmt                     shift and go to state 2
    test                           shift and go to state 11
    return_stmt                    shift and go to state 3
    atom                           shift and go to state 21
    testlist_multi                 shift and go to state 20
    suite                          shift and go to state 78
    small_stmts                    shift and go to state 28

state 70

    (8) parameters -> LPAREN varargslist . RPAREN
    (9) varargslist -> varargslist . COMMA NAME

    RPAREN          shift and go to state 80
    COMMA           shift and go to state 79


state 71

    (7) parameters -> LPAREN RPAREN .

    COLON           reduce using rule 7 (parameters -> LPAREN RPAREN .)


state 72

    (10) varargslist -> NAME .

    RPAREN          reduce using rule 10 (varargslist -> NAME .)
    COMMA           reduce using rule 10 (varargslist -> NAME .)


state 73

    (27) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 81


state 74

    (26) suite -> simple_stmt .

    ENDMARKER       reduce using rule 26 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 26 (suite -> simple_stmt .)
    IF              reduce using rule 26 (suite -> simple_stmt .)
    DEF             reduce using rule 26 (suite -> simple_stmt .)
    RETURN          reduce using rule 26 (suite -> simple_stmt .)
    PLUS            reduce using rule 26 (suite -> simple_stmt .)
    MINUS           reduce using rule 26 (suite -> simple_stmt .)
    NAME            reduce using rule 26 (suite -> simple_stmt .)
    NUMBER          reduce using rule 26 (suite -> simple_stmt .)
    STRING          reduce using rule 26 (suite -> simple_stmt .)
    LPAREN          reduce using rule 26 (suite -> simple_stmt .)
    DEDENT          reduce using rule 26 (suite -> simple_stmt .)


state 75

    (25) if_stmt -> IF test COLON suite .

    DEDENT          reduce using rule 25 (if_stmt -> IF test COLON suite .)
    IF              reduce using rule 25 (if_stmt -> IF test COLON suite .)
    DEF             reduce using rule 25 (if_stmt -> IF test COLON suite .)
    RETURN          reduce using rule 25 (if_stmt -> IF test COLON suite .)
    PLUS            reduce using rule 25 (if_stmt -> IF test COLON suite .)
    MINUS           reduce using rule 25 (if_stmt -> IF test COLON suite .)
    NAME            reduce using rule 25 (if_stmt -> IF test COLON suite .)
    NUMBER          reduce using rule 25 (if_stmt -> IF test COLON suite .)
    STRING          reduce using rule 25 (if_stmt -> IF test COLON suite .)
    LPAREN          reduce using rule 25 (if_stmt -> IF test COLON suite .)
    ENDMARKER       reduce using rule 25 (if_stmt -> IF test COLON suite .)
    NEWLINE         reduce using rule 25 (if_stmt -> IF test COLON suite .)


state 76

    (52) arglist -> arglist COMMA . argument
    (54) argument -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    comparison                     shift and go to state 25
    power                          shift and go to state 15
    argument                       shift and go to state 82
    atom                           shift and go to state 21
    test                           shift and go to state 58

state 77

    (46) trailer -> LPAREN arglist RPAREN .

    PLUS            reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    MINUS           reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    STAR            reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    SLASH           reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    LESS            reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    EQEQUAL         reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    GREATER         reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    COMMA           reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    EQUAL           reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    NEWLINE         reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    SEMI            reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)
    COLON           reduce using rule 46 (trailer -> LPAREN arglist RPAREN .)


state 78

    (6) funcdef -> DEF NAME parameters COLON suite .

    ENDMARKER       reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    LPAREN          reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 6 (funcdef -> DEF NAME parameters COLON suite .)


state 79

    (9) varargslist -> varargslist COMMA . NAME

    NAME            shift and go to state 83


state 80

    (8) parameters -> LPAREN varargslist RPAREN .

    COLON           reduce using rule 8 (parameters -> LPAREN varargslist RPAREN .)


state 81

    (27) suite -> NEWLINE INDENT . stmts DEDENT
    (28) stmts -> . stmts stmt
    (29) stmts -> . stmt
    (11) stmt -> . simple_stmt
    (12) stmt -> . compound_stmt
    (13) simple_stmt -> . small_stmts NEWLINE
    (14) simple_stmt -> . small_stmts SEMI NEWLINE
    (23) compound_stmt -> . if_stmt
    (24) compound_stmt -> . funcdef
    (15) small_stmts -> . small_stmts SEMI small_stmt
    (16) small_stmts -> . small_stmt
    (25) if_stmt -> . IF test COLON suite
    (6) funcdef -> . DEF NAME parameters COLON suite
    (17) small_stmt -> . flow_stmt
    (18) small_stmt -> . expr_stmt
    (21) flow_stmt -> . return_stmt
    (19) expr_stmt -> . testlist EQUAL testlist
    (20) expr_stmt -> . testlist
    (22) return_stmt -> . RETURN testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    IF              shift and go to state 12
    DEF             shift and go to state 6
    RETURN          shift and go to state 4
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 7
    comparison                     shift and go to state 25
    expr_stmt                      shift and go to state 23
    if_stmt                        shift and go to state 26
    small_stmt                     shift and go to state 2
    stmts                          shift and go to state 84
    testlist                       shift and go to state 17
    stmt                           shift and go to state 85
    testlist_multi                 shift and go to state 20
    simple_stmt                    shift and go to state 16
    power                          shift and go to state 15
    test                           shift and go to state 11
    return_stmt                    shift and go to state 3
    atom                           shift and go to state 21
    funcdef                        shift and go to state 22
    compound_stmt                  shift and go to state 13
    small_stmts                    shift and go to state 28

state 82

    (52) arglist -> arglist COMMA argument .

    RPAREN          reduce using rule 52 (arglist -> arglist COMMA argument .)
    COMMA           reduce using rule 52 (arglist -> arglist COMMA argument .)


state 83

    (9) varargslist -> varargslist COMMA NAME .

    RPAREN          reduce using rule 9 (varargslist -> varargslist COMMA NAME .)
    COMMA           reduce using rule 9 (varargslist -> varargslist COMMA NAME .)


state 84

    (27) suite -> NEWLINE INDENT stmts . DEDENT
    (28) stmts -> stmts . stmt
    (11) stmt -> . simple_stmt
    (12) stmt -> . compound_stmt
    (13) simple_stmt -> . small_stmts NEWLINE
    (14) simple_stmt -> . small_stmts SEMI NEWLINE
    (23) compound_stmt -> . if_stmt
    (24) compound_stmt -> . funcdef
    (15) small_stmts -> . small_stmts SEMI small_stmt
    (16) small_stmts -> . small_stmt
    (25) if_stmt -> . IF test COLON suite
    (6) funcdef -> . DEF NAME parameters COLON suite
    (17) small_stmt -> . flow_stmt
    (18) small_stmt -> . expr_stmt
    (21) flow_stmt -> . return_stmt
    (19) expr_stmt -> . testlist EQUAL testlist
    (20) expr_stmt -> . testlist
    (22) return_stmt -> . RETURN testlist
    (47) testlist -> . testlist_multi COMMA
    (48) testlist -> . testlist_multi
    (49) testlist_multi -> . testlist_multi COMMA test
    (50) testlist_multi -> . test
    (51) test -> . comparison
    (30) comparison -> . comparison PLUS comparison
    (31) comparison -> . comparison MINUS comparison
    (32) comparison -> . comparison STAR comparison
    (33) comparison -> . comparison SLASH comparison
    (34) comparison -> . comparison LESS comparison
    (35) comparison -> . comparison EQEQUAL comparison
    (36) comparison -> . comparison GREATER comparison
    (37) comparison -> . PLUS comparison
    (38) comparison -> . MINUS comparison
    (39) comparison -> . power
    (40) power -> . atom
    (41) power -> . atom trailer
    (42) atom -> . NAME
    (43) atom -> . NUMBER
    (44) atom -> . STRING
    (45) atom -> . LPAREN testlist RPAREN

    DEDENT          shift and go to state 86
    IF              shift and go to state 12
    DEF             shift and go to state 6
    RETURN          shift and go to state 4
    PLUS            shift and go to state 9
    MINUS           shift and go to state 5
    NAME            shift and go to state 24
    NUMBER          shift and go to state 19
    STRING          shift and go to state 14
    LPAREN          shift and go to state 1

    flow_stmt                      shift and go to state 7
    comparison                     shift and go to state 25
    expr_stmt                      shift and go to state 23
    if_stmt                        shift and go to state 26
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 17
    stmt                           shift and go to state 87
    testlist_multi                 shift and go to state 20
    simple_stmt                    shift and go to state 16
    power                          shift and go to state 15
    test                           shift and go to state 11
    return_stmt                    shift and go to state 3
    atom                           shift and go to state 21
    funcdef                        shift and go to state 22
    compound_stmt                  shift and go to state 13
    small_stmts                    shift and go to state 28

state 85

    (29) stmts -> stmt .

    DEDENT          reduce using rule 29 (stmts -> stmt .)
    IF              reduce using rule 29 (stmts -> stmt .)
    DEF             reduce using rule 29 (stmts -> stmt .)
    RETURN          reduce using rule 29 (stmts -> stmt .)
    PLUS            reduce using rule 29 (stmts -> stmt .)
    MINUS           reduce using rule 29 (stmts -> stmt .)
    NAME            reduce using rule 29 (stmts -> stmt .)
    NUMBER          reduce using rule 29 (stmts -> stmt .)
    STRING          reduce using rule 29 (stmts -> stmt .)
    LPAREN          reduce using rule 29 (stmts -> stmt .)


state 86

    (27) suite -> NEWLINE INDENT stmts DEDENT .

    ENDMARKER       reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAREN          reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 27 (suite -> NEWLINE INDENT stmts DEDENT .)


state 87

    (28) stmts -> stmts stmt .

    DEDENT          reduce using rule 28 (stmts -> stmts stmt .)
    IF              reduce using rule 28 (stmts -> stmts stmt .)
    DEF             reduce using rule 28 (stmts -> stmts stmt .)
    RETURN          reduce using rule 28 (stmts -> stmts stmt .)
    PLUS            reduce using rule 28 (stmts -> stmts stmt .)
    MINUS           reduce using rule 28 (stmts -> stmts stmt .)
    NAME            reduce using rule 28 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 28 (stmts -> stmts stmt .)
    STRING          reduce using rule 28 (stmts -> stmts stmt .)
    LPAREN          reduce using rule 28 (stmts -> stmts stmt .)

