Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    NOTEQUAL
    CIRCUMFLEX
    WS
    BACKQUOTE
    WITH
    EXCEPT
    SLASHSLASH
    RBRACE
    EXEC
    AMPER
    OR
    DEL
    BINARYNUMBER
    TRIPLESTRING
    TRY
    RAWSTRING
    AND
    LBRACE
    INUMBER
    AS
    LEFTSHIFT
    CONTINUE
    NOT
    LAMBDA
    RAISE
    VBAR
    DOT
    TILDE
    RSQB
    PERCENT
    LESSEQUAL
    LSQB
    FNUMBER
    HEXADECIMALNUMBER
    OCTALNUMBER
    BREAK
    STARSTAR
    GREATEREQUAL
    CLASS
    RIGHTSHIFT
    IS
    YIELD
    FINALLY
    AT
    UNICODESTRING
    FROM

Grammar

Rule 0     S' -> file_input
Rule 1     file_input -> single_stmt ENDMARKER
Rule 2     single_stmt -> single_stmt NEWLINE
Rule 3     single_stmt -> single_stmt stmt
Rule 4     single_stmt -> <empty>
Rule 5     funcdef -> DEF NAME parameters COLON suite
Rule 6     parameters -> LPAREN RPAREN
Rule 7     parameters -> LPAREN varargslist RPAREN
Rule 8     varargslist -> <empty>
Rule 9     varargslist -> fpdef EQUAL test fpdeflist COMMA
Rule 10    varargslist -> fpdef EQUAL test fpdeflist
Rule 11    varargslist -> fpdef fpdeflist COMMA
Rule 12    varargslist -> fpdef fpdeflist
Rule 13    fpdeflist -> <empty>
Rule 14    fpdeflist -> fpdeflist COMMA fpdef
Rule 15    fpdeflist -> fpdeflist COMMA fpdef EQUAL test
Rule 16    fpdef -> NAME
Rule 17    fpdef -> LPAREN fplist RPAREN
Rule 18    fplist -> fpdef fplist1 COMMA
Rule 19    fplist -> fpdef fplist1
Rule 20    fplist1 -> <empty>
Rule 21    fplist1 -> fplist1 COMMA fpdef
Rule 22    stmt -> simple_stmt
Rule 23    stmt -> compound_stmt
Rule 24    simple_stmt -> small_stmts NEWLINE
Rule 25    simple_stmt -> small_stmts SEMI NEWLINE
Rule 26    small_stmts -> small_stmts SEMI small_stmt
Rule 27    small_stmts -> small_stmt
Rule 28    small_stmt -> flow_stmt
Rule 29    small_stmt -> expr_stmt
Rule 30    small_stmt -> print_stmt
Rule 31    small_stmt -> pass_stmt
Rule 32    small_stmt -> import_stmt
Rule 33    small_stmt -> global_stmt
Rule 34    small_stmt -> assert_stmt
Rule 35    expr_stmt -> testlist augassign testlist
Rule 36    expr_stmt -> testlist eqtestlist
Rule 37    eqtestlist -> <empty>
Rule 38    eqtestlist -> eqtestlist EQUAL testlist
Rule 39    augassign -> PLUSEQUAL
Rule 40    augassign -> MINEQUAL
Rule 41    augassign -> STAREQUAL
Rule 42    augassign -> SLASHEQUAL
Rule 43    augassign -> PERCENTEQUAL
Rule 44    augassign -> STARSTAREQUAL
Rule 45    augassign -> SLASHSLASHEQUAL
Rule 46    print_stmt -> PRINT
Rule 47    print_stmt -> PRINT testlist
Rule 48    global_stmt -> GLOBAL testlist
Rule 49    assert_stmt -> ASSERT testlist
Rule 50    flow_stmt -> return_stmt
Rule 51    return_stmt -> RETURN testlist
Rule 52    pass_stmt -> PASS
Rule 53    import_stmt -> IMPORT NAME
Rule 54    compound_stmt -> if_stmt
Rule 55    compound_stmt -> for_stmt
Rule 56    compound_stmt -> while_stmt
Rule 57    compound_stmt -> funcdef
Rule 58    if_stmt -> IF test COLON suite elif_expr
Rule 59    if_stmt -> IF test COLON suite elif_expr ELSE COLON suite
Rule 60    elif_expr -> <empty>
Rule 61    elif_expr -> ELIF test COLON suite elif_expr
Rule 62    for_stmt -> FOR NAME IN test COLON suite
Rule 63    while_stmt -> WHILE test COLON suite
Rule 64    while_stmt -> WHILE test COLON suite ELSE COLON suite
Rule 65    suite -> simple_stmt
Rule 66    suite -> NEWLINE INDENT stmts DEDENT
Rule 67    stmts -> stmts stmt
Rule 68    stmts -> stmt
Rule 69    comparison -> comparison PLUS comparison
Rule 70    comparison -> comparison MINUS comparison
Rule 71    comparison -> comparison STAR comparison
Rule 72    comparison -> comparison SLASH comparison
Rule 73    comparison -> comparison LESS comparison
Rule 74    comparison -> comparison EQEQUAL comparison
Rule 75    comparison -> comparison GREATER comparison
Rule 76    comparison -> PLUS comparison
Rule 77    comparison -> MINUS comparison
Rule 78    comparison -> power
Rule 79    power -> atom
Rule 80    power -> atom trailer
Rule 81    atom -> NAME
Rule 82    atom -> NUMBER
Rule 83    atom -> STRING
Rule 84    atom -> LPAREN testlist RPAREN
Rule 85    trailer -> LPAREN arglist RPAREN
Rule 86    testlist -> testlist_multi COMMA
Rule 87    testlist -> testlist_multi
Rule 88    testlist_multi -> testlist_multi COMMA test
Rule 89    testlist_multi -> test
Rule 90    test -> comparison
Rule 91    arglist -> arglist COMMA argument
Rule 92    arglist -> argument
Rule 93    argument -> test

Terminals, with rules where they appear

AMPER                : 
AND                  : 
AS                   : 
ASSERT               : 49
AT                   : 
BACKQUOTE            : 
BINARYNUMBER         : 
BREAK                : 
CIRCUMFLEX           : 
CLASS                : 
COLON                : 5 58 59 59 61 62 63 64 64
COMMA                : 9 11 14 15 18 21 86 88 91
CONTINUE             : 
DEDENT               : 66
DEF                  : 5
DEL                  : 
DOT                  : 
ELIF                 : 61
ELSE                 : 59 64
ENDMARKER            : 1
EQEQUAL              : 74
EQUAL                : 9 10 15 38
EXCEPT               : 
EXEC                 : 
FINALLY              : 
FNUMBER              : 
FOR                  : 62
FROM                 : 
GLOBAL               : 48
GREATER              : 75
GREATEREQUAL         : 
HEXADECIMALNUMBER    : 
IF                   : 58 59
IMPORT               : 53
IN                   : 62
INDENT               : 66
INUMBER              : 
IS                   : 
LAMBDA               : 
LBRACE               : 
LEFTSHIFT            : 
LESS                 : 73
LESSEQUAL            : 
LPAREN               : 6 7 17 84 85
LSQB                 : 
MINEQUAL             : 40
MINUS                : 70 77
NAME                 : 5 16 53 62 81
NEWLINE              : 2 24 25 66
NOT                  : 
NOTEQUAL             : 
NUMBER               : 82
OCTALNUMBER          : 
OR                   : 
PASS                 : 52
PERCENT              : 
PERCENTEQUAL         : 43
PLUS                 : 69 76
PLUSEQUAL            : 39
PRINT                : 46 47
RAISE                : 
RAWSTRING            : 
RBRACE               : 
RETURN               : 51
RIGHTSHIFT           : 
RPAREN               : 6 7 17 84 85
RSQB                 : 
SEMI                 : 25 26
SLASH                : 72
SLASHEQUAL           : 42
SLASHSLASH           : 
SLASHSLASHEQUAL      : 45
STAR                 : 71
STAREQUAL            : 41
STARSTAR             : 
STARSTAREQUAL        : 44
STRING               : 83
TILDE                : 
TRIPLESTRING         : 
TRY                  : 
UNICODESTRING        : 
VBAR                 : 
WHILE                : 63 64
WITH                 : 
WS                   : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arglist              : 85 91
argument             : 91 92
assert_stmt          : 34
atom                 : 79 80
augassign            : 35
comparison           : 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 77 90
compound_stmt        : 23
elif_expr            : 58 59 61
eqtestlist           : 36 38
expr_stmt            : 29
file_input           : 0
flow_stmt            : 28
for_stmt             : 55
fpdef                : 9 10 11 12 14 15 18 19 21
fpdeflist            : 9 10 11 12 14 15
fplist               : 17
fplist1              : 18 19 21
funcdef              : 57
global_stmt          : 33
if_stmt              : 54
import_stmt          : 32
parameters           : 5
pass_stmt            : 31
power                : 78
print_stmt           : 30
return_stmt          : 50
simple_stmt          : 22 65
single_stmt          : 1 2 3
small_stmt           : 26 27
small_stmts          : 24 25 26
stmt                 : 3 67 68
stmts                : 66 67
suite                : 5 58 59 59 61 62 63 64 64
test                 : 9 10 15 58 59 61 62 63 64 88 89 93
testlist             : 35 35 36 38 47 48 49 51 84
testlist_multi       : 86 87 88
trailer              : 80
varargslist          : 7
while_stmt           : 56

Parsing method: LALR

state 0

    (0) S' -> . file_input
    (1) file_input -> . single_stmt ENDMARKER
    (2) single_stmt -> . single_stmt NEWLINE
    (3) single_stmt -> . single_stmt stmt
    (4) single_stmt -> .

    ENDMARKER       reduce using rule 4 (single_stmt -> .)
    NEWLINE         reduce using rule 4 (single_stmt -> .)
    IF              reduce using rule 4 (single_stmt -> .)
    FOR             reduce using rule 4 (single_stmt -> .)
    WHILE           reduce using rule 4 (single_stmt -> .)
    DEF             reduce using rule 4 (single_stmt -> .)
    PRINT           reduce using rule 4 (single_stmt -> .)
    PASS            reduce using rule 4 (single_stmt -> .)
    IMPORT          reduce using rule 4 (single_stmt -> .)
    GLOBAL          reduce using rule 4 (single_stmt -> .)
    ASSERT          reduce using rule 4 (single_stmt -> .)
    RETURN          reduce using rule 4 (single_stmt -> .)
    PLUS            reduce using rule 4 (single_stmt -> .)
    MINUS           reduce using rule 4 (single_stmt -> .)
    NAME            reduce using rule 4 (single_stmt -> .)
    NUMBER          reduce using rule 4 (single_stmt -> .)
    STRING          reduce using rule 4 (single_stmt -> .)
    LPAREN          reduce using rule 4 (single_stmt -> .)

    file_input                     shift and go to state 1
    single_stmt                    shift and go to state 2

state 1

    (0) S' -> file_input .



state 2

    (1) file_input -> single_stmt . ENDMARKER
    (2) single_stmt -> single_stmt . NEWLINE
    (3) single_stmt -> single_stmt . stmt
    (22) stmt -> . simple_stmt
    (23) stmt -> . compound_stmt
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (54) compound_stmt -> . if_stmt
    (55) compound_stmt -> . for_stmt
    (56) compound_stmt -> . while_stmt
    (57) compound_stmt -> . funcdef
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (58) if_stmt -> . IF test COLON suite elif_expr
    (59) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (62) for_stmt -> . FOR NAME IN test COLON suite
    (63) while_stmt -> . WHILE test COLON suite
    (64) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (5) funcdef -> . DEF NAME parameters COLON suite
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    ENDMARKER       shift and go to state 3
    NEWLINE         shift and go to state 20
    IF              shift and go to state 25
    FOR             shift and go to state 29
    WHILE           shift and go to state 8
    DEF             shift and go to state 15
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    atom                           shift and go to state 19
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    compound_stmt                  shift and go to state 26
    power                          shift and go to state 22
    simple_stmt                    shift and go to state 31
    testlist                       shift and go to state 32
    stmt                           shift and go to state 33
    assert_stmt                    shift and go to state 34
    for_stmt                       shift and go to state 35
    testlist_multi                 shift and go to state 36
    funcdef                        shift and go to state 37
    import_stmt                    shift and go to state 17
    if_stmt                        shift and go to state 41
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    while_stmt                     shift and go to state 42
    small_stmts                    shift and go to state 43

state 3

    (1) file_input -> single_stmt ENDMARKER .

    $end            reduce using rule 1 (file_input -> single_stmt ENDMARKER .)


state 4

    (84) atom -> LPAREN . testlist RPAREN
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    testlist                       shift and go to state 44
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    test                           shift and go to state 24

state 5

    (27) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 27 (small_stmts -> small_stmt .)
    SEMI            reduce using rule 27 (small_stmts -> small_stmt .)


state 6

    (82) atom -> NUMBER .

    LPAREN          reduce using rule 82 (atom -> NUMBER .)
    PLUS            reduce using rule 82 (atom -> NUMBER .)
    MINUS           reduce using rule 82 (atom -> NUMBER .)
    STAR            reduce using rule 82 (atom -> NUMBER .)
    SLASH           reduce using rule 82 (atom -> NUMBER .)
    LESS            reduce using rule 82 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 82 (atom -> NUMBER .)
    GREATER         reduce using rule 82 (atom -> NUMBER .)
    COMMA           reduce using rule 82 (atom -> NUMBER .)
    PLUSEQUAL       reduce using rule 82 (atom -> NUMBER .)
    MINEQUAL        reduce using rule 82 (atom -> NUMBER .)
    STAREQUAL       reduce using rule 82 (atom -> NUMBER .)
    SLASHEQUAL      reduce using rule 82 (atom -> NUMBER .)
    PERCENTEQUAL    reduce using rule 82 (atom -> NUMBER .)
    STARSTAREQUAL   reduce using rule 82 (atom -> NUMBER .)
    SLASHSLASHEQUAL reduce using rule 82 (atom -> NUMBER .)
    EQUAL           reduce using rule 82 (atom -> NUMBER .)
    NEWLINE         reduce using rule 82 (atom -> NUMBER .)
    SEMI            reduce using rule 82 (atom -> NUMBER .)
    RPAREN          reduce using rule 82 (atom -> NUMBER .)
    COLON           reduce using rule 82 (atom -> NUMBER .)


state 7

    (49) assert_stmt -> ASSERT . testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    testlist                       shift and go to state 45
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    test                           shift and go to state 24

state 8

    (63) while_stmt -> WHILE . test COLON suite
    (64) while_stmt -> WHILE . test COLON suite ELSE COLON suite
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    atom                           shift and go to state 19
    test                           shift and go to state 46

state 9

    (50) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 50 (flow_stmt -> return_stmt .)
    SEMI            reduce using rule 50 (flow_stmt -> return_stmt .)


state 10

    (53) import_stmt -> IMPORT . NAME

    NAME            shift and go to state 47


state 11

    (46) print_stmt -> PRINT .
    (47) print_stmt -> PRINT . testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         reduce using rule 46 (print_stmt -> PRINT .)
    SEMI            reduce using rule 46 (print_stmt -> PRINT .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    testlist                       shift and go to state 48
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    test                           shift and go to state 24

state 12

    (51) return_stmt -> RETURN . testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    testlist                       shift and go to state 49
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    test                           shift and go to state 24

state 13

    (52) pass_stmt -> PASS .

    NEWLINE         reduce using rule 52 (pass_stmt -> PASS .)
    SEMI            reduce using rule 52 (pass_stmt -> PASS .)


state 14

    (77) comparison -> MINUS . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 50
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 15

    (5) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 51


state 16

    (28) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 28 (small_stmt -> flow_stmt .)
    SEMI            reduce using rule 28 (small_stmt -> flow_stmt .)


state 17

    (32) small_stmt -> import_stmt .

    NEWLINE         reduce using rule 32 (small_stmt -> import_stmt .)
    SEMI            reduce using rule 32 (small_stmt -> import_stmt .)


state 18

    (31) small_stmt -> pass_stmt .

    NEWLINE         reduce using rule 31 (small_stmt -> pass_stmt .)
    SEMI            reduce using rule 31 (small_stmt -> pass_stmt .)


state 19

    (79) power -> atom .
    (80) power -> atom . trailer
    (85) trailer -> . LPAREN arglist RPAREN

    PLUS            reduce using rule 79 (power -> atom .)
    MINUS           reduce using rule 79 (power -> atom .)
    STAR            reduce using rule 79 (power -> atom .)
    SLASH           reduce using rule 79 (power -> atom .)
    LESS            reduce using rule 79 (power -> atom .)
    EQEQUAL         reduce using rule 79 (power -> atom .)
    GREATER         reduce using rule 79 (power -> atom .)
    COMMA           reduce using rule 79 (power -> atom .)
    NEWLINE         reduce using rule 79 (power -> atom .)
    SEMI            reduce using rule 79 (power -> atom .)
    PLUSEQUAL       reduce using rule 79 (power -> atom .)
    MINEQUAL        reduce using rule 79 (power -> atom .)
    STAREQUAL       reduce using rule 79 (power -> atom .)
    SLASHEQUAL      reduce using rule 79 (power -> atom .)
    PERCENTEQUAL    reduce using rule 79 (power -> atom .)
    STARSTAREQUAL   reduce using rule 79 (power -> atom .)
    SLASHSLASHEQUAL reduce using rule 79 (power -> atom .)
    EQUAL           reduce using rule 79 (power -> atom .)
    RPAREN          reduce using rule 79 (power -> atom .)
    COLON           reduce using rule 79 (power -> atom .)
    LPAREN          shift and go to state 52

    trailer                        shift and go to state 53

state 20

    (2) single_stmt -> single_stmt NEWLINE .

    ENDMARKER       reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NEWLINE         reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    IF              reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    FOR             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    WHILE           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    DEF             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PRINT           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PASS            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    IMPORT          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    GLOBAL          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    ASSERT          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    RETURN          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PLUS            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    MINUS           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NAME            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NUMBER          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    STRING          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    LPAREN          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)


state 21

    (76) comparison -> PLUS . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 54
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 22

    (78) comparison -> power .

    PLUS            reduce using rule 78 (comparison -> power .)
    MINUS           reduce using rule 78 (comparison -> power .)
    STAR            reduce using rule 78 (comparison -> power .)
    SLASH           reduce using rule 78 (comparison -> power .)
    LESS            reduce using rule 78 (comparison -> power .)
    EQEQUAL         reduce using rule 78 (comparison -> power .)
    GREATER         reduce using rule 78 (comparison -> power .)
    COMMA           reduce using rule 78 (comparison -> power .)
    PLUSEQUAL       reduce using rule 78 (comparison -> power .)
    MINEQUAL        reduce using rule 78 (comparison -> power .)
    STAREQUAL       reduce using rule 78 (comparison -> power .)
    SLASHEQUAL      reduce using rule 78 (comparison -> power .)
    PERCENTEQUAL    reduce using rule 78 (comparison -> power .)
    STARSTAREQUAL   reduce using rule 78 (comparison -> power .)
    SLASHSLASHEQUAL reduce using rule 78 (comparison -> power .)
    EQUAL           reduce using rule 78 (comparison -> power .)
    NEWLINE         reduce using rule 78 (comparison -> power .)
    SEMI            reduce using rule 78 (comparison -> power .)
    RPAREN          reduce using rule 78 (comparison -> power .)
    COLON           reduce using rule 78 (comparison -> power .)


state 23

    (30) small_stmt -> print_stmt .

    NEWLINE         reduce using rule 30 (small_stmt -> print_stmt .)
    SEMI            reduce using rule 30 (small_stmt -> print_stmt .)


state 24

    (89) testlist_multi -> test .

    COMMA           reduce using rule 89 (testlist_multi -> test .)
    PLUSEQUAL       reduce using rule 89 (testlist_multi -> test .)
    MINEQUAL        reduce using rule 89 (testlist_multi -> test .)
    STAREQUAL       reduce using rule 89 (testlist_multi -> test .)
    SLASHEQUAL      reduce using rule 89 (testlist_multi -> test .)
    PERCENTEQUAL    reduce using rule 89 (testlist_multi -> test .)
    STARSTAREQUAL   reduce using rule 89 (testlist_multi -> test .)
    SLASHSLASHEQUAL reduce using rule 89 (testlist_multi -> test .)
    EQUAL           reduce using rule 89 (testlist_multi -> test .)
    NEWLINE         reduce using rule 89 (testlist_multi -> test .)
    SEMI            reduce using rule 89 (testlist_multi -> test .)
    RPAREN          reduce using rule 89 (testlist_multi -> test .)


state 25

    (58) if_stmt -> IF . test COLON suite elif_expr
    (59) if_stmt -> IF . test COLON suite elif_expr ELSE COLON suite
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    atom                           shift and go to state 19
    test                           shift and go to state 55

state 26

    (23) stmt -> compound_stmt .

    DEDENT          reduce using rule 23 (stmt -> compound_stmt .)
    IF              reduce using rule 23 (stmt -> compound_stmt .)
    FOR             reduce using rule 23 (stmt -> compound_stmt .)
    WHILE           reduce using rule 23 (stmt -> compound_stmt .)
    DEF             reduce using rule 23 (stmt -> compound_stmt .)
    PRINT           reduce using rule 23 (stmt -> compound_stmt .)
    PASS            reduce using rule 23 (stmt -> compound_stmt .)
    IMPORT          reduce using rule 23 (stmt -> compound_stmt .)
    GLOBAL          reduce using rule 23 (stmt -> compound_stmt .)
    ASSERT          reduce using rule 23 (stmt -> compound_stmt .)
    RETURN          reduce using rule 23 (stmt -> compound_stmt .)
    PLUS            reduce using rule 23 (stmt -> compound_stmt .)
    MINUS           reduce using rule 23 (stmt -> compound_stmt .)
    NAME            reduce using rule 23 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 23 (stmt -> compound_stmt .)
    STRING          reduce using rule 23 (stmt -> compound_stmt .)
    LPAREN          reduce using rule 23 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 23 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 23 (stmt -> compound_stmt .)


state 27

    (48) global_stmt -> GLOBAL . testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    testlist                       shift and go to state 56
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    test                           shift and go to state 24

state 28

    (83) atom -> STRING .

    LPAREN          reduce using rule 83 (atom -> STRING .)
    PLUS            reduce using rule 83 (atom -> STRING .)
    MINUS           reduce using rule 83 (atom -> STRING .)
    STAR            reduce using rule 83 (atom -> STRING .)
    SLASH           reduce using rule 83 (atom -> STRING .)
    LESS            reduce using rule 83 (atom -> STRING .)
    EQEQUAL         reduce using rule 83 (atom -> STRING .)
    GREATER         reduce using rule 83 (atom -> STRING .)
    COMMA           reduce using rule 83 (atom -> STRING .)
    PLUSEQUAL       reduce using rule 83 (atom -> STRING .)
    MINEQUAL        reduce using rule 83 (atom -> STRING .)
    STAREQUAL       reduce using rule 83 (atom -> STRING .)
    SLASHEQUAL      reduce using rule 83 (atom -> STRING .)
    PERCENTEQUAL    reduce using rule 83 (atom -> STRING .)
    STARSTAREQUAL   reduce using rule 83 (atom -> STRING .)
    SLASHSLASHEQUAL reduce using rule 83 (atom -> STRING .)
    EQUAL           reduce using rule 83 (atom -> STRING .)
    NEWLINE         reduce using rule 83 (atom -> STRING .)
    SEMI            reduce using rule 83 (atom -> STRING .)
    RPAREN          reduce using rule 83 (atom -> STRING .)
    COLON           reduce using rule 83 (atom -> STRING .)


state 29

    (62) for_stmt -> FOR . NAME IN test COLON suite

    NAME            shift and go to state 57


state 30

    (90) test -> comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

    COMMA           reduce using rule 90 (test -> comparison .)
    PLUSEQUAL       reduce using rule 90 (test -> comparison .)
    MINEQUAL        reduce using rule 90 (test -> comparison .)
    STAREQUAL       reduce using rule 90 (test -> comparison .)
    SLASHEQUAL      reduce using rule 90 (test -> comparison .)
    PERCENTEQUAL    reduce using rule 90 (test -> comparison .)
    STARSTAREQUAL   reduce using rule 90 (test -> comparison .)
    SLASHSLASHEQUAL reduce using rule 90 (test -> comparison .)
    EQUAL           reduce using rule 90 (test -> comparison .)
    NEWLINE         reduce using rule 90 (test -> comparison .)
    SEMI            reduce using rule 90 (test -> comparison .)
    RPAREN          reduce using rule 90 (test -> comparison .)
    COLON           reduce using rule 90 (test -> comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59


state 31

    (22) stmt -> simple_stmt .

    DEDENT          reduce using rule 22 (stmt -> simple_stmt .)
    IF              reduce using rule 22 (stmt -> simple_stmt .)
    FOR             reduce using rule 22 (stmt -> simple_stmt .)
    WHILE           reduce using rule 22 (stmt -> simple_stmt .)
    DEF             reduce using rule 22 (stmt -> simple_stmt .)
    PRINT           reduce using rule 22 (stmt -> simple_stmt .)
    PASS            reduce using rule 22 (stmt -> simple_stmt .)
    IMPORT          reduce using rule 22 (stmt -> simple_stmt .)
    GLOBAL          reduce using rule 22 (stmt -> simple_stmt .)
    ASSERT          reduce using rule 22 (stmt -> simple_stmt .)
    RETURN          reduce using rule 22 (stmt -> simple_stmt .)
    PLUS            reduce using rule 22 (stmt -> simple_stmt .)
    MINUS           reduce using rule 22 (stmt -> simple_stmt .)
    NAME            reduce using rule 22 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 22 (stmt -> simple_stmt .)
    STRING          reduce using rule 22 (stmt -> simple_stmt .)
    LPAREN          reduce using rule 22 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 22 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 22 (stmt -> simple_stmt .)


state 32

    (35) expr_stmt -> testlist . augassign testlist
    (36) expr_stmt -> testlist . eqtestlist
    (39) augassign -> . PLUSEQUAL
    (40) augassign -> . MINEQUAL
    (41) augassign -> . STAREQUAL
    (42) augassign -> . SLASHEQUAL
    (43) augassign -> . PERCENTEQUAL
    (44) augassign -> . STARSTAREQUAL
    (45) augassign -> . SLASHSLASHEQUAL
    (37) eqtestlist -> .
    (38) eqtestlist -> . eqtestlist EQUAL testlist

    PLUSEQUAL       shift and go to state 70
    MINEQUAL        shift and go to state 67
    STAREQUAL       shift and go to state 65
    SLASHEQUAL      shift and go to state 66
    PERCENTEQUAL    shift and go to state 71
    STARSTAREQUAL   shift and go to state 68
    SLASHSLASHEQUAL shift and go to state 73
    EQUAL           reduce using rule 37 (eqtestlist -> .)
    NEWLINE         reduce using rule 37 (eqtestlist -> .)
    SEMI            reduce using rule 37 (eqtestlist -> .)

    eqtestlist                     shift and go to state 72
    augassign                      shift and go to state 69

state 33

    (3) single_stmt -> single_stmt stmt .

    ENDMARKER       reduce using rule 3 (single_stmt -> single_stmt stmt .)
    NEWLINE         reduce using rule 3 (single_stmt -> single_stmt stmt .)
    IF              reduce using rule 3 (single_stmt -> single_stmt stmt .)
    FOR             reduce using rule 3 (single_stmt -> single_stmt stmt .)
    WHILE           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    DEF             reduce using rule 3 (single_stmt -> single_stmt stmt .)
    PRINT           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    PASS            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    IMPORT          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    GLOBAL          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    ASSERT          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    RETURN          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    PLUS            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    MINUS           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    NAME            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    NUMBER          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    STRING          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    LPAREN          reduce using rule 3 (single_stmt -> single_stmt stmt .)


state 34

    (34) small_stmt -> assert_stmt .

    NEWLINE         reduce using rule 34 (small_stmt -> assert_stmt .)
    SEMI            reduce using rule 34 (small_stmt -> assert_stmt .)


state 35

    (55) compound_stmt -> for_stmt .

    DEDENT          reduce using rule 55 (compound_stmt -> for_stmt .)
    IF              reduce using rule 55 (compound_stmt -> for_stmt .)
    FOR             reduce using rule 55 (compound_stmt -> for_stmt .)
    WHILE           reduce using rule 55 (compound_stmt -> for_stmt .)
    DEF             reduce using rule 55 (compound_stmt -> for_stmt .)
    PRINT           reduce using rule 55 (compound_stmt -> for_stmt .)
    PASS            reduce using rule 55 (compound_stmt -> for_stmt .)
    IMPORT          reduce using rule 55 (compound_stmt -> for_stmt .)
    GLOBAL          reduce using rule 55 (compound_stmt -> for_stmt .)
    ASSERT          reduce using rule 55 (compound_stmt -> for_stmt .)
    RETURN          reduce using rule 55 (compound_stmt -> for_stmt .)
    PLUS            reduce using rule 55 (compound_stmt -> for_stmt .)
    MINUS           reduce using rule 55 (compound_stmt -> for_stmt .)
    NAME            reduce using rule 55 (compound_stmt -> for_stmt .)
    NUMBER          reduce using rule 55 (compound_stmt -> for_stmt .)
    STRING          reduce using rule 55 (compound_stmt -> for_stmt .)
    LPAREN          reduce using rule 55 (compound_stmt -> for_stmt .)
    ENDMARKER       reduce using rule 55 (compound_stmt -> for_stmt .)
    NEWLINE         reduce using rule 55 (compound_stmt -> for_stmt .)


state 36

    (86) testlist -> testlist_multi . COMMA
    (87) testlist -> testlist_multi .
    (88) testlist_multi -> testlist_multi . COMMA test

    COMMA           shift and go to state 74
    PLUSEQUAL       reduce using rule 87 (testlist -> testlist_multi .)
    MINEQUAL        reduce using rule 87 (testlist -> testlist_multi .)
    STAREQUAL       reduce using rule 87 (testlist -> testlist_multi .)
    SLASHEQUAL      reduce using rule 87 (testlist -> testlist_multi .)
    PERCENTEQUAL    reduce using rule 87 (testlist -> testlist_multi .)
    STARSTAREQUAL   reduce using rule 87 (testlist -> testlist_multi .)
    SLASHSLASHEQUAL reduce using rule 87 (testlist -> testlist_multi .)
    EQUAL           reduce using rule 87 (testlist -> testlist_multi .)
    NEWLINE         reduce using rule 87 (testlist -> testlist_multi .)
    SEMI            reduce using rule 87 (testlist -> testlist_multi .)
    RPAREN          reduce using rule 87 (testlist -> testlist_multi .)


state 37

    (57) compound_stmt -> funcdef .

    DEDENT          reduce using rule 57 (compound_stmt -> funcdef .)
    IF              reduce using rule 57 (compound_stmt -> funcdef .)
    FOR             reduce using rule 57 (compound_stmt -> funcdef .)
    WHILE           reduce using rule 57 (compound_stmt -> funcdef .)
    DEF             reduce using rule 57 (compound_stmt -> funcdef .)
    PRINT           reduce using rule 57 (compound_stmt -> funcdef .)
    PASS            reduce using rule 57 (compound_stmt -> funcdef .)
    IMPORT          reduce using rule 57 (compound_stmt -> funcdef .)
    GLOBAL          reduce using rule 57 (compound_stmt -> funcdef .)
    ASSERT          reduce using rule 57 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 57 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 57 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 57 (compound_stmt -> funcdef .)
    NAME            reduce using rule 57 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 57 (compound_stmt -> funcdef .)
    STRING          reduce using rule 57 (compound_stmt -> funcdef .)
    LPAREN          reduce using rule 57 (compound_stmt -> funcdef .)
    ENDMARKER       reduce using rule 57 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 57 (compound_stmt -> funcdef .)


state 38

    (29) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 29 (small_stmt -> expr_stmt .)
    SEMI            reduce using rule 29 (small_stmt -> expr_stmt .)


state 39

    (81) atom -> NAME .

    LPAREN          reduce using rule 81 (atom -> NAME .)
    PLUS            reduce using rule 81 (atom -> NAME .)
    MINUS           reduce using rule 81 (atom -> NAME .)
    STAR            reduce using rule 81 (atom -> NAME .)
    SLASH           reduce using rule 81 (atom -> NAME .)
    LESS            reduce using rule 81 (atom -> NAME .)
    EQEQUAL         reduce using rule 81 (atom -> NAME .)
    GREATER         reduce using rule 81 (atom -> NAME .)
    COMMA           reduce using rule 81 (atom -> NAME .)
    PLUSEQUAL       reduce using rule 81 (atom -> NAME .)
    MINEQUAL        reduce using rule 81 (atom -> NAME .)
    STAREQUAL       reduce using rule 81 (atom -> NAME .)
    SLASHEQUAL      reduce using rule 81 (atom -> NAME .)
    PERCENTEQUAL    reduce using rule 81 (atom -> NAME .)
    STARSTAREQUAL   reduce using rule 81 (atom -> NAME .)
    SLASHSLASHEQUAL reduce using rule 81 (atom -> NAME .)
    EQUAL           reduce using rule 81 (atom -> NAME .)
    NEWLINE         reduce using rule 81 (atom -> NAME .)
    SEMI            reduce using rule 81 (atom -> NAME .)
    RPAREN          reduce using rule 81 (atom -> NAME .)
    COLON           reduce using rule 81 (atom -> NAME .)


state 40

    (33) small_stmt -> global_stmt .

    NEWLINE         reduce using rule 33 (small_stmt -> global_stmt .)
    SEMI            reduce using rule 33 (small_stmt -> global_stmt .)


state 41

    (54) compound_stmt -> if_stmt .

    DEDENT          reduce using rule 54 (compound_stmt -> if_stmt .)
    IF              reduce using rule 54 (compound_stmt -> if_stmt .)
    FOR             reduce using rule 54 (compound_stmt -> if_stmt .)
    WHILE           reduce using rule 54 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 54 (compound_stmt -> if_stmt .)
    PRINT           reduce using rule 54 (compound_stmt -> if_stmt .)
    PASS            reduce using rule 54 (compound_stmt -> if_stmt .)
    IMPORT          reduce using rule 54 (compound_stmt -> if_stmt .)
    GLOBAL          reduce using rule 54 (compound_stmt -> if_stmt .)
    ASSERT          reduce using rule 54 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 54 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 54 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 54 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 54 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 54 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 54 (compound_stmt -> if_stmt .)
    LPAREN          reduce using rule 54 (compound_stmt -> if_stmt .)
    ENDMARKER       reduce using rule 54 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 54 (compound_stmt -> if_stmt .)


state 42

    (56) compound_stmt -> while_stmt .

    DEDENT          reduce using rule 56 (compound_stmt -> while_stmt .)
    IF              reduce using rule 56 (compound_stmt -> while_stmt .)
    FOR             reduce using rule 56 (compound_stmt -> while_stmt .)
    WHILE           reduce using rule 56 (compound_stmt -> while_stmt .)
    DEF             reduce using rule 56 (compound_stmt -> while_stmt .)
    PRINT           reduce using rule 56 (compound_stmt -> while_stmt .)
    PASS            reduce using rule 56 (compound_stmt -> while_stmt .)
    IMPORT          reduce using rule 56 (compound_stmt -> while_stmt .)
    GLOBAL          reduce using rule 56 (compound_stmt -> while_stmt .)
    ASSERT          reduce using rule 56 (compound_stmt -> while_stmt .)
    RETURN          reduce using rule 56 (compound_stmt -> while_stmt .)
    PLUS            reduce using rule 56 (compound_stmt -> while_stmt .)
    MINUS           reduce using rule 56 (compound_stmt -> while_stmt .)
    NAME            reduce using rule 56 (compound_stmt -> while_stmt .)
    NUMBER          reduce using rule 56 (compound_stmt -> while_stmt .)
    STRING          reduce using rule 56 (compound_stmt -> while_stmt .)
    LPAREN          reduce using rule 56 (compound_stmt -> while_stmt .)
    ENDMARKER       reduce using rule 56 (compound_stmt -> while_stmt .)
    NEWLINE         reduce using rule 56 (compound_stmt -> while_stmt .)


state 43

    (24) simple_stmt -> small_stmts . NEWLINE
    (25) simple_stmt -> small_stmts . SEMI NEWLINE
    (26) small_stmts -> small_stmts . SEMI small_stmt

    NEWLINE         shift and go to state 75
    SEMI            shift and go to state 76


state 44

    (84) atom -> LPAREN testlist . RPAREN

    RPAREN          shift and go to state 77


state 45

    (49) assert_stmt -> ASSERT testlist .

    NEWLINE         reduce using rule 49 (assert_stmt -> ASSERT testlist .)
    SEMI            reduce using rule 49 (assert_stmt -> ASSERT testlist .)


state 46

    (63) while_stmt -> WHILE test . COLON suite
    (64) while_stmt -> WHILE test . COLON suite ELSE COLON suite

    COLON           shift and go to state 78


state 47

    (53) import_stmt -> IMPORT NAME .

    NEWLINE         reduce using rule 53 (import_stmt -> IMPORT NAME .)
    SEMI            reduce using rule 53 (import_stmt -> IMPORT NAME .)


state 48

    (47) print_stmt -> PRINT testlist .

    NEWLINE         reduce using rule 47 (print_stmt -> PRINT testlist .)
    SEMI            reduce using rule 47 (print_stmt -> PRINT testlist .)


state 49

    (51) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 51 (return_stmt -> RETURN testlist .)
    SEMI            reduce using rule 51 (return_stmt -> RETURN testlist .)


state 50

    (77) comparison -> MINUS comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 77 (comparison -> MINUS comparison .)
    PLUSEQUAL       reduce using rule 77 (comparison -> MINUS comparison .)
    MINEQUAL        reduce using rule 77 (comparison -> MINUS comparison .)
    STAREQUAL       reduce using rule 77 (comparison -> MINUS comparison .)
    SLASHEQUAL      reduce using rule 77 (comparison -> MINUS comparison .)
    PERCENTEQUAL    reduce using rule 77 (comparison -> MINUS comparison .)
    STARSTAREQUAL   reduce using rule 77 (comparison -> MINUS comparison .)
    SLASHSLASHEQUAL reduce using rule 77 (comparison -> MINUS comparison .)
    EQUAL           reduce using rule 77 (comparison -> MINUS comparison .)
    NEWLINE         reduce using rule 77 (comparison -> MINUS comparison .)
    SEMI            reduce using rule 77 (comparison -> MINUS comparison .)
    RPAREN          reduce using rule 77 (comparison -> MINUS comparison .)
    COLON           reduce using rule 77 (comparison -> MINUS comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 77 (comparison -> MINUS comparison .) ]
  ! MINUS           [ reduce using rule 77 (comparison -> MINUS comparison .) ]
  ! STAR            [ reduce using rule 77 (comparison -> MINUS comparison .) ]
  ! SLASH           [ reduce using rule 77 (comparison -> MINUS comparison .) ]
  ! LESS            [ reduce using rule 77 (comparison -> MINUS comparison .) ]
  ! EQEQUAL         [ reduce using rule 77 (comparison -> MINUS comparison .) ]
  ! GREATER         [ reduce using rule 77 (comparison -> MINUS comparison .) ]


state 51

    (5) funcdef -> DEF NAME . parameters COLON suite
    (6) parameters -> . LPAREN RPAREN
    (7) parameters -> . LPAREN varargslist RPAREN

    LPAREN          shift and go to state 80

    parameters                     shift and go to state 79

state 52

    (85) trailer -> LPAREN . arglist RPAREN
    (91) arglist -> . arglist COMMA argument
    (92) arglist -> . argument
    (93) argument -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    argument                       shift and go to state 81
    atom                           shift and go to state 19
    test                           shift and go to state 82
    arglist                        shift and go to state 83

state 53

    (80) power -> atom trailer .

    PLUS            reduce using rule 80 (power -> atom trailer .)
    MINUS           reduce using rule 80 (power -> atom trailer .)
    STAR            reduce using rule 80 (power -> atom trailer .)
    SLASH           reduce using rule 80 (power -> atom trailer .)
    LESS            reduce using rule 80 (power -> atom trailer .)
    EQEQUAL         reduce using rule 80 (power -> atom trailer .)
    GREATER         reduce using rule 80 (power -> atom trailer .)
    COMMA           reduce using rule 80 (power -> atom trailer .)
    NEWLINE         reduce using rule 80 (power -> atom trailer .)
    SEMI            reduce using rule 80 (power -> atom trailer .)
    PLUSEQUAL       reduce using rule 80 (power -> atom trailer .)
    MINEQUAL        reduce using rule 80 (power -> atom trailer .)
    STAREQUAL       reduce using rule 80 (power -> atom trailer .)
    SLASHEQUAL      reduce using rule 80 (power -> atom trailer .)
    PERCENTEQUAL    reduce using rule 80 (power -> atom trailer .)
    STARSTAREQUAL   reduce using rule 80 (power -> atom trailer .)
    SLASHSLASHEQUAL reduce using rule 80 (power -> atom trailer .)
    EQUAL           reduce using rule 80 (power -> atom trailer .)
    RPAREN          reduce using rule 80 (power -> atom trailer .)
    COLON           reduce using rule 80 (power -> atom trailer .)


state 54

    (76) comparison -> PLUS comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 76 (comparison -> PLUS comparison .)
    PLUSEQUAL       reduce using rule 76 (comparison -> PLUS comparison .)
    MINEQUAL        reduce using rule 76 (comparison -> PLUS comparison .)
    STAREQUAL       reduce using rule 76 (comparison -> PLUS comparison .)
    SLASHEQUAL      reduce using rule 76 (comparison -> PLUS comparison .)
    PERCENTEQUAL    reduce using rule 76 (comparison -> PLUS comparison .)
    STARSTAREQUAL   reduce using rule 76 (comparison -> PLUS comparison .)
    SLASHSLASHEQUAL reduce using rule 76 (comparison -> PLUS comparison .)
    EQUAL           reduce using rule 76 (comparison -> PLUS comparison .)
    NEWLINE         reduce using rule 76 (comparison -> PLUS comparison .)
    SEMI            reduce using rule 76 (comparison -> PLUS comparison .)
    RPAREN          reduce using rule 76 (comparison -> PLUS comparison .)
    COLON           reduce using rule 76 (comparison -> PLUS comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 76 (comparison -> PLUS comparison .) ]
  ! MINUS           [ reduce using rule 76 (comparison -> PLUS comparison .) ]
  ! STAR            [ reduce using rule 76 (comparison -> PLUS comparison .) ]
  ! SLASH           [ reduce using rule 76 (comparison -> PLUS comparison .) ]
  ! LESS            [ reduce using rule 76 (comparison -> PLUS comparison .) ]
  ! EQEQUAL         [ reduce using rule 76 (comparison -> PLUS comparison .) ]
  ! GREATER         [ reduce using rule 76 (comparison -> PLUS comparison .) ]


state 55

    (58) if_stmt -> IF test . COLON suite elif_expr
    (59) if_stmt -> IF test . COLON suite elif_expr ELSE COLON suite

    COLON           shift and go to state 84


state 56

    (48) global_stmt -> GLOBAL testlist .

    NEWLINE         reduce using rule 48 (global_stmt -> GLOBAL testlist .)
    SEMI            reduce using rule 48 (global_stmt -> GLOBAL testlist .)


state 57

    (62) for_stmt -> FOR NAME . IN test COLON suite

    IN              shift and go to state 85


state 58

    (71) comparison -> comparison STAR . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 86
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 59

    (75) comparison -> comparison GREATER . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 87
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 60

    (73) comparison -> comparison LESS . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 88
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 61

    (74) comparison -> comparison EQEQUAL . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 89
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 62

    (69) comparison -> comparison PLUS . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 90
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 63

    (72) comparison -> comparison SLASH . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 91
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 64

    (70) comparison -> comparison MINUS . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 92
    power                          shift and go to state 22
    atom                           shift and go to state 19

state 65

    (41) augassign -> STAREQUAL .

    PLUS            reduce using rule 41 (augassign -> STAREQUAL .)
    MINUS           reduce using rule 41 (augassign -> STAREQUAL .)
    NAME            reduce using rule 41 (augassign -> STAREQUAL .)
    NUMBER          reduce using rule 41 (augassign -> STAREQUAL .)
    STRING          reduce using rule 41 (augassign -> STAREQUAL .)
    LPAREN          reduce using rule 41 (augassign -> STAREQUAL .)


state 66

    (42) augassign -> SLASHEQUAL .

    PLUS            reduce using rule 42 (augassign -> SLASHEQUAL .)
    MINUS           reduce using rule 42 (augassign -> SLASHEQUAL .)
    NAME            reduce using rule 42 (augassign -> SLASHEQUAL .)
    NUMBER          reduce using rule 42 (augassign -> SLASHEQUAL .)
    STRING          reduce using rule 42 (augassign -> SLASHEQUAL .)
    LPAREN          reduce using rule 42 (augassign -> SLASHEQUAL .)


state 67

    (40) augassign -> MINEQUAL .

    PLUS            reduce using rule 40 (augassign -> MINEQUAL .)
    MINUS           reduce using rule 40 (augassign -> MINEQUAL .)
    NAME            reduce using rule 40 (augassign -> MINEQUAL .)
    NUMBER          reduce using rule 40 (augassign -> MINEQUAL .)
    STRING          reduce using rule 40 (augassign -> MINEQUAL .)
    LPAREN          reduce using rule 40 (augassign -> MINEQUAL .)


state 68

    (44) augassign -> STARSTAREQUAL .

    PLUS            reduce using rule 44 (augassign -> STARSTAREQUAL .)
    MINUS           reduce using rule 44 (augassign -> STARSTAREQUAL .)
    NAME            reduce using rule 44 (augassign -> STARSTAREQUAL .)
    NUMBER          reduce using rule 44 (augassign -> STARSTAREQUAL .)
    STRING          reduce using rule 44 (augassign -> STARSTAREQUAL .)
    LPAREN          reduce using rule 44 (augassign -> STARSTAREQUAL .)


state 69

    (35) expr_stmt -> testlist augassign . testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    testlist                       shift and go to state 93
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    test                           shift and go to state 24

state 70

    (39) augassign -> PLUSEQUAL .

    PLUS            reduce using rule 39 (augassign -> PLUSEQUAL .)
    MINUS           reduce using rule 39 (augassign -> PLUSEQUAL .)
    NAME            reduce using rule 39 (augassign -> PLUSEQUAL .)
    NUMBER          reduce using rule 39 (augassign -> PLUSEQUAL .)
    STRING          reduce using rule 39 (augassign -> PLUSEQUAL .)
    LPAREN          reduce using rule 39 (augassign -> PLUSEQUAL .)


state 71

    (43) augassign -> PERCENTEQUAL .

    PLUS            reduce using rule 43 (augassign -> PERCENTEQUAL .)
    MINUS           reduce using rule 43 (augassign -> PERCENTEQUAL .)
    NAME            reduce using rule 43 (augassign -> PERCENTEQUAL .)
    NUMBER          reduce using rule 43 (augassign -> PERCENTEQUAL .)
    STRING          reduce using rule 43 (augassign -> PERCENTEQUAL .)
    LPAREN          reduce using rule 43 (augassign -> PERCENTEQUAL .)


state 72

    (36) expr_stmt -> testlist eqtestlist .
    (38) eqtestlist -> eqtestlist . EQUAL testlist

    NEWLINE         reduce using rule 36 (expr_stmt -> testlist eqtestlist .)
    SEMI            reduce using rule 36 (expr_stmt -> testlist eqtestlist .)
    EQUAL           shift and go to state 94


state 73

    (45) augassign -> SLASHSLASHEQUAL .

    PLUS            reduce using rule 45 (augassign -> SLASHSLASHEQUAL .)
    MINUS           reduce using rule 45 (augassign -> SLASHSLASHEQUAL .)
    NAME            reduce using rule 45 (augassign -> SLASHSLASHEQUAL .)
    NUMBER          reduce using rule 45 (augassign -> SLASHSLASHEQUAL .)
    STRING          reduce using rule 45 (augassign -> SLASHSLASHEQUAL .)
    LPAREN          reduce using rule 45 (augassign -> SLASHSLASHEQUAL .)


state 74

    (86) testlist -> testlist_multi COMMA .
    (88) testlist_multi -> testlist_multi COMMA . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUSEQUAL       reduce using rule 86 (testlist -> testlist_multi COMMA .)
    MINEQUAL        reduce using rule 86 (testlist -> testlist_multi COMMA .)
    STAREQUAL       reduce using rule 86 (testlist -> testlist_multi COMMA .)
    SLASHEQUAL      reduce using rule 86 (testlist -> testlist_multi COMMA .)
    PERCENTEQUAL    reduce using rule 86 (testlist -> testlist_multi COMMA .)
    STARSTAREQUAL   reduce using rule 86 (testlist -> testlist_multi COMMA .)
    SLASHSLASHEQUAL reduce using rule 86 (testlist -> testlist_multi COMMA .)
    EQUAL           reduce using rule 86 (testlist -> testlist_multi COMMA .)
    NEWLINE         reduce using rule 86 (testlist -> testlist_multi COMMA .)
    SEMI            reduce using rule 86 (testlist -> testlist_multi COMMA .)
    RPAREN          reduce using rule 86 (testlist -> testlist_multi COMMA .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    atom                           shift and go to state 19
    test                           shift and go to state 95

state 75

    (24) simple_stmt -> small_stmts NEWLINE .

    DEDENT          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    FOR             reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    WHILE           reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    PRINT           reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    PASS            reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    IMPORT          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    GLOBAL          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    ASSERT          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    LPAREN          reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    ENDMARKER       reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    ELIF            reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)
    ELSE            reduce using rule 24 (simple_stmt -> small_stmts NEWLINE .)


state 76

    (25) simple_stmt -> small_stmts SEMI . NEWLINE
    (26) small_stmts -> small_stmts SEMI . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 97
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    flow_stmt                      shift and go to state 16
    comparison                     shift and go to state 30
    import_stmt                    shift and go to state 17
    pass_stmt                      shift and go to state 18
    power                          shift and go to state 22
    small_stmt                     shift and go to state 96
    testlist                       shift and go to state 32
    assert_stmt                    shift and go to state 34
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    return_stmt                    shift and go to state 9
    atom                           shift and go to state 19
    global_stmt                    shift and go to state 40
    expr_stmt                      shift and go to state 38
    testlist_multi                 shift and go to state 36

state 77

    (84) atom -> LPAREN testlist RPAREN .

    LPAREN          reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    PLUS            reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    MINUS           reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    STAR            reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    SLASH           reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    LESS            reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    EQEQUAL         reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    GREATER         reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    COMMA           reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    PLUSEQUAL       reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    MINEQUAL        reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    STAREQUAL       reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    SLASHEQUAL      reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    PERCENTEQUAL    reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    STARSTAREQUAL   reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    SLASHSLASHEQUAL reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    EQUAL           reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    NEWLINE         reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    SEMI            reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    RPAREN          reduce using rule 84 (atom -> LPAREN testlist RPAREN .)
    COLON           reduce using rule 84 (atom -> LPAREN testlist RPAREN .)


state 78

    (63) while_stmt -> WHILE test COLON . suite
    (64) while_stmt -> WHILE test COLON . suite ELSE COLON suite
    (65) suite -> . simple_stmt
    (66) suite -> . NEWLINE INDENT stmts DEDENT
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 98
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    power                          shift and go to state 22
    simple_stmt                    shift and go to state 99
    testlist                       shift and go to state 32
    small_stmts                    shift and go to state 43
    assert_stmt                    shift and go to state 34
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    import_stmt                    shift and go to state 17
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    suite                          shift and go to state 100

state 79

    (5) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 101


state 80

    (6) parameters -> LPAREN . RPAREN
    (7) parameters -> LPAREN . varargslist RPAREN
    (8) varargslist -> .
    (9) varargslist -> . fpdef EQUAL test fpdeflist COMMA
    (10) varargslist -> . fpdef EQUAL test fpdeflist
    (11) varargslist -> . fpdef fpdeflist COMMA
    (12) varargslist -> . fpdef fpdeflist
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 102
    NAME            shift and go to state 103
    LPAREN          shift and go to state 106

  ! RPAREN          [ reduce using rule 8 (varargslist -> .) ]

    fpdef                          shift and go to state 104
    varargslist                    shift and go to state 105

state 81

    (92) arglist -> argument .

    RPAREN          reduce using rule 92 (arglist -> argument .)
    COMMA           reduce using rule 92 (arglist -> argument .)


state 82

    (93) argument -> test .

    RPAREN          reduce using rule 93 (argument -> test .)
    COMMA           reduce using rule 93 (argument -> test .)


state 83

    (85) trailer -> LPAREN arglist . RPAREN
    (91) arglist -> arglist . COMMA argument

    RPAREN          shift and go to state 108
    COMMA           shift and go to state 107


state 84

    (58) if_stmt -> IF test COLON . suite elif_expr
    (59) if_stmt -> IF test COLON . suite elif_expr ELSE COLON suite
    (65) suite -> . simple_stmt
    (66) suite -> . NEWLINE INDENT stmts DEDENT
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 98
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    simple_stmt                    shift and go to state 99
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    power                          shift and go to state 22
    print_stmt                     shift and go to state 23
    testlist                       shift and go to state 32
    assert_stmt                    shift and go to state 34
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    import_stmt                    shift and go to state 17
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    suite                          shift and go to state 109
    small_stmts                    shift and go to state 43

state 85

    (62) for_stmt -> FOR NAME IN . test COLON suite
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    atom                           shift and go to state 19
    test                           shift and go to state 110

state 86

    (71) comparison -> comparison STAR comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 71 (comparison -> comparison STAR comparison .)
    PLUSEQUAL       reduce using rule 71 (comparison -> comparison STAR comparison .)
    MINEQUAL        reduce using rule 71 (comparison -> comparison STAR comparison .)
    STAREQUAL       reduce using rule 71 (comparison -> comparison STAR comparison .)
    SLASHEQUAL      reduce using rule 71 (comparison -> comparison STAR comparison .)
    PERCENTEQUAL    reduce using rule 71 (comparison -> comparison STAR comparison .)
    STARSTAREQUAL   reduce using rule 71 (comparison -> comparison STAR comparison .)
    SLASHSLASHEQUAL reduce using rule 71 (comparison -> comparison STAR comparison .)
    EQUAL           reduce using rule 71 (comparison -> comparison STAR comparison .)
    NEWLINE         reduce using rule 71 (comparison -> comparison STAR comparison .)
    SEMI            reduce using rule 71 (comparison -> comparison STAR comparison .)
    RPAREN          reduce using rule 71 (comparison -> comparison STAR comparison .)
    COLON           reduce using rule 71 (comparison -> comparison STAR comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 71 (comparison -> comparison STAR comparison .) ]
  ! MINUS           [ reduce using rule 71 (comparison -> comparison STAR comparison .) ]
  ! STAR            [ reduce using rule 71 (comparison -> comparison STAR comparison .) ]
  ! SLASH           [ reduce using rule 71 (comparison -> comparison STAR comparison .) ]
  ! LESS            [ reduce using rule 71 (comparison -> comparison STAR comparison .) ]
  ! EQEQUAL         [ reduce using rule 71 (comparison -> comparison STAR comparison .) ]
  ! GREATER         [ reduce using rule 71 (comparison -> comparison STAR comparison .) ]


state 87

    (75) comparison -> comparison GREATER comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 75 (comparison -> comparison GREATER comparison .)
    PLUSEQUAL       reduce using rule 75 (comparison -> comparison GREATER comparison .)
    MINEQUAL        reduce using rule 75 (comparison -> comparison GREATER comparison .)
    STAREQUAL       reduce using rule 75 (comparison -> comparison GREATER comparison .)
    SLASHEQUAL      reduce using rule 75 (comparison -> comparison GREATER comparison .)
    PERCENTEQUAL    reduce using rule 75 (comparison -> comparison GREATER comparison .)
    STARSTAREQUAL   reduce using rule 75 (comparison -> comparison GREATER comparison .)
    SLASHSLASHEQUAL reduce using rule 75 (comparison -> comparison GREATER comparison .)
    EQUAL           reduce using rule 75 (comparison -> comparison GREATER comparison .)
    NEWLINE         reduce using rule 75 (comparison -> comparison GREATER comparison .)
    SEMI            reduce using rule 75 (comparison -> comparison GREATER comparison .)
    RPAREN          reduce using rule 75 (comparison -> comparison GREATER comparison .)
    COLON           reduce using rule 75 (comparison -> comparison GREATER comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 75 (comparison -> comparison GREATER comparison .) ]
  ! MINUS           [ reduce using rule 75 (comparison -> comparison GREATER comparison .) ]
  ! STAR            [ reduce using rule 75 (comparison -> comparison GREATER comparison .) ]
  ! SLASH           [ reduce using rule 75 (comparison -> comparison GREATER comparison .) ]
  ! LESS            [ reduce using rule 75 (comparison -> comparison GREATER comparison .) ]
  ! EQEQUAL         [ reduce using rule 75 (comparison -> comparison GREATER comparison .) ]
  ! GREATER         [ reduce using rule 75 (comparison -> comparison GREATER comparison .) ]


state 88

    (73) comparison -> comparison LESS comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 73 (comparison -> comparison LESS comparison .)
    PLUSEQUAL       reduce using rule 73 (comparison -> comparison LESS comparison .)
    MINEQUAL        reduce using rule 73 (comparison -> comparison LESS comparison .)
    STAREQUAL       reduce using rule 73 (comparison -> comparison LESS comparison .)
    SLASHEQUAL      reduce using rule 73 (comparison -> comparison LESS comparison .)
    PERCENTEQUAL    reduce using rule 73 (comparison -> comparison LESS comparison .)
    STARSTAREQUAL   reduce using rule 73 (comparison -> comparison LESS comparison .)
    SLASHSLASHEQUAL reduce using rule 73 (comparison -> comparison LESS comparison .)
    EQUAL           reduce using rule 73 (comparison -> comparison LESS comparison .)
    NEWLINE         reduce using rule 73 (comparison -> comparison LESS comparison .)
    SEMI            reduce using rule 73 (comparison -> comparison LESS comparison .)
    RPAREN          reduce using rule 73 (comparison -> comparison LESS comparison .)
    COLON           reduce using rule 73 (comparison -> comparison LESS comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 73 (comparison -> comparison LESS comparison .) ]
  ! MINUS           [ reduce using rule 73 (comparison -> comparison LESS comparison .) ]
  ! STAR            [ reduce using rule 73 (comparison -> comparison LESS comparison .) ]
  ! SLASH           [ reduce using rule 73 (comparison -> comparison LESS comparison .) ]
  ! LESS            [ reduce using rule 73 (comparison -> comparison LESS comparison .) ]
  ! EQEQUAL         [ reduce using rule 73 (comparison -> comparison LESS comparison .) ]
  ! GREATER         [ reduce using rule 73 (comparison -> comparison LESS comparison .) ]


state 89

    (74) comparison -> comparison EQEQUAL comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    PLUSEQUAL       reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    MINEQUAL        reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    STAREQUAL       reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    SLASHEQUAL      reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    PERCENTEQUAL    reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    STARSTAREQUAL   reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    SLASHSLASHEQUAL reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    EQUAL           reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    NEWLINE         reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    SEMI            reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    RPAREN          reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    COLON           reduce using rule 74 (comparison -> comparison EQEQUAL comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 74 (comparison -> comparison EQEQUAL comparison .) ]
  ! MINUS           [ reduce using rule 74 (comparison -> comparison EQEQUAL comparison .) ]
  ! STAR            [ reduce using rule 74 (comparison -> comparison EQEQUAL comparison .) ]
  ! SLASH           [ reduce using rule 74 (comparison -> comparison EQEQUAL comparison .) ]
  ! LESS            [ reduce using rule 74 (comparison -> comparison EQEQUAL comparison .) ]
  ! EQEQUAL         [ reduce using rule 74 (comparison -> comparison EQEQUAL comparison .) ]
  ! GREATER         [ reduce using rule 74 (comparison -> comparison EQEQUAL comparison .) ]


state 90

    (69) comparison -> comparison PLUS comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 69 (comparison -> comparison PLUS comparison .)
    PLUSEQUAL       reduce using rule 69 (comparison -> comparison PLUS comparison .)
    MINEQUAL        reduce using rule 69 (comparison -> comparison PLUS comparison .)
    STAREQUAL       reduce using rule 69 (comparison -> comparison PLUS comparison .)
    SLASHEQUAL      reduce using rule 69 (comparison -> comparison PLUS comparison .)
    PERCENTEQUAL    reduce using rule 69 (comparison -> comparison PLUS comparison .)
    STARSTAREQUAL   reduce using rule 69 (comparison -> comparison PLUS comparison .)
    SLASHSLASHEQUAL reduce using rule 69 (comparison -> comparison PLUS comparison .)
    EQUAL           reduce using rule 69 (comparison -> comparison PLUS comparison .)
    NEWLINE         reduce using rule 69 (comparison -> comparison PLUS comparison .)
    SEMI            reduce using rule 69 (comparison -> comparison PLUS comparison .)
    RPAREN          reduce using rule 69 (comparison -> comparison PLUS comparison .)
    COLON           reduce using rule 69 (comparison -> comparison PLUS comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 69 (comparison -> comparison PLUS comparison .) ]
  ! MINUS           [ reduce using rule 69 (comparison -> comparison PLUS comparison .) ]
  ! STAR            [ reduce using rule 69 (comparison -> comparison PLUS comparison .) ]
  ! SLASH           [ reduce using rule 69 (comparison -> comparison PLUS comparison .) ]
  ! LESS            [ reduce using rule 69 (comparison -> comparison PLUS comparison .) ]
  ! EQEQUAL         [ reduce using rule 69 (comparison -> comparison PLUS comparison .) ]
  ! GREATER         [ reduce using rule 69 (comparison -> comparison PLUS comparison .) ]


state 91

    (72) comparison -> comparison SLASH comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 72 (comparison -> comparison SLASH comparison .)
    PLUSEQUAL       reduce using rule 72 (comparison -> comparison SLASH comparison .)
    MINEQUAL        reduce using rule 72 (comparison -> comparison SLASH comparison .)
    STAREQUAL       reduce using rule 72 (comparison -> comparison SLASH comparison .)
    SLASHEQUAL      reduce using rule 72 (comparison -> comparison SLASH comparison .)
    PERCENTEQUAL    reduce using rule 72 (comparison -> comparison SLASH comparison .)
    STARSTAREQUAL   reduce using rule 72 (comparison -> comparison SLASH comparison .)
    SLASHSLASHEQUAL reduce using rule 72 (comparison -> comparison SLASH comparison .)
    EQUAL           reduce using rule 72 (comparison -> comparison SLASH comparison .)
    NEWLINE         reduce using rule 72 (comparison -> comparison SLASH comparison .)
    SEMI            reduce using rule 72 (comparison -> comparison SLASH comparison .)
    RPAREN          reduce using rule 72 (comparison -> comparison SLASH comparison .)
    COLON           reduce using rule 72 (comparison -> comparison SLASH comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 72 (comparison -> comparison SLASH comparison .) ]
  ! MINUS           [ reduce using rule 72 (comparison -> comparison SLASH comparison .) ]
  ! STAR            [ reduce using rule 72 (comparison -> comparison SLASH comparison .) ]
  ! SLASH           [ reduce using rule 72 (comparison -> comparison SLASH comparison .) ]
  ! LESS            [ reduce using rule 72 (comparison -> comparison SLASH comparison .) ]
  ! EQEQUAL         [ reduce using rule 72 (comparison -> comparison SLASH comparison .) ]
  ! GREATER         [ reduce using rule 72 (comparison -> comparison SLASH comparison .) ]


state 92

    (70) comparison -> comparison MINUS comparison .
    (69) comparison -> comparison . PLUS comparison
    (70) comparison -> comparison . MINUS comparison
    (71) comparison -> comparison . STAR comparison
    (72) comparison -> comparison . SLASH comparison
    (73) comparison -> comparison . LESS comparison
    (74) comparison -> comparison . EQEQUAL comparison
    (75) comparison -> comparison . GREATER comparison

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
    COMMA           reduce using rule 70 (comparison -> comparison MINUS comparison .)
    PLUSEQUAL       reduce using rule 70 (comparison -> comparison MINUS comparison .)
    MINEQUAL        reduce using rule 70 (comparison -> comparison MINUS comparison .)
    STAREQUAL       reduce using rule 70 (comparison -> comparison MINUS comparison .)
    SLASHEQUAL      reduce using rule 70 (comparison -> comparison MINUS comparison .)
    PERCENTEQUAL    reduce using rule 70 (comparison -> comparison MINUS comparison .)
    STARSTAREQUAL   reduce using rule 70 (comparison -> comparison MINUS comparison .)
    SLASHSLASHEQUAL reduce using rule 70 (comparison -> comparison MINUS comparison .)
    EQUAL           reduce using rule 70 (comparison -> comparison MINUS comparison .)
    NEWLINE         reduce using rule 70 (comparison -> comparison MINUS comparison .)
    SEMI            reduce using rule 70 (comparison -> comparison MINUS comparison .)
    RPAREN          reduce using rule 70 (comparison -> comparison MINUS comparison .)
    COLON           reduce using rule 70 (comparison -> comparison MINUS comparison .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 64
    STAR            shift and go to state 58
    SLASH           shift and go to state 63
    LESS            shift and go to state 60
    EQEQUAL         shift and go to state 61
    GREATER         shift and go to state 59

  ! PLUS            [ reduce using rule 70 (comparison -> comparison MINUS comparison .) ]
  ! MINUS           [ reduce using rule 70 (comparison -> comparison MINUS comparison .) ]
  ! STAR            [ reduce using rule 70 (comparison -> comparison MINUS comparison .) ]
  ! SLASH           [ reduce using rule 70 (comparison -> comparison MINUS comparison .) ]
  ! LESS            [ reduce using rule 70 (comparison -> comparison MINUS comparison .) ]
  ! EQEQUAL         [ reduce using rule 70 (comparison -> comparison MINUS comparison .) ]
  ! GREATER         [ reduce using rule 70 (comparison -> comparison MINUS comparison .) ]


state 93

    (35) expr_stmt -> testlist augassign testlist .

    NEWLINE         reduce using rule 35 (expr_stmt -> testlist augassign testlist .)
    SEMI            reduce using rule 35 (expr_stmt -> testlist augassign testlist .)


state 94

    (38) eqtestlist -> eqtestlist EQUAL . testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    testlist                       shift and go to state 111
    test                           shift and go to state 24
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19

state 95

    (88) testlist_multi -> testlist_multi COMMA test .

    COMMA           reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    PLUSEQUAL       reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    MINEQUAL        reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    STAREQUAL       reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    SLASHEQUAL      reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    PERCENTEQUAL    reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    STARSTAREQUAL   reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    SLASHSLASHEQUAL reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    EQUAL           reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    NEWLINE         reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    SEMI            reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)
    RPAREN          reduce using rule 88 (testlist_multi -> testlist_multi COMMA test .)


state 96

    (26) small_stmts -> small_stmts SEMI small_stmt .

    NEWLINE         reduce using rule 26 (small_stmts -> small_stmts SEMI small_stmt .)
    SEMI            reduce using rule 26 (small_stmts -> small_stmts SEMI small_stmt .)


state 97

    (25) simple_stmt -> small_stmts SEMI NEWLINE .

    DEDENT          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IF              reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    FOR             reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    WHILE           reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEF             reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PRINT           reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PASS            reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IMPORT          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    GLOBAL          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ASSERT          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    RETURN          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PLUS            reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    MINUS           reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NAME            reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NUMBER          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    STRING          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    LPAREN          reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ENDMARKER       reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NEWLINE         reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELIF            reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELSE            reduce using rule 25 (simple_stmt -> small_stmts SEMI NEWLINE .)


state 98

    (66) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 112


state 99

    (65) suite -> simple_stmt .

    ENDMARKER       reduce using rule 65 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 65 (suite -> simple_stmt .)
    IF              reduce using rule 65 (suite -> simple_stmt .)
    FOR             reduce using rule 65 (suite -> simple_stmt .)
    WHILE           reduce using rule 65 (suite -> simple_stmt .)
    DEF             reduce using rule 65 (suite -> simple_stmt .)
    PRINT           reduce using rule 65 (suite -> simple_stmt .)
    PASS            reduce using rule 65 (suite -> simple_stmt .)
    IMPORT          reduce using rule 65 (suite -> simple_stmt .)
    GLOBAL          reduce using rule 65 (suite -> simple_stmt .)
    ASSERT          reduce using rule 65 (suite -> simple_stmt .)
    RETURN          reduce using rule 65 (suite -> simple_stmt .)
    PLUS            reduce using rule 65 (suite -> simple_stmt .)
    MINUS           reduce using rule 65 (suite -> simple_stmt .)
    NAME            reduce using rule 65 (suite -> simple_stmt .)
    NUMBER          reduce using rule 65 (suite -> simple_stmt .)
    STRING          reduce using rule 65 (suite -> simple_stmt .)
    LPAREN          reduce using rule 65 (suite -> simple_stmt .)
    DEDENT          reduce using rule 65 (suite -> simple_stmt .)
    ELIF            reduce using rule 65 (suite -> simple_stmt .)
    ELSE            reduce using rule 65 (suite -> simple_stmt .)


state 100

    (63) while_stmt -> WHILE test COLON suite .
    (64) while_stmt -> WHILE test COLON suite . ELSE COLON suite

    ENDMARKER       reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    NEWLINE         reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    IF              reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    FOR             reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    WHILE           reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    DEF             reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    PRINT           reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    PASS            reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    IMPORT          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    GLOBAL          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    ASSERT          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    RETURN          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    PLUS            reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    MINUS           reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    NAME            reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    NUMBER          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    STRING          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    LPAREN          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    DEDENT          reduce using rule 63 (while_stmt -> WHILE test COLON suite .)
    ELSE            shift and go to state 113


state 101

    (5) funcdef -> DEF NAME parameters COLON . suite
    (65) suite -> . simple_stmt
    (66) suite -> . NEWLINE INDENT stmts DEDENT
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 98
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    import_stmt                    shift and go to state 17
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    power                          shift and go to state 22
    simple_stmt                    shift and go to state 99
    testlist                       shift and go to state 32
    assert_stmt                    shift and go to state 34
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    expr_stmt                      shift and go to state 38
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    suite                          shift and go to state 114
    small_stmts                    shift and go to state 43

state 102

    (6) parameters -> LPAREN RPAREN .

    COLON           reduce using rule 6 (parameters -> LPAREN RPAREN .)


state 103

    (16) fpdef -> NAME .

    EQUAL           reduce using rule 16 (fpdef -> NAME .)
    COMMA           reduce using rule 16 (fpdef -> NAME .)
    RPAREN          reduce using rule 16 (fpdef -> NAME .)


state 104

    (9) varargslist -> fpdef . EQUAL test fpdeflist COMMA
    (10) varargslist -> fpdef . EQUAL test fpdeflist
    (11) varargslist -> fpdef . fpdeflist COMMA
    (12) varargslist -> fpdef . fpdeflist
    (13) fpdeflist -> .
    (14) fpdeflist -> . fpdeflist COMMA fpdef
    (15) fpdeflist -> . fpdeflist COMMA fpdef EQUAL test

    EQUAL           shift and go to state 115
    COMMA           reduce using rule 13 (fpdeflist -> .)
    RPAREN          reduce using rule 13 (fpdeflist -> .)

    fpdeflist                      shift and go to state 116

state 105

    (7) parameters -> LPAREN varargslist . RPAREN

    RPAREN          shift and go to state 117


state 106

    (17) fpdef -> LPAREN . fplist RPAREN
    (18) fplist -> . fpdef fplist1 COMMA
    (19) fplist -> . fpdef fplist1
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    NAME            shift and go to state 103
    LPAREN          shift and go to state 106

    fplist                         shift and go to state 119
    fpdef                          shift and go to state 118

state 107

    (91) arglist -> arglist COMMA . argument
    (93) argument -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    argument                       shift and go to state 120
    atom                           shift and go to state 19
    test                           shift and go to state 82

state 108

    (85) trailer -> LPAREN arglist RPAREN .

    PLUS            reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    MINUS           reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    STAR            reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    SLASH           reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    LESS            reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    EQEQUAL         reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    GREATER         reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    COMMA           reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    PLUSEQUAL       reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    MINEQUAL        reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    STAREQUAL       reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    SLASHEQUAL      reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    PERCENTEQUAL    reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    STARSTAREQUAL   reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    SLASHSLASHEQUAL reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    EQUAL           reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    NEWLINE         reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    SEMI            reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)
    COLON           reduce using rule 85 (trailer -> LPAREN arglist RPAREN .)


state 109

    (58) if_stmt -> IF test COLON suite . elif_expr
    (59) if_stmt -> IF test COLON suite . elif_expr ELSE COLON suite
    (60) elif_expr -> .
    (61) elif_expr -> . ELIF test COLON suite elif_expr

    ELSE            reduce using rule 60 (elif_expr -> .)
    ENDMARKER       reduce using rule 60 (elif_expr -> .)
    NEWLINE         reduce using rule 60 (elif_expr -> .)
    IF              reduce using rule 60 (elif_expr -> .)
    FOR             reduce using rule 60 (elif_expr -> .)
    WHILE           reduce using rule 60 (elif_expr -> .)
    DEF             reduce using rule 60 (elif_expr -> .)
    PRINT           reduce using rule 60 (elif_expr -> .)
    PASS            reduce using rule 60 (elif_expr -> .)
    IMPORT          reduce using rule 60 (elif_expr -> .)
    GLOBAL          reduce using rule 60 (elif_expr -> .)
    ASSERT          reduce using rule 60 (elif_expr -> .)
    RETURN          reduce using rule 60 (elif_expr -> .)
    PLUS            reduce using rule 60 (elif_expr -> .)
    MINUS           reduce using rule 60 (elif_expr -> .)
    NAME            reduce using rule 60 (elif_expr -> .)
    NUMBER          reduce using rule 60 (elif_expr -> .)
    STRING          reduce using rule 60 (elif_expr -> .)
    LPAREN          reduce using rule 60 (elif_expr -> .)
    DEDENT          reduce using rule 60 (elif_expr -> .)
    ELIF            shift and go to state 121

    elif_expr                      shift and go to state 122

state 110

    (62) for_stmt -> FOR NAME IN test . COLON suite

    COLON           shift and go to state 123


state 111

    (38) eqtestlist -> eqtestlist EQUAL testlist .

    EQUAL           reduce using rule 38 (eqtestlist -> eqtestlist EQUAL testlist .)
    NEWLINE         reduce using rule 38 (eqtestlist -> eqtestlist EQUAL testlist .)
    SEMI            reduce using rule 38 (eqtestlist -> eqtestlist EQUAL testlist .)


state 112

    (66) suite -> NEWLINE INDENT . stmts DEDENT
    (67) stmts -> . stmts stmt
    (68) stmts -> . stmt
    (22) stmt -> . simple_stmt
    (23) stmt -> . compound_stmt
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (54) compound_stmt -> . if_stmt
    (55) compound_stmt -> . for_stmt
    (56) compound_stmt -> . while_stmt
    (57) compound_stmt -> . funcdef
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (58) if_stmt -> . IF test COLON suite elif_expr
    (59) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (62) for_stmt -> . FOR NAME IN test COLON suite
    (63) while_stmt -> . WHILE test COLON suite
    (64) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (5) funcdef -> . DEF NAME parameters COLON suite
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    IF              shift and go to state 25
    FOR             shift and go to state 29
    WHILE           shift and go to state 8
    DEF             shift and go to state 15
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    atom                           shift and go to state 19
    stmts                          shift and go to state 124
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    compound_stmt                  shift and go to state 26
    power                          shift and go to state 22
    simple_stmt                    shift and go to state 31
    testlist                       shift and go to state 32
    stmt                           shift and go to state 125
    assert_stmt                    shift and go to state 34
    for_stmt                       shift and go to state 35
    testlist_multi                 shift and go to state 36
    funcdef                        shift and go to state 37
    import_stmt                    shift and go to state 17
    pass_stmt                      shift and go to state 18
    comparison                     shift and go to state 30
    if_stmt                        shift and go to state 41
    while_stmt                     shift and go to state 42
    small_stmts                    shift and go to state 43

state 113

    (64) while_stmt -> WHILE test COLON suite ELSE . COLON suite

    COLON           shift and go to state 126


state 114

    (5) funcdef -> DEF NAME parameters COLON suite .

    ENDMARKER       reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    FOR             reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    WHILE           reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    PRINT           reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    PASS            reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    IMPORT          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    GLOBAL          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    ASSERT          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    LPAREN          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 5 (funcdef -> DEF NAME parameters COLON suite .)


state 115

    (9) varargslist -> fpdef EQUAL . test fpdeflist COMMA
    (10) varargslist -> fpdef EQUAL . test fpdeflist
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    atom                           shift and go to state 19
    test                           shift and go to state 127

state 116

    (11) varargslist -> fpdef fpdeflist . COMMA
    (12) varargslist -> fpdef fpdeflist .
    (14) fpdeflist -> fpdeflist . COMMA fpdef
    (15) fpdeflist -> fpdeflist . COMMA fpdef EQUAL test

    COMMA           shift and go to state 128
    RPAREN          reduce using rule 12 (varargslist -> fpdef fpdeflist .)


state 117

    (7) parameters -> LPAREN varargslist RPAREN .

    COLON           reduce using rule 7 (parameters -> LPAREN varargslist RPAREN .)


state 118

    (18) fplist -> fpdef . fplist1 COMMA
    (19) fplist -> fpdef . fplist1
    (20) fplist1 -> .
    (21) fplist1 -> . fplist1 COMMA fpdef

    COMMA           reduce using rule 20 (fplist1 -> .)
    RPAREN          reduce using rule 20 (fplist1 -> .)

    fplist1                        shift and go to state 129

state 119

    (17) fpdef -> LPAREN fplist . RPAREN

    RPAREN          shift and go to state 130


state 120

    (91) arglist -> arglist COMMA argument .

    RPAREN          reduce using rule 91 (arglist -> arglist COMMA argument .)
    COMMA           reduce using rule 91 (arglist -> arglist COMMA argument .)


state 121

    (61) elif_expr -> ELIF . test COLON suite elif_expr
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    atom                           shift and go to state 19
    test                           shift and go to state 131

state 122

    (58) if_stmt -> IF test COLON suite elif_expr .
    (59) if_stmt -> IF test COLON suite elif_expr . ELSE COLON suite

    DEDENT          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    IF              reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    FOR             reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    WHILE           reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    DEF             reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    PRINT           reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    PASS            reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    IMPORT          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    GLOBAL          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    ASSERT          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    RETURN          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    PLUS            reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    MINUS           reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    NAME            reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    NUMBER          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    STRING          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    LPAREN          reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    ENDMARKER       reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    NEWLINE         reduce using rule 58 (if_stmt -> IF test COLON suite elif_expr .)
    ELSE            shift and go to state 132


state 123

    (62) for_stmt -> FOR NAME IN test COLON . suite
    (65) suite -> . simple_stmt
    (66) suite -> . NEWLINE INDENT stmts DEDENT
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 98
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    power                          shift and go to state 22
    simple_stmt                    shift and go to state 99
    testlist                       shift and go to state 32
    small_stmts                    shift and go to state 43
    assert_stmt                    shift and go to state 34
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    import_stmt                    shift and go to state 17
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    suite                          shift and go to state 133

state 124

    (66) suite -> NEWLINE INDENT stmts . DEDENT
    (67) stmts -> stmts . stmt
    (22) stmt -> . simple_stmt
    (23) stmt -> . compound_stmt
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (54) compound_stmt -> . if_stmt
    (55) compound_stmt -> . for_stmt
    (56) compound_stmt -> . while_stmt
    (57) compound_stmt -> . funcdef
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (58) if_stmt -> . IF test COLON suite elif_expr
    (59) if_stmt -> . IF test COLON suite elif_expr ELSE COLON suite
    (62) for_stmt -> . FOR NAME IN test COLON suite
    (63) while_stmt -> . WHILE test COLON suite
    (64) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (5) funcdef -> . DEF NAME parameters COLON suite
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    DEDENT          shift and go to state 134
    IF              shift and go to state 25
    FOR             shift and go to state 29
    WHILE           shift and go to state 8
    DEF             shift and go to state 15
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    atom                           shift and go to state 19
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    compound_stmt                  shift and go to state 26
    power                          shift and go to state 22
    simple_stmt                    shift and go to state 31
    testlist                       shift and go to state 32
    stmt                           shift and go to state 135
    assert_stmt                    shift and go to state 34
    for_stmt                       shift and go to state 35
    testlist_multi                 shift and go to state 36
    funcdef                        shift and go to state 37
    import_stmt                    shift and go to state 17
    pass_stmt                      shift and go to state 18
    comparison                     shift and go to state 30
    if_stmt                        shift and go to state 41
    while_stmt                     shift and go to state 42
    small_stmts                    shift and go to state 43

state 125

    (68) stmts -> stmt .

    DEDENT          reduce using rule 68 (stmts -> stmt .)
    IF              reduce using rule 68 (stmts -> stmt .)
    FOR             reduce using rule 68 (stmts -> stmt .)
    WHILE           reduce using rule 68 (stmts -> stmt .)
    DEF             reduce using rule 68 (stmts -> stmt .)
    PRINT           reduce using rule 68 (stmts -> stmt .)
    PASS            reduce using rule 68 (stmts -> stmt .)
    IMPORT          reduce using rule 68 (stmts -> stmt .)
    GLOBAL          reduce using rule 68 (stmts -> stmt .)
    ASSERT          reduce using rule 68 (stmts -> stmt .)
    RETURN          reduce using rule 68 (stmts -> stmt .)
    PLUS            reduce using rule 68 (stmts -> stmt .)
    MINUS           reduce using rule 68 (stmts -> stmt .)
    NAME            reduce using rule 68 (stmts -> stmt .)
    NUMBER          reduce using rule 68 (stmts -> stmt .)
    STRING          reduce using rule 68 (stmts -> stmt .)
    LPAREN          reduce using rule 68 (stmts -> stmt .)


state 126

    (64) while_stmt -> WHILE test COLON suite ELSE COLON . suite
    (65) suite -> . simple_stmt
    (66) suite -> . NEWLINE INDENT stmts DEDENT
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 98
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    print_stmt                     shift and go to state 23
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    power                          shift and go to state 22
    simple_stmt                    shift and go to state 99
    testlist                       shift and go to state 32
    small_stmts                    shift and go to state 43
    assert_stmt                    shift and go to state 34
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    import_stmt                    shift and go to state 17
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    suite                          shift and go to state 136

state 127

    (9) varargslist -> fpdef EQUAL test . fpdeflist COMMA
    (10) varargslist -> fpdef EQUAL test . fpdeflist
    (13) fpdeflist -> .
    (14) fpdeflist -> . fpdeflist COMMA fpdef
    (15) fpdeflist -> . fpdeflist COMMA fpdef EQUAL test

    COMMA           reduce using rule 13 (fpdeflist -> .)
    RPAREN          reduce using rule 13 (fpdeflist -> .)

    fpdeflist                      shift and go to state 137

state 128

    (11) varargslist -> fpdef fpdeflist COMMA .
    (14) fpdeflist -> fpdeflist COMMA . fpdef
    (15) fpdeflist -> fpdeflist COMMA . fpdef EQUAL test
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    RPAREN          reduce using rule 11 (varargslist -> fpdef fpdeflist COMMA .)
    NAME            shift and go to state 103
    LPAREN          shift and go to state 106

    fpdef                          shift and go to state 138

state 129

    (18) fplist -> fpdef fplist1 . COMMA
    (19) fplist -> fpdef fplist1 .
    (21) fplist1 -> fplist1 . COMMA fpdef

    COMMA           shift and go to state 139
    RPAREN          reduce using rule 19 (fplist -> fpdef fplist1 .)


state 130

    (17) fpdef -> LPAREN fplist RPAREN .

    EQUAL           reduce using rule 17 (fpdef -> LPAREN fplist RPAREN .)
    COMMA           reduce using rule 17 (fpdef -> LPAREN fplist RPAREN .)
    RPAREN          reduce using rule 17 (fpdef -> LPAREN fplist RPAREN .)


state 131

    (61) elif_expr -> ELIF test . COLON suite elif_expr

    COLON           shift and go to state 140


state 132

    (59) if_stmt -> IF test COLON suite elif_expr ELSE . COLON suite

    COLON           shift and go to state 141


state 133

    (62) for_stmt -> FOR NAME IN test COLON suite .

    ENDMARKER       reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    NEWLINE         reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    IF              reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    FOR             reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    WHILE           reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    DEF             reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    PRINT           reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    PASS            reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    IMPORT          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    GLOBAL          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    ASSERT          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    RETURN          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    PLUS            reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    MINUS           reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    NAME            reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    NUMBER          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    STRING          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    LPAREN          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)
    DEDENT          reduce using rule 62 (for_stmt -> FOR NAME IN test COLON suite .)


state 134

    (66) suite -> NEWLINE INDENT stmts DEDENT .

    ENDMARKER       reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    FOR             reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    WHILE           reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    PRINT           reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    PASS            reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    IMPORT          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    GLOBAL          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    ASSERT          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAREN          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    ELIF            reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)
    ELSE            reduce using rule 66 (suite -> NEWLINE INDENT stmts DEDENT .)


state 135

    (67) stmts -> stmts stmt .

    DEDENT          reduce using rule 67 (stmts -> stmts stmt .)
    IF              reduce using rule 67 (stmts -> stmts stmt .)
    FOR             reduce using rule 67 (stmts -> stmts stmt .)
    WHILE           reduce using rule 67 (stmts -> stmts stmt .)
    DEF             reduce using rule 67 (stmts -> stmts stmt .)
    PRINT           reduce using rule 67 (stmts -> stmts stmt .)
    PASS            reduce using rule 67 (stmts -> stmts stmt .)
    IMPORT          reduce using rule 67 (stmts -> stmts stmt .)
    GLOBAL          reduce using rule 67 (stmts -> stmts stmt .)
    ASSERT          reduce using rule 67 (stmts -> stmts stmt .)
    RETURN          reduce using rule 67 (stmts -> stmts stmt .)
    PLUS            reduce using rule 67 (stmts -> stmts stmt .)
    MINUS           reduce using rule 67 (stmts -> stmts stmt .)
    NAME            reduce using rule 67 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 67 (stmts -> stmts stmt .)
    STRING          reduce using rule 67 (stmts -> stmts stmt .)
    LPAREN          reduce using rule 67 (stmts -> stmts stmt .)


state 136

    (64) while_stmt -> WHILE test COLON suite ELSE COLON suite .

    ENDMARKER       reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IF              reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FOR             reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEF             reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PASS            reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IMPORT          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    GLOBAL          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    ASSERT          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NAME            reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    STRING          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LPAREN          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEDENT          reduce using rule 64 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)


state 137

    (9) varargslist -> fpdef EQUAL test fpdeflist . COMMA
    (10) varargslist -> fpdef EQUAL test fpdeflist .
    (14) fpdeflist -> fpdeflist . COMMA fpdef
    (15) fpdeflist -> fpdeflist . COMMA fpdef EQUAL test

    COMMA           shift and go to state 142
    RPAREN          reduce using rule 10 (varargslist -> fpdef EQUAL test fpdeflist .)


state 138

    (14) fpdeflist -> fpdeflist COMMA fpdef .
    (15) fpdeflist -> fpdeflist COMMA fpdef . EQUAL test

    COMMA           reduce using rule 14 (fpdeflist -> fpdeflist COMMA fpdef .)
    RPAREN          reduce using rule 14 (fpdeflist -> fpdeflist COMMA fpdef .)
    EQUAL           shift and go to state 143


state 139

    (18) fplist -> fpdef fplist1 COMMA .
    (21) fplist1 -> fplist1 COMMA . fpdef
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    RPAREN          reduce using rule 18 (fplist -> fpdef fplist1 COMMA .)
    NAME            shift and go to state 103
    LPAREN          shift and go to state 106

    fpdef                          shift and go to state 144

state 140

    (61) elif_expr -> ELIF test COLON . suite elif_expr
    (65) suite -> . simple_stmt
    (66) suite -> . NEWLINE INDENT stmts DEDENT
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 98
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    simple_stmt                    shift and go to state 99
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    power                          shift and go to state 22
    print_stmt                     shift and go to state 23
    testlist                       shift and go to state 32
    assert_stmt                    shift and go to state 34
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    import_stmt                    shift and go to state 17
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    suite                          shift and go to state 145
    small_stmts                    shift and go to state 43

state 141

    (59) if_stmt -> IF test COLON suite elif_expr ELSE COLON . suite
    (65) suite -> . simple_stmt
    (66) suite -> . NEWLINE INDENT stmts DEDENT
    (24) simple_stmt -> . small_stmts NEWLINE
    (25) simple_stmt -> . small_stmts SEMI NEWLINE
    (26) small_stmts -> . small_stmts SEMI small_stmt
    (27) small_stmts -> . small_stmt
    (28) small_stmt -> . flow_stmt
    (29) small_stmt -> . expr_stmt
    (30) small_stmt -> . print_stmt
    (31) small_stmt -> . pass_stmt
    (32) small_stmt -> . import_stmt
    (33) small_stmt -> . global_stmt
    (34) small_stmt -> . assert_stmt
    (50) flow_stmt -> . return_stmt
    (35) expr_stmt -> . testlist augassign testlist
    (36) expr_stmt -> . testlist eqtestlist
    (46) print_stmt -> . PRINT
    (47) print_stmt -> . PRINT testlist
    (52) pass_stmt -> . PASS
    (53) import_stmt -> . IMPORT NAME
    (48) global_stmt -> . GLOBAL testlist
    (49) assert_stmt -> . ASSERT testlist
    (51) return_stmt -> . RETURN testlist
    (86) testlist -> . testlist_multi COMMA
    (87) testlist -> . testlist_multi
    (88) testlist_multi -> . testlist_multi COMMA test
    (89) testlist_multi -> . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    NEWLINE         shift and go to state 98
    PRINT           shift and go to state 11
    PASS            shift and go to state 13
    IMPORT          shift and go to state 10
    GLOBAL          shift and go to state 27
    ASSERT          shift and go to state 7
    RETURN          shift and go to state 12
    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 9
    flow_stmt                      shift and go to state 16
    expr_stmt                      shift and go to state 38
    simple_stmt                    shift and go to state 99
    test                           shift and go to state 24
    global_stmt                    shift and go to state 40
    power                          shift and go to state 22
    print_stmt                     shift and go to state 23
    testlist                       shift and go to state 32
    assert_stmt                    shift and go to state 34
    testlist_multi                 shift and go to state 36
    atom                           shift and go to state 19
    import_stmt                    shift and go to state 17
    comparison                     shift and go to state 30
    pass_stmt                      shift and go to state 18
    suite                          shift and go to state 146
    small_stmts                    shift and go to state 43

state 142

    (9) varargslist -> fpdef EQUAL test fpdeflist COMMA .
    (14) fpdeflist -> fpdeflist COMMA . fpdef
    (15) fpdeflist -> fpdeflist COMMA . fpdef EQUAL test
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    RPAREN          reduce using rule 9 (varargslist -> fpdef EQUAL test fpdeflist COMMA .)
    NAME            shift and go to state 103
    LPAREN          shift and go to state 106

    fpdef                          shift and go to state 138

state 143

    (15) fpdeflist -> fpdeflist COMMA fpdef EQUAL . test
    (90) test -> . comparison
    (69) comparison -> . comparison PLUS comparison
    (70) comparison -> . comparison MINUS comparison
    (71) comparison -> . comparison STAR comparison
    (72) comparison -> . comparison SLASH comparison
    (73) comparison -> . comparison LESS comparison
    (74) comparison -> . comparison EQEQUAL comparison
    (75) comparison -> . comparison GREATER comparison
    (76) comparison -> . PLUS comparison
    (77) comparison -> . MINUS comparison
    (78) comparison -> . power
    (79) power -> . atom
    (80) power -> . atom trailer
    (81) atom -> . NAME
    (82) atom -> . NUMBER
    (83) atom -> . STRING
    (84) atom -> . LPAREN testlist RPAREN

    PLUS            shift and go to state 21
    MINUS           shift and go to state 14
    NAME            shift and go to state 39
    NUMBER          shift and go to state 6
    STRING          shift and go to state 28
    LPAREN          shift and go to state 4

    comparison                     shift and go to state 30
    power                          shift and go to state 22
    atom                           shift and go to state 19
    test                           shift and go to state 147

state 144

    (21) fplist1 -> fplist1 COMMA fpdef .

    COMMA           reduce using rule 21 (fplist1 -> fplist1 COMMA fpdef .)
    RPAREN          reduce using rule 21 (fplist1 -> fplist1 COMMA fpdef .)


state 145

    (61) elif_expr -> ELIF test COLON suite . elif_expr
    (60) elif_expr -> .
    (61) elif_expr -> . ELIF test COLON suite elif_expr

    ELSE            reduce using rule 60 (elif_expr -> .)
    ENDMARKER       reduce using rule 60 (elif_expr -> .)
    NEWLINE         reduce using rule 60 (elif_expr -> .)
    IF              reduce using rule 60 (elif_expr -> .)
    FOR             reduce using rule 60 (elif_expr -> .)
    WHILE           reduce using rule 60 (elif_expr -> .)
    DEF             reduce using rule 60 (elif_expr -> .)
    PRINT           reduce using rule 60 (elif_expr -> .)
    PASS            reduce using rule 60 (elif_expr -> .)
    IMPORT          reduce using rule 60 (elif_expr -> .)
    GLOBAL          reduce using rule 60 (elif_expr -> .)
    ASSERT          reduce using rule 60 (elif_expr -> .)
    RETURN          reduce using rule 60 (elif_expr -> .)
    PLUS            reduce using rule 60 (elif_expr -> .)
    MINUS           reduce using rule 60 (elif_expr -> .)
    NAME            reduce using rule 60 (elif_expr -> .)
    NUMBER          reduce using rule 60 (elif_expr -> .)
    STRING          reduce using rule 60 (elif_expr -> .)
    LPAREN          reduce using rule 60 (elif_expr -> .)
    DEDENT          reduce using rule 60 (elif_expr -> .)
    ELIF            shift and go to state 121

    elif_expr                      shift and go to state 148

state 146

    (59) if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .

    DEDENT          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    IF              reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    FOR             reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    WHILE           reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    DEF             reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PRINT           reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PASS            reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    IMPORT          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    GLOBAL          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    ASSERT          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    RETURN          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    PLUS            reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    MINUS           reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NAME            reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NUMBER          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    STRING          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    LPAREN          reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    ENDMARKER       reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)
    NEWLINE         reduce using rule 59 (if_stmt -> IF test COLON suite elif_expr ELSE COLON suite .)


state 147

    (15) fpdeflist -> fpdeflist COMMA fpdef EQUAL test .

    COMMA           reduce using rule 15 (fpdeflist -> fpdeflist COMMA fpdef EQUAL test .)
    RPAREN          reduce using rule 15 (fpdeflist -> fpdeflist COMMA fpdef EQUAL test .)


state 148

    (61) elif_expr -> ELIF test COLON suite elif_expr .

    ELSE            reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    ENDMARKER       reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    NEWLINE         reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    IF              reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    FOR             reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    WHILE           reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    DEF             reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    PRINT           reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    PASS            reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    IMPORT          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    GLOBAL          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    ASSERT          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    RETURN          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    PLUS            reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    MINUS           reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    NAME            reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    NUMBER          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    STRING          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    LPAREN          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)
    DEDENT          reduce using rule 61 (elif_expr -> ELIF test COLON suite elif_expr .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for STAR in state 50 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 50 resolved as shift
WARNING: shift/reduce conflict for LESS in state 50 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for STAR in state 54 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS in state 54 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 54 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for STAR in state 86 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 86 resolved as shift
WARNING: shift/reduce conflict for LESS in state 86 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for STAR in state 87 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 87 resolved as shift
WARNING: shift/reduce conflict for LESS in state 87 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for STAR in state 88 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 88 resolved as shift
WARNING: shift/reduce conflict for LESS in state 88 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for STAR in state 89 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 89 resolved as shift
WARNING: shift/reduce conflict for LESS in state 89 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for STAR in state 90 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 90 resolved as shift
WARNING: shift/reduce conflict for LESS in state 90 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for STAR in state 91 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 91 resolved as shift
WARNING: shift/reduce conflict for LESS in state 91 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 91 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for STAR in state 92 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 92 resolved as shift
WARNING: shift/reduce conflict for LESS in state 92 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 92 resolved as shift
