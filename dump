PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(DEF,'def',1,0)
Action : Reduce rule [single_stmt -> <empty>] with [] and goto state 4
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : single_stmt . LexToken(DEF,'def',1,0)
Action : Shift and goto state 25

State  : 25
Stack  : single_stmt DEF . LexToken(NAME,'f',1,4)
Action : Shift and goto state 95

State  : 95
Stack  : single_stmt DEF NAME . LexToken(LPAREN,'(',1,5)
Action : Shift and goto state 162

State  : 162
Stack  : single_stmt DEF NAME LPAREN . LexToken(RPAREN,')',1,6)
Action : Reduce rule [varargslist -> <empty>] with [] and goto state 7
Result : <NoneType @ 0x8b8800> (None)

State  : 212
Stack  : single_stmt DEF NAME LPAREN varargslist . LexToken(RPAREN,')',1,6)
Action : Shift and goto state 247

State  : 247
Stack  : single_stmt DEF NAME LPAREN varargslist RPAREN . LexToken(COLON,':',1,7)
Action : Reduce rule [parameters -> LPAREN varargslist RPAREN] with ['(',None,')'] and goto state 6
Result : <NoneType @ 0x8b8800> (None)

State  : 161
Stack  : single_stmt DEF NAME parameters . LexToken(COLON,':',1,7)
Action : Shift and goto state 209

State  : 209
Stack  : single_stmt DEF NAME parameters COLON . LexToken(NEWLINE,'\n',1,8)
Action : Shift and goto state 221

State  : 221
Stack  : single_stmt DEF NAME parameters COLON NEWLINE . LexToken(INDENT,None,2,-100)
Action : Shift and goto state 253

State  : 253
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT . LexToken(PRINT,'print',2,10)
Action : Shift and goto state 24

State  : 24
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT . LexToken(NAME,'a',2,16)
Action : Shift and goto state 53

State  : 53
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT NAME . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [atom -> NAME] with ['a'] and goto state 137
Result : <NoneType @ 0x8b8800> (None)

State  : 49
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT atom . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [trailerlist -> <empty>] with [] and goto state 128
Result : <NoneType @ 0x8b8800> (None)

State  : 117
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT atom trailerlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [power -> atom trailerlist] with [None,None] and goto state 126
Result : <NoneType @ 0x8b8800> (None)

State  : 32
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT power . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [factor -> power] with [None] and goto state 122
Result : <NoneType @ 0x8b8800> (None)

State  : 9
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT factor . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [factorlist -> <empty>] with [] and goto state 117
Result : <NoneType @ 0x8b8800> (None)

State  : 74
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT factor factorlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [term -> factor factorlist] with [None,None] and goto state 116
Result : <NoneType @ 0x8b8800> (None)

State  : 20
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT term . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [termlist -> <empty>] with [] and goto state 113
Result : <NoneType @ 0x8b8800> (None)

State  : 90
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT term termlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [arith_expr -> term termlist] with [None,None] and goto state 112
Result : <NoneType @ 0x8b8800> (None)

State  : 38
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT arith_expr . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [arithexprlist -> <empty>] with [] and goto state 109
Result : <NoneType @ 0x8b8800> (None)

State  : 108
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT arith_expr arithexprlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [shift_expr -> arith_expr arithexprlist] with [None,None] and goto state 108
Result : <NoneType @ 0x8b8800> (None)

State  : 28
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT shift_expr . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [shiftexprlist -> <empty>] with [] and goto state 106
Result : <NoneType @ 0x8b8800> (None)

State  : 98
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT shift_expr shiftexprlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [and_expr -> shift_expr shiftexprlist] with [None,None] and goto state 105
Result : <NoneType @ 0x8b8800> (None)

State  : 11
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT and_expr . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [andexprlist -> <empty>] with [] and goto state 103
Result : <NoneType @ 0x8b8800> (None)

State  : 78
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT and_expr andexprlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [xor_expr -> and_expr andexprlist] with [None,None] and goto state 102
Result : <NoneType @ 0x8b8800> (None)

State  : 45
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT xor_expr . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [xorexprlist -> <empty>] with [] and goto state 100
Result : <NoneType @ 0x8b8800> (None)

State  : 114
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT xor_expr xorexprlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [expr -> xor_expr xorexprlist] with [None,None] and goto state 99
Result : <NoneType @ 0x8b8800> (None)

State  : 54
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT expr . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [compexprlist -> <empty>] with [] and goto state 87
Result : <NoneType @ 0x8b8800> (None)

State  : 134
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT expr compexprlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [comparison -> expr compexprlist] with [None,None] and goto state 86
Result : <NoneType @ 0x8b8800> (None)

State  : 35
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT comparison . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [not_test -> comparison] with [None] and goto state 85
Result : <NoneType @ 0x8b8800> (None)

State  : 58
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT not_test . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [andtestlist -> <empty>] with [] and goto state 82
Result : <NoneType @ 0x8b8800> (None)

State  : 138
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT not_test andtestlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [and_test -> not_test andtestlist] with [None,None] and goto state 81
Result : <NoneType @ 0x8b8800> (None)

State  : 63
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT and_test . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [ortestlist -> <empty>] with [] and goto state 79
Result : <NoneType @ 0x8b8800> (None)

State  : 141
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT and_test ortestlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [or_test -> and_test ortestlist] with [None,None] and goto state 78
Result : <NoneType @ 0x8b8800> (None)

State  : 22
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT or_test . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [test -> or_test] with [None] and goto state 76
Result : <NoneType @ 0x8b8800> (None)

State  : 16
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT test . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [testlist -> test] with [None] and goto state 169
Result : <NoneType @ 0x8b8800> (None)

State  : 94
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT PRINT testlist . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [print_stmt -> PRINT testlist] with ['print',None] and goto state 46
Result : <NoneType @ 0x8b8800> (None)

State  : 48
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT print_stmt . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [small_stmt -> print_stmt] with [None] and goto state 29
Result : <NoneType @ 0x8b8800> (None)

State  : 4
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT small_stmt . LexToken(NEWLINE,'\n\n',2,17)
Action : Reduce rule [small_stmts -> small_stmt] with [None] and goto state 26
Result : <NoneType @ 0x8b8800> (None)

State  : 41
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT small_stmts . LexToken(NEWLINE,'\n\n',2,17)
Action : Shift and goto state 110

State  : 110
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT small_stmts NEWLINE . LexToken(DEDENT,None,4,-100)
Action : Reduce rule [simple_stmt -> small_stmts NEWLINE] with [None,'\n\n'] and goto state 23
Result : <NoneType @ 0x8b8800> (None)

State  : 12
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT simple_stmt . LexToken(DEDENT,None,4,-100)
Action : Reduce rule [stmt -> simple_stmt] with [None] and goto state 21
Result : <NoneType @ 0x8b8800> (None)

State  : 275
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT stmt . LexToken(DEDENT,None,4,-100)
Action : Reduce rule [stmts -> stmt] with [None] and goto state 188
Result : <NoneType @ 0x8b8800> (None)

State  : 274
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT stmts . LexToken(DEDENT,None,4,-100)
Action : Shift and goto state 286

State  : 286
Stack  : single_stmt DEF NAME parameters COLON NEWLINE INDENT stmts DEDENT . LexToken(ENDMARKER,None,4,-100)
Action : Reduce rule [suite -> NEWLINE INDENT stmts DEDENT] with ['\n',None,None,None] and goto state 75
Result : <NoneType @ 0x8b8800> (None)

State  : 244
Stack  : single_stmt DEF NAME parameters COLON suite . LexToken(ENDMARKER,None,4,-100)
Action : Reduce rule [funcdef -> DEF NAME parameters COLON suite] with ['def','f',None,':',None] and goto state 5
Result : <NoneType @ 0x8b8800> (None)

State  : 50
Stack  : single_stmt funcdef . LexToken(ENDMARKER,None,4,-100)
Action : Reduce rule [compound_stmt -> funcdef] with [None] and goto state 64
Result : <NoneType @ 0x8b8800> (None)

State  : 30
Stack  : single_stmt compound_stmt . LexToken(ENDMARKER,None,4,-100)
Action : Reduce rule [stmt -> compound_stmt] with [None] and goto state 22
Result : <NoneType @ 0x8b8800> (None)

State  : 33
Stack  : single_stmt stmt . LexToken(ENDMARKER,None,4,-100)
Action : Reduce rule [single_stmt -> single_stmt stmt] with [None,None] and goto state 3
Result : <NoneType @ 0x8b8800> (None)

State  : 2
Stack  : single_stmt . LexToken(ENDMARKER,None,4,-100)
Action : Shift and goto state 3

State  : 3
Stack  : single_stmt ENDMARKER . $end
Action : Reduce rule [file_input -> single_stmt ENDMARKER] with [None,None] and goto state 1
Result : <NoneType @ 0x8b8800> (None)

State  : 1
Stack  : file_input . $end
Done   : Returning <NoneType @ 0x8b8800> (None)
PLY: PARSE DEBUG END
